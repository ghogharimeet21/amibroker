// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: MarketDataFeedV3.proto
// Protobuf C++ Version: 5.29.2

#ifndef MarketDataFeedV3_2eproto_2epb_2eh
#define MarketDataFeedV3_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_MarketDataFeedV3_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_MarketDataFeedV3_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_MarketDataFeedV3_2eproto;
namespace upstox {
class Feed;
struct FeedDefaultTypeInternal;
extern FeedDefaultTypeInternal _Feed_default_instance_;
class FeedResponse;
struct FeedResponseDefaultTypeInternal;
extern FeedResponseDefaultTypeInternal _FeedResponse_default_instance_;
class FeedResponse_FeedsEntry_DoNotUse;
struct FeedResponse_FeedsEntry_DoNotUseDefaultTypeInternal;
extern FeedResponse_FeedsEntry_DoNotUseDefaultTypeInternal _FeedResponse_FeedsEntry_DoNotUse_default_instance_;
class FirstLevelWithGreeks;
struct FirstLevelWithGreeksDefaultTypeInternal;
extern FirstLevelWithGreeksDefaultTypeInternal _FirstLevelWithGreeks_default_instance_;
class FullFeed;
struct FullFeedDefaultTypeInternal;
extern FullFeedDefaultTypeInternal _FullFeed_default_instance_;
class IndexFullFeed;
struct IndexFullFeedDefaultTypeInternal;
extern IndexFullFeedDefaultTypeInternal _IndexFullFeed_default_instance_;
class LTPC;
struct LTPCDefaultTypeInternal;
extern LTPCDefaultTypeInternal _LTPC_default_instance_;
class MarketFullFeed;
struct MarketFullFeedDefaultTypeInternal;
extern MarketFullFeedDefaultTypeInternal _MarketFullFeed_default_instance_;
class MarketInfo;
struct MarketInfoDefaultTypeInternal;
extern MarketInfoDefaultTypeInternal _MarketInfo_default_instance_;
class MarketInfo_SegmentStatusEntry_DoNotUse;
struct MarketInfo_SegmentStatusEntry_DoNotUseDefaultTypeInternal;
extern MarketInfo_SegmentStatusEntry_DoNotUseDefaultTypeInternal _MarketInfo_SegmentStatusEntry_DoNotUse_default_instance_;
class MarketLevel;
struct MarketLevelDefaultTypeInternal;
extern MarketLevelDefaultTypeInternal _MarketLevel_default_instance_;
class MarketOHLC;
struct MarketOHLCDefaultTypeInternal;
extern MarketOHLCDefaultTypeInternal _MarketOHLC_default_instance_;
class OHLC;
struct OHLCDefaultTypeInternal;
extern OHLCDefaultTypeInternal _OHLC_default_instance_;
class OptionGreeks;
struct OptionGreeksDefaultTypeInternal;
extern OptionGreeksDefaultTypeInternal _OptionGreeks_default_instance_;
class Quote;
struct QuoteDefaultTypeInternal;
extern QuoteDefaultTypeInternal _Quote_default_instance_;
}  // namespace upstox
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace upstox {
enum Type : int {
  initial_feed = 0,
  live_feed = 1,
  market_info = 2,
  Type_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Type_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Type_IsValid(int value);
extern const uint32_t Type_internal_data_[];
constexpr Type Type_MIN = static_cast<Type>(0);
constexpr Type Type_MAX = static_cast<Type>(2);
constexpr int Type_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
Type_descriptor();
template <typename T>
const std::string& Type_Name(T value) {
  static_assert(std::is_same<T, Type>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Type_Name().");
  return Type_Name(static_cast<Type>(value));
}
template <>
inline const std::string& Type_Name(Type value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Type_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool Type_Parse(absl::string_view name, Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Type>(
      Type_descriptor(), name, value);
}
enum RequestMode : int {
  ltpc = 0,
  full_d5 = 1,
  option_greeks = 2,
  full_d30 = 3,
  RequestMode_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  RequestMode_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool RequestMode_IsValid(int value);
extern const uint32_t RequestMode_internal_data_[];
constexpr RequestMode RequestMode_MIN = static_cast<RequestMode>(0);
constexpr RequestMode RequestMode_MAX = static_cast<RequestMode>(3);
constexpr int RequestMode_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
RequestMode_descriptor();
template <typename T>
const std::string& RequestMode_Name(T value) {
  static_assert(std::is_same<T, RequestMode>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to RequestMode_Name().");
  return RequestMode_Name(static_cast<RequestMode>(value));
}
template <>
inline const std::string& RequestMode_Name(RequestMode value) {
  return ::google::protobuf::internal::NameOfDenseEnum<RequestMode_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool RequestMode_Parse(absl::string_view name, RequestMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RequestMode>(
      RequestMode_descriptor(), name, value);
}
enum MarketStatus : int {
  PRE_OPEN_START = 0,
  PRE_OPEN_END = 1,
  NORMAL_OPEN = 2,
  NORMAL_CLOSE = 3,
  CLOSING_START = 4,
  CLOSING_END = 5,
  MarketStatus_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  MarketStatus_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool MarketStatus_IsValid(int value);
extern const uint32_t MarketStatus_internal_data_[];
constexpr MarketStatus MarketStatus_MIN = static_cast<MarketStatus>(0);
constexpr MarketStatus MarketStatus_MAX = static_cast<MarketStatus>(5);
constexpr int MarketStatus_ARRAYSIZE = 5 + 1;
const ::google::protobuf::EnumDescriptor*
MarketStatus_descriptor();
template <typename T>
const std::string& MarketStatus_Name(T value) {
  static_assert(std::is_same<T, MarketStatus>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to MarketStatus_Name().");
  return MarketStatus_Name(static_cast<MarketStatus>(value));
}
template <>
inline const std::string& MarketStatus_Name(MarketStatus value) {
  return ::google::protobuf::internal::NameOfDenseEnum<MarketStatus_descriptor,
                                                 0, 5>(
      static_cast<int>(value));
}
inline bool MarketStatus_Parse(absl::string_view name, MarketStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MarketStatus>(
      MarketStatus_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class Quote final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:upstox.Quote) */ {
 public:
  inline Quote() : Quote(nullptr) {}
  ~Quote() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Quote* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Quote));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Quote(
      ::google::protobuf::internal::ConstantInitialized);

  inline Quote(const Quote& from) : Quote(nullptr, from) {}
  inline Quote(Quote&& from) noexcept
      : Quote(nullptr, std::move(from)) {}
  inline Quote& operator=(const Quote& from) {
    CopyFrom(from);
    return *this;
  }
  inline Quote& operator=(Quote&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Quote& default_instance() {
    return *internal_default_instance();
  }
  static inline const Quote* internal_default_instance() {
    return reinterpret_cast<const Quote*>(
        &_Quote_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(Quote& a, Quote& b) { a.Swap(&b); }
  inline void Swap(Quote* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Quote* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Quote* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Quote>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Quote& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Quote& from) { Quote::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Quote* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "upstox.Quote"; }

 protected:
  explicit Quote(::google::protobuf::Arena* arena);
  Quote(::google::protobuf::Arena* arena, const Quote& from);
  Quote(::google::protobuf::Arena* arena, Quote&& from) noexcept
      : Quote(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBidQFieldNumber = 1,
    kBidPFieldNumber = 2,
    kAskQFieldNumber = 3,
    kAskPFieldNumber = 4,
  };
  // int64 bidQ = 1;
  void clear_bidq() ;
  ::int64_t bidq() const;
  void set_bidq(::int64_t value);

  private:
  ::int64_t _internal_bidq() const;
  void _internal_set_bidq(::int64_t value);

  public:
  // double bidP = 2;
  void clear_bidp() ;
  double bidp() const;
  void set_bidp(double value);

  private:
  double _internal_bidp() const;
  void _internal_set_bidp(double value);

  public:
  // int64 askQ = 3;
  void clear_askq() ;
  ::int64_t askq() const;
  void set_askq(::int64_t value);

  private:
  ::int64_t _internal_askq() const;
  void _internal_set_askq(::int64_t value);

  public:
  // double askP = 4;
  void clear_askp() ;
  double askp() const;
  void set_askp(double value);

  private:
  double _internal_askp() const;
  void _internal_set_askp(double value);

  public:
  // @@protoc_insertion_point(class_scope:upstox.Quote)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Quote& from_msg);
    ::int64_t bidq_;
    double bidp_;
    ::int64_t askq_;
    double askp_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MarketDataFeedV3_2eproto;
};
// -------------------------------------------------------------------

class OptionGreeks final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:upstox.OptionGreeks) */ {
 public:
  inline OptionGreeks() : OptionGreeks(nullptr) {}
  ~OptionGreeks() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(OptionGreeks* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(OptionGreeks));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OptionGreeks(
      ::google::protobuf::internal::ConstantInitialized);

  inline OptionGreeks(const OptionGreeks& from) : OptionGreeks(nullptr, from) {}
  inline OptionGreeks(OptionGreeks&& from) noexcept
      : OptionGreeks(nullptr, std::move(from)) {}
  inline OptionGreeks& operator=(const OptionGreeks& from) {
    CopyFrom(from);
    return *this;
  }
  inline OptionGreeks& operator=(OptionGreeks&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OptionGreeks& default_instance() {
    return *internal_default_instance();
  }
  static inline const OptionGreeks* internal_default_instance() {
    return reinterpret_cast<const OptionGreeks*>(
        &_OptionGreeks_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(OptionGreeks& a, OptionGreeks& b) { a.Swap(&b); }
  inline void Swap(OptionGreeks* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OptionGreeks* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OptionGreeks* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<OptionGreeks>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OptionGreeks& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OptionGreeks& from) { OptionGreeks::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(OptionGreeks* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "upstox.OptionGreeks"; }

 protected:
  explicit OptionGreeks(::google::protobuf::Arena* arena);
  OptionGreeks(::google::protobuf::Arena* arena, const OptionGreeks& from);
  OptionGreeks(::google::protobuf::Arena* arena, OptionGreeks&& from) noexcept
      : OptionGreeks(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDeltaFieldNumber = 1,
    kThetaFieldNumber = 2,
    kGammaFieldNumber = 3,
    kVegaFieldNumber = 4,
    kRhoFieldNumber = 5,
  };
  // double delta = 1;
  void clear_delta() ;
  double delta() const;
  void set_delta(double value);

  private:
  double _internal_delta() const;
  void _internal_set_delta(double value);

  public:
  // double theta = 2;
  void clear_theta() ;
  double theta() const;
  void set_theta(double value);

  private:
  double _internal_theta() const;
  void _internal_set_theta(double value);

  public:
  // double gamma = 3;
  void clear_gamma() ;
  double gamma() const;
  void set_gamma(double value);

  private:
  double _internal_gamma() const;
  void _internal_set_gamma(double value);

  public:
  // double vega = 4;
  void clear_vega() ;
  double vega() const;
  void set_vega(double value);

  private:
  double _internal_vega() const;
  void _internal_set_vega(double value);

  public:
  // double rho = 5;
  void clear_rho() ;
  double rho() const;
  void set_rho(double value);

  private:
  double _internal_rho() const;
  void _internal_set_rho(double value);

  public:
  // @@protoc_insertion_point(class_scope:upstox.OptionGreeks)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OptionGreeks& from_msg);
    double delta_;
    double theta_;
    double gamma_;
    double vega_;
    double rho_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MarketDataFeedV3_2eproto;
};
// -------------------------------------------------------------------

class OHLC final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:upstox.OHLC) */ {
 public:
  inline OHLC() : OHLC(nullptr) {}
  ~OHLC() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(OHLC* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(OHLC));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OHLC(
      ::google::protobuf::internal::ConstantInitialized);

  inline OHLC(const OHLC& from) : OHLC(nullptr, from) {}
  inline OHLC(OHLC&& from) noexcept
      : OHLC(nullptr, std::move(from)) {}
  inline OHLC& operator=(const OHLC& from) {
    CopyFrom(from);
    return *this;
  }
  inline OHLC& operator=(OHLC&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OHLC& default_instance() {
    return *internal_default_instance();
  }
  static inline const OHLC* internal_default_instance() {
    return reinterpret_cast<const OHLC*>(
        &_OHLC_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(OHLC& a, OHLC& b) { a.Swap(&b); }
  inline void Swap(OHLC* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OHLC* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OHLC* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<OHLC>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OHLC& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OHLC& from) { OHLC::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(OHLC* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "upstox.OHLC"; }

 protected:
  explicit OHLC(::google::protobuf::Arena* arena);
  OHLC(::google::protobuf::Arena* arena, const OHLC& from);
  OHLC(::google::protobuf::Arena* arena, OHLC&& from) noexcept
      : OHLC(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIntervalFieldNumber = 1,
    kOpenFieldNumber = 2,
    kHighFieldNumber = 3,
    kLowFieldNumber = 4,
    kCloseFieldNumber = 5,
    kVolFieldNumber = 6,
    kTsFieldNumber = 7,
  };
  // string interval = 1;
  void clear_interval() ;
  const std::string& interval() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_interval(Arg_&& arg, Args_... args);
  std::string* mutable_interval();
  PROTOBUF_NODISCARD std::string* release_interval();
  void set_allocated_interval(std::string* value);

  private:
  const std::string& _internal_interval() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_interval(
      const std::string& value);
  std::string* _internal_mutable_interval();

  public:
  // double open = 2;
  void clear_open() ;
  double open() const;
  void set_open(double value);

  private:
  double _internal_open() const;
  void _internal_set_open(double value);

  public:
  // double high = 3;
  void clear_high() ;
  double high() const;
  void set_high(double value);

  private:
  double _internal_high() const;
  void _internal_set_high(double value);

  public:
  // double low = 4;
  void clear_low() ;
  double low() const;
  void set_low(double value);

  private:
  double _internal_low() const;
  void _internal_set_low(double value);

  public:
  // double close = 5;
  void clear_close() ;
  double close() const;
  void set_close(double value);

  private:
  double _internal_close() const;
  void _internal_set_close(double value);

  public:
  // int64 vol = 6;
  void clear_vol() ;
  ::int64_t vol() const;
  void set_vol(::int64_t value);

  private:
  ::int64_t _internal_vol() const;
  void _internal_set_vol(::int64_t value);

  public:
  // int64 ts = 7;
  void clear_ts() ;
  ::int64_t ts() const;
  void set_ts(::int64_t value);

  private:
  ::int64_t _internal_ts() const;
  void _internal_set_ts(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:upstox.OHLC)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      28, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OHLC& from_msg);
    ::google::protobuf::internal::ArenaStringPtr interval_;
    double open_;
    double high_;
    double low_;
    double close_;
    ::int64_t vol_;
    ::int64_t ts_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MarketDataFeedV3_2eproto;
};
// -------------------------------------------------------------------

class MarketInfo_SegmentStatusEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, ::upstox::MarketStatus,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_ENUM> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, ::upstox::MarketStatus,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>;
  MarketInfo_SegmentStatusEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MarketInfo_SegmentStatusEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit MarketInfo_SegmentStatusEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const MarketInfo_SegmentStatusEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const MarketInfo_SegmentStatusEntry_DoNotUse*>(
        &_MarketInfo_SegmentStatusEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_MarketDataFeedV3_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      48, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class LTPC final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:upstox.LTPC) */ {
 public:
  inline LTPC() : LTPC(nullptr) {}
  ~LTPC() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LTPC* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LTPC));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LTPC(
      ::google::protobuf::internal::ConstantInitialized);

  inline LTPC(const LTPC& from) : LTPC(nullptr, from) {}
  inline LTPC(LTPC&& from) noexcept
      : LTPC(nullptr, std::move(from)) {}
  inline LTPC& operator=(const LTPC& from) {
    CopyFrom(from);
    return *this;
  }
  inline LTPC& operator=(LTPC&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LTPC& default_instance() {
    return *internal_default_instance();
  }
  static inline const LTPC* internal_default_instance() {
    return reinterpret_cast<const LTPC*>(
        &_LTPC_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(LTPC& a, LTPC& b) { a.Swap(&b); }
  inline void Swap(LTPC* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LTPC* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LTPC* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LTPC>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LTPC& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LTPC& from) { LTPC::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LTPC* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "upstox.LTPC"; }

 protected:
  explicit LTPC(::google::protobuf::Arena* arena);
  LTPC(::google::protobuf::Arena* arena, const LTPC& from);
  LTPC(::google::protobuf::Arena* arena, LTPC&& from) noexcept
      : LTPC(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLtpFieldNumber = 1,
    kLttFieldNumber = 2,
    kCpFieldNumber = 3,
  };
  // double ltp = 1;
  void clear_ltp() ;
  double ltp() const;
  void set_ltp(double value);

  private:
  double _internal_ltp() const;
  void _internal_set_ltp(double value);

  public:
  // int64 ltt = 2;
  void clear_ltt() ;
  ::int64_t ltt() const;
  void set_ltt(::int64_t value);

  private:
  ::int64_t _internal_ltt() const;
  void _internal_set_ltt(::int64_t value);

  public:
  // double cp = 3;
  void clear_cp() ;
  double cp() const;
  void set_cp(double value);

  private:
  double _internal_cp() const;
  void _internal_set_cp(double value);

  public:
  // @@protoc_insertion_point(class_scope:upstox.LTPC)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LTPC& from_msg);
    double ltp_;
    ::int64_t ltt_;
    double cp_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MarketDataFeedV3_2eproto;
};
// -------------------------------------------------------------------

class MarketOHLC final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:upstox.MarketOHLC) */ {
 public:
  inline MarketOHLC() : MarketOHLC(nullptr) {}
  ~MarketOHLC() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MarketOHLC* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MarketOHLC));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MarketOHLC(
      ::google::protobuf::internal::ConstantInitialized);

  inline MarketOHLC(const MarketOHLC& from) : MarketOHLC(nullptr, from) {}
  inline MarketOHLC(MarketOHLC&& from) noexcept
      : MarketOHLC(nullptr, std::move(from)) {}
  inline MarketOHLC& operator=(const MarketOHLC& from) {
    CopyFrom(from);
    return *this;
  }
  inline MarketOHLC& operator=(MarketOHLC&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MarketOHLC& default_instance() {
    return *internal_default_instance();
  }
  static inline const MarketOHLC* internal_default_instance() {
    return reinterpret_cast<const MarketOHLC*>(
        &_MarketOHLC_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(MarketOHLC& a, MarketOHLC& b) { a.Swap(&b); }
  inline void Swap(MarketOHLC* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MarketOHLC* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MarketOHLC* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MarketOHLC>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MarketOHLC& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MarketOHLC& from) { MarketOHLC::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MarketOHLC* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "upstox.MarketOHLC"; }

 protected:
  explicit MarketOHLC(::google::protobuf::Arena* arena);
  MarketOHLC(::google::protobuf::Arena* arena, const MarketOHLC& from);
  MarketOHLC(::google::protobuf::Arena* arena, MarketOHLC&& from) noexcept
      : MarketOHLC(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOhlcFieldNumber = 1,
  };
  // repeated .upstox.OHLC ohlc = 1;
  int ohlc_size() const;
  private:
  int _internal_ohlc_size() const;

  public:
  void clear_ohlc() ;
  ::upstox::OHLC* mutable_ohlc(int index);
  ::google::protobuf::RepeatedPtrField<::upstox::OHLC>* mutable_ohlc();

  private:
  const ::google::protobuf::RepeatedPtrField<::upstox::OHLC>& _internal_ohlc() const;
  ::google::protobuf::RepeatedPtrField<::upstox::OHLC>* _internal_mutable_ohlc();
  public:
  const ::upstox::OHLC& ohlc(int index) const;
  ::upstox::OHLC* add_ohlc();
  const ::google::protobuf::RepeatedPtrField<::upstox::OHLC>& ohlc() const;
  // @@protoc_insertion_point(class_scope:upstox.MarketOHLC)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MarketOHLC& from_msg);
    ::google::protobuf::RepeatedPtrField< ::upstox::OHLC > ohlc_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MarketDataFeedV3_2eproto;
};
// -------------------------------------------------------------------

class MarketLevel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:upstox.MarketLevel) */ {
 public:
  inline MarketLevel() : MarketLevel(nullptr) {}
  ~MarketLevel() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MarketLevel* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MarketLevel));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MarketLevel(
      ::google::protobuf::internal::ConstantInitialized);

  inline MarketLevel(const MarketLevel& from) : MarketLevel(nullptr, from) {}
  inline MarketLevel(MarketLevel&& from) noexcept
      : MarketLevel(nullptr, std::move(from)) {}
  inline MarketLevel& operator=(const MarketLevel& from) {
    CopyFrom(from);
    return *this;
  }
  inline MarketLevel& operator=(MarketLevel&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MarketLevel& default_instance() {
    return *internal_default_instance();
  }
  static inline const MarketLevel* internal_default_instance() {
    return reinterpret_cast<const MarketLevel*>(
        &_MarketLevel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(MarketLevel& a, MarketLevel& b) { a.Swap(&b); }
  inline void Swap(MarketLevel* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MarketLevel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MarketLevel* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MarketLevel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MarketLevel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MarketLevel& from) { MarketLevel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MarketLevel* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "upstox.MarketLevel"; }

 protected:
  explicit MarketLevel(::google::protobuf::Arena* arena);
  MarketLevel(::google::protobuf::Arena* arena, const MarketLevel& from);
  MarketLevel(::google::protobuf::Arena* arena, MarketLevel&& from) noexcept
      : MarketLevel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBidAskQuoteFieldNumber = 1,
  };
  // repeated .upstox.Quote bidAskQuote = 1;
  int bidaskquote_size() const;
  private:
  int _internal_bidaskquote_size() const;

  public:
  void clear_bidaskquote() ;
  ::upstox::Quote* mutable_bidaskquote(int index);
  ::google::protobuf::RepeatedPtrField<::upstox::Quote>* mutable_bidaskquote();

  private:
  const ::google::protobuf::RepeatedPtrField<::upstox::Quote>& _internal_bidaskquote() const;
  ::google::protobuf::RepeatedPtrField<::upstox::Quote>* _internal_mutable_bidaskquote();
  public:
  const ::upstox::Quote& bidaskquote(int index) const;
  ::upstox::Quote* add_bidaskquote();
  const ::google::protobuf::RepeatedPtrField<::upstox::Quote>& bidaskquote() const;
  // @@protoc_insertion_point(class_scope:upstox.MarketLevel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MarketLevel& from_msg);
    ::google::protobuf::RepeatedPtrField< ::upstox::Quote > bidaskquote_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MarketDataFeedV3_2eproto;
};
// -------------------------------------------------------------------

class MarketInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:upstox.MarketInfo) */ {
 public:
  inline MarketInfo() : MarketInfo(nullptr) {}
  ~MarketInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MarketInfo* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MarketInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MarketInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline MarketInfo(const MarketInfo& from) : MarketInfo(nullptr, from) {}
  inline MarketInfo(MarketInfo&& from) noexcept
      : MarketInfo(nullptr, std::move(from)) {}
  inline MarketInfo& operator=(const MarketInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline MarketInfo& operator=(MarketInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MarketInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const MarketInfo* internal_default_instance() {
    return reinterpret_cast<const MarketInfo*>(
        &_MarketInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(MarketInfo& a, MarketInfo& b) { a.Swap(&b); }
  inline void Swap(MarketInfo* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MarketInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MarketInfo* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MarketInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MarketInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MarketInfo& from) { MarketInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MarketInfo* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "upstox.MarketInfo"; }

 protected:
  explicit MarketInfo(::google::protobuf::Arena* arena);
  MarketInfo(::google::protobuf::Arena* arena, const MarketInfo& from);
  MarketInfo(::google::protobuf::Arena* arena, MarketInfo&& from) noexcept
      : MarketInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSegmentStatusFieldNumber = 1,
  };
  // map<string, .upstox.MarketStatus> segmentStatus = 1;
  int segmentstatus_size() const;
  private:
  int _internal_segmentstatus_size() const;

  public:
  void clear_segmentstatus() ;
  const ::google::protobuf::Map<std::string, ::upstox::MarketStatus>& segmentstatus() const;
  ::google::protobuf::Map<std::string, ::upstox::MarketStatus>* mutable_segmentstatus();

  private:
  const ::google::protobuf::Map<std::string, ::upstox::MarketStatus>& _internal_segmentstatus() const;
  ::google::protobuf::Map<std::string, ::upstox::MarketStatus>* _internal_mutable_segmentstatus();

  public:
  // @@protoc_insertion_point(class_scope:upstox.MarketInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      39, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MarketInfo& from_msg);
    ::google::protobuf::internal::MapField<MarketInfo_SegmentStatusEntry_DoNotUse, std::string, ::upstox::MarketStatus,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>
        segmentstatus_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MarketDataFeedV3_2eproto;
};
// -------------------------------------------------------------------

class FirstLevelWithGreeks final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:upstox.FirstLevelWithGreeks) */ {
 public:
  inline FirstLevelWithGreeks() : FirstLevelWithGreeks(nullptr) {}
  ~FirstLevelWithGreeks() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FirstLevelWithGreeks* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FirstLevelWithGreeks));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FirstLevelWithGreeks(
      ::google::protobuf::internal::ConstantInitialized);

  inline FirstLevelWithGreeks(const FirstLevelWithGreeks& from) : FirstLevelWithGreeks(nullptr, from) {}
  inline FirstLevelWithGreeks(FirstLevelWithGreeks&& from) noexcept
      : FirstLevelWithGreeks(nullptr, std::move(from)) {}
  inline FirstLevelWithGreeks& operator=(const FirstLevelWithGreeks& from) {
    CopyFrom(from);
    return *this;
  }
  inline FirstLevelWithGreeks& operator=(FirstLevelWithGreeks&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FirstLevelWithGreeks& default_instance() {
    return *internal_default_instance();
  }
  static inline const FirstLevelWithGreeks* internal_default_instance() {
    return reinterpret_cast<const FirstLevelWithGreeks*>(
        &_FirstLevelWithGreeks_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(FirstLevelWithGreeks& a, FirstLevelWithGreeks& b) { a.Swap(&b); }
  inline void Swap(FirstLevelWithGreeks* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FirstLevelWithGreeks* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FirstLevelWithGreeks* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FirstLevelWithGreeks>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FirstLevelWithGreeks& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FirstLevelWithGreeks& from) { FirstLevelWithGreeks::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FirstLevelWithGreeks* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "upstox.FirstLevelWithGreeks"; }

 protected:
  explicit FirstLevelWithGreeks(::google::protobuf::Arena* arena);
  FirstLevelWithGreeks(::google::protobuf::Arena* arena, const FirstLevelWithGreeks& from);
  FirstLevelWithGreeks(::google::protobuf::Arena* arena, FirstLevelWithGreeks&& from) noexcept
      : FirstLevelWithGreeks(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLtpcFieldNumber = 1,
    kFirstDepthFieldNumber = 2,
    kOptionGreeksFieldNumber = 3,
    kVttFieldNumber = 4,
    kOiFieldNumber = 5,
    kIvFieldNumber = 6,
  };
  // .upstox.LTPC ltpc = 1;
  bool has_ltpc() const;
  void clear_ltpc() ;
  const ::upstox::LTPC& ltpc() const;
  PROTOBUF_NODISCARD ::upstox::LTPC* release_ltpc();
  ::upstox::LTPC* mutable_ltpc();
  void set_allocated_ltpc(::upstox::LTPC* value);
  void unsafe_arena_set_allocated_ltpc(::upstox::LTPC* value);
  ::upstox::LTPC* unsafe_arena_release_ltpc();

  private:
  const ::upstox::LTPC& _internal_ltpc() const;
  ::upstox::LTPC* _internal_mutable_ltpc();

  public:
  // .upstox.Quote firstDepth = 2;
  bool has_firstdepth() const;
  void clear_firstdepth() ;
  const ::upstox::Quote& firstdepth() const;
  PROTOBUF_NODISCARD ::upstox::Quote* release_firstdepth();
  ::upstox::Quote* mutable_firstdepth();
  void set_allocated_firstdepth(::upstox::Quote* value);
  void unsafe_arena_set_allocated_firstdepth(::upstox::Quote* value);
  ::upstox::Quote* unsafe_arena_release_firstdepth();

  private:
  const ::upstox::Quote& _internal_firstdepth() const;
  ::upstox::Quote* _internal_mutable_firstdepth();

  public:
  // .upstox.OptionGreeks optionGreeks = 3;
  bool has_optiongreeks() const;
  void clear_optiongreeks() ;
  const ::upstox::OptionGreeks& optiongreeks() const;
  PROTOBUF_NODISCARD ::upstox::OptionGreeks* release_optiongreeks();
  ::upstox::OptionGreeks* mutable_optiongreeks();
  void set_allocated_optiongreeks(::upstox::OptionGreeks* value);
  void unsafe_arena_set_allocated_optiongreeks(::upstox::OptionGreeks* value);
  ::upstox::OptionGreeks* unsafe_arena_release_optiongreeks();

  private:
  const ::upstox::OptionGreeks& _internal_optiongreeks() const;
  ::upstox::OptionGreeks* _internal_mutable_optiongreeks();

  public:
  // int64 vtt = 4;
  void clear_vtt() ;
  ::int64_t vtt() const;
  void set_vtt(::int64_t value);

  private:
  ::int64_t _internal_vtt() const;
  void _internal_set_vtt(::int64_t value);

  public:
  // double oi = 5;
  void clear_oi() ;
  double oi() const;
  void set_oi(double value);

  private:
  double _internal_oi() const;
  void _internal_set_oi(double value);

  public:
  // double iv = 6;
  void clear_iv() ;
  double iv() const;
  void set_iv(double value);

  private:
  double _internal_iv() const;
  void _internal_set_iv(double value);

  public:
  // @@protoc_insertion_point(class_scope:upstox.FirstLevelWithGreeks)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 3,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FirstLevelWithGreeks& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::upstox::LTPC* ltpc_;
    ::upstox::Quote* firstdepth_;
    ::upstox::OptionGreeks* optiongreeks_;
    ::int64_t vtt_;
    double oi_;
    double iv_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MarketDataFeedV3_2eproto;
};
// -------------------------------------------------------------------

class MarketFullFeed final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:upstox.MarketFullFeed) */ {
 public:
  inline MarketFullFeed() : MarketFullFeed(nullptr) {}
  ~MarketFullFeed() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MarketFullFeed* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MarketFullFeed));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MarketFullFeed(
      ::google::protobuf::internal::ConstantInitialized);

  inline MarketFullFeed(const MarketFullFeed& from) : MarketFullFeed(nullptr, from) {}
  inline MarketFullFeed(MarketFullFeed&& from) noexcept
      : MarketFullFeed(nullptr, std::move(from)) {}
  inline MarketFullFeed& operator=(const MarketFullFeed& from) {
    CopyFrom(from);
    return *this;
  }
  inline MarketFullFeed& operator=(MarketFullFeed&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MarketFullFeed& default_instance() {
    return *internal_default_instance();
  }
  static inline const MarketFullFeed* internal_default_instance() {
    return reinterpret_cast<const MarketFullFeed*>(
        &_MarketFullFeed_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(MarketFullFeed& a, MarketFullFeed& b) { a.Swap(&b); }
  inline void Swap(MarketFullFeed* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MarketFullFeed* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MarketFullFeed* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MarketFullFeed>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MarketFullFeed& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MarketFullFeed& from) { MarketFullFeed::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MarketFullFeed* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "upstox.MarketFullFeed"; }

 protected:
  explicit MarketFullFeed(::google::protobuf::Arena* arena);
  MarketFullFeed(::google::protobuf::Arena* arena, const MarketFullFeed& from);
  MarketFullFeed(::google::protobuf::Arena* arena, MarketFullFeed&& from) noexcept
      : MarketFullFeed(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLtpcFieldNumber = 1,
    kMarketLevelFieldNumber = 2,
    kOptionGreeksFieldNumber = 3,
    kMarketOHLCFieldNumber = 4,
    kAtpFieldNumber = 5,
    kVttFieldNumber = 6,
    kOiFieldNumber = 7,
    kIvFieldNumber = 8,
    kTbqFieldNumber = 9,
    kTsqFieldNumber = 10,
  };
  // .upstox.LTPC ltpc = 1;
  bool has_ltpc() const;
  void clear_ltpc() ;
  const ::upstox::LTPC& ltpc() const;
  PROTOBUF_NODISCARD ::upstox::LTPC* release_ltpc();
  ::upstox::LTPC* mutable_ltpc();
  void set_allocated_ltpc(::upstox::LTPC* value);
  void unsafe_arena_set_allocated_ltpc(::upstox::LTPC* value);
  ::upstox::LTPC* unsafe_arena_release_ltpc();

  private:
  const ::upstox::LTPC& _internal_ltpc() const;
  ::upstox::LTPC* _internal_mutable_ltpc();

  public:
  // .upstox.MarketLevel marketLevel = 2;
  bool has_marketlevel() const;
  void clear_marketlevel() ;
  const ::upstox::MarketLevel& marketlevel() const;
  PROTOBUF_NODISCARD ::upstox::MarketLevel* release_marketlevel();
  ::upstox::MarketLevel* mutable_marketlevel();
  void set_allocated_marketlevel(::upstox::MarketLevel* value);
  void unsafe_arena_set_allocated_marketlevel(::upstox::MarketLevel* value);
  ::upstox::MarketLevel* unsafe_arena_release_marketlevel();

  private:
  const ::upstox::MarketLevel& _internal_marketlevel() const;
  ::upstox::MarketLevel* _internal_mutable_marketlevel();

  public:
  // .upstox.OptionGreeks optionGreeks = 3;
  bool has_optiongreeks() const;
  void clear_optiongreeks() ;
  const ::upstox::OptionGreeks& optiongreeks() const;
  PROTOBUF_NODISCARD ::upstox::OptionGreeks* release_optiongreeks();
  ::upstox::OptionGreeks* mutable_optiongreeks();
  void set_allocated_optiongreeks(::upstox::OptionGreeks* value);
  void unsafe_arena_set_allocated_optiongreeks(::upstox::OptionGreeks* value);
  ::upstox::OptionGreeks* unsafe_arena_release_optiongreeks();

  private:
  const ::upstox::OptionGreeks& _internal_optiongreeks() const;
  ::upstox::OptionGreeks* _internal_mutable_optiongreeks();

  public:
  // .upstox.MarketOHLC marketOHLC = 4;
  bool has_marketohlc() const;
  void clear_marketohlc() ;
  const ::upstox::MarketOHLC& marketohlc() const;
  PROTOBUF_NODISCARD ::upstox::MarketOHLC* release_marketohlc();
  ::upstox::MarketOHLC* mutable_marketohlc();
  void set_allocated_marketohlc(::upstox::MarketOHLC* value);
  void unsafe_arena_set_allocated_marketohlc(::upstox::MarketOHLC* value);
  ::upstox::MarketOHLC* unsafe_arena_release_marketohlc();

  private:
  const ::upstox::MarketOHLC& _internal_marketohlc() const;
  ::upstox::MarketOHLC* _internal_mutable_marketohlc();

  public:
  // double atp = 5;
  void clear_atp() ;
  double atp() const;
  void set_atp(double value);

  private:
  double _internal_atp() const;
  void _internal_set_atp(double value);

  public:
  // int64 vtt = 6;
  void clear_vtt() ;
  ::int64_t vtt() const;
  void set_vtt(::int64_t value);

  private:
  ::int64_t _internal_vtt() const;
  void _internal_set_vtt(::int64_t value);

  public:
  // double oi = 7;
  void clear_oi() ;
  double oi() const;
  void set_oi(double value);

  private:
  double _internal_oi() const;
  void _internal_set_oi(double value);

  public:
  // double iv = 8;
  void clear_iv() ;
  double iv() const;
  void set_iv(double value);

  private:
  double _internal_iv() const;
  void _internal_set_iv(double value);

  public:
  // double tbq = 9;
  void clear_tbq() ;
  double tbq() const;
  void set_tbq(double value);

  private:
  double _internal_tbq() const;
  void _internal_set_tbq(double value);

  public:
  // double tsq = 10;
  void clear_tsq() ;
  double tsq() const;
  void set_tsq(double value);

  private:
  double _internal_tsq() const;
  void _internal_set_tsq(double value);

  public:
  // @@protoc_insertion_point(class_scope:upstox.MarketFullFeed)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 4,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MarketFullFeed& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::upstox::LTPC* ltpc_;
    ::upstox::MarketLevel* marketlevel_;
    ::upstox::OptionGreeks* optiongreeks_;
    ::upstox::MarketOHLC* marketohlc_;
    double atp_;
    ::int64_t vtt_;
    double oi_;
    double iv_;
    double tbq_;
    double tsq_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MarketDataFeedV3_2eproto;
};
// -------------------------------------------------------------------

class IndexFullFeed final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:upstox.IndexFullFeed) */ {
 public:
  inline IndexFullFeed() : IndexFullFeed(nullptr) {}
  ~IndexFullFeed() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(IndexFullFeed* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(IndexFullFeed));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR IndexFullFeed(
      ::google::protobuf::internal::ConstantInitialized);

  inline IndexFullFeed(const IndexFullFeed& from) : IndexFullFeed(nullptr, from) {}
  inline IndexFullFeed(IndexFullFeed&& from) noexcept
      : IndexFullFeed(nullptr, std::move(from)) {}
  inline IndexFullFeed& operator=(const IndexFullFeed& from) {
    CopyFrom(from);
    return *this;
  }
  inline IndexFullFeed& operator=(IndexFullFeed&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IndexFullFeed& default_instance() {
    return *internal_default_instance();
  }
  static inline const IndexFullFeed* internal_default_instance() {
    return reinterpret_cast<const IndexFullFeed*>(
        &_IndexFullFeed_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(IndexFullFeed& a, IndexFullFeed& b) { a.Swap(&b); }
  inline void Swap(IndexFullFeed* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IndexFullFeed* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IndexFullFeed* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<IndexFullFeed>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const IndexFullFeed& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const IndexFullFeed& from) { IndexFullFeed::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(IndexFullFeed* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "upstox.IndexFullFeed"; }

 protected:
  explicit IndexFullFeed(::google::protobuf::Arena* arena);
  IndexFullFeed(::google::protobuf::Arena* arena, const IndexFullFeed& from);
  IndexFullFeed(::google::protobuf::Arena* arena, IndexFullFeed&& from) noexcept
      : IndexFullFeed(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLtpcFieldNumber = 1,
    kMarketOHLCFieldNumber = 2,
  };
  // .upstox.LTPC ltpc = 1;
  bool has_ltpc() const;
  void clear_ltpc() ;
  const ::upstox::LTPC& ltpc() const;
  PROTOBUF_NODISCARD ::upstox::LTPC* release_ltpc();
  ::upstox::LTPC* mutable_ltpc();
  void set_allocated_ltpc(::upstox::LTPC* value);
  void unsafe_arena_set_allocated_ltpc(::upstox::LTPC* value);
  ::upstox::LTPC* unsafe_arena_release_ltpc();

  private:
  const ::upstox::LTPC& _internal_ltpc() const;
  ::upstox::LTPC* _internal_mutable_ltpc();

  public:
  // .upstox.MarketOHLC marketOHLC = 2;
  bool has_marketohlc() const;
  void clear_marketohlc() ;
  const ::upstox::MarketOHLC& marketohlc() const;
  PROTOBUF_NODISCARD ::upstox::MarketOHLC* release_marketohlc();
  ::upstox::MarketOHLC* mutable_marketohlc();
  void set_allocated_marketohlc(::upstox::MarketOHLC* value);
  void unsafe_arena_set_allocated_marketohlc(::upstox::MarketOHLC* value);
  ::upstox::MarketOHLC* unsafe_arena_release_marketohlc();

  private:
  const ::upstox::MarketOHLC& _internal_marketohlc() const;
  ::upstox::MarketOHLC* _internal_mutable_marketohlc();

  public:
  // @@protoc_insertion_point(class_scope:upstox.IndexFullFeed)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const IndexFullFeed& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::upstox::LTPC* ltpc_;
    ::upstox::MarketOHLC* marketohlc_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MarketDataFeedV3_2eproto;
};
// -------------------------------------------------------------------

class FullFeed final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:upstox.FullFeed) */ {
 public:
  inline FullFeed() : FullFeed(nullptr) {}
  ~FullFeed() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FullFeed* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FullFeed));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FullFeed(
      ::google::protobuf::internal::ConstantInitialized);

  inline FullFeed(const FullFeed& from) : FullFeed(nullptr, from) {}
  inline FullFeed(FullFeed&& from) noexcept
      : FullFeed(nullptr, std::move(from)) {}
  inline FullFeed& operator=(const FullFeed& from) {
    CopyFrom(from);
    return *this;
  }
  inline FullFeed& operator=(FullFeed&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FullFeed& default_instance() {
    return *internal_default_instance();
  }
  enum FullFeedUnionCase {
    kMarketFF = 1,
    kIndexFF = 2,
    FULLFEEDUNION_NOT_SET = 0,
  };
  static inline const FullFeed* internal_default_instance() {
    return reinterpret_cast<const FullFeed*>(
        &_FullFeed_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(FullFeed& a, FullFeed& b) { a.Swap(&b); }
  inline void Swap(FullFeed* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FullFeed* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FullFeed* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FullFeed>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FullFeed& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FullFeed& from) { FullFeed::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FullFeed* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "upstox.FullFeed"; }

 protected:
  explicit FullFeed(::google::protobuf::Arena* arena);
  FullFeed(::google::protobuf::Arena* arena, const FullFeed& from);
  FullFeed(::google::protobuf::Arena* arena, FullFeed&& from) noexcept
      : FullFeed(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMarketFFFieldNumber = 1,
    kIndexFFFieldNumber = 2,
  };
  // .upstox.MarketFullFeed marketFF = 1;
  bool has_marketff() const;
  private:
  bool _internal_has_marketff() const;

  public:
  void clear_marketff() ;
  const ::upstox::MarketFullFeed& marketff() const;
  PROTOBUF_NODISCARD ::upstox::MarketFullFeed* release_marketff();
  ::upstox::MarketFullFeed* mutable_marketff();
  void set_allocated_marketff(::upstox::MarketFullFeed* value);
  void unsafe_arena_set_allocated_marketff(::upstox::MarketFullFeed* value);
  ::upstox::MarketFullFeed* unsafe_arena_release_marketff();

  private:
  const ::upstox::MarketFullFeed& _internal_marketff() const;
  ::upstox::MarketFullFeed* _internal_mutable_marketff();

  public:
  // .upstox.IndexFullFeed indexFF = 2;
  bool has_indexff() const;
  private:
  bool _internal_has_indexff() const;

  public:
  void clear_indexff() ;
  const ::upstox::IndexFullFeed& indexff() const;
  PROTOBUF_NODISCARD ::upstox::IndexFullFeed* release_indexff();
  ::upstox::IndexFullFeed* mutable_indexff();
  void set_allocated_indexff(::upstox::IndexFullFeed* value);
  void unsafe_arena_set_allocated_indexff(::upstox::IndexFullFeed* value);
  ::upstox::IndexFullFeed* unsafe_arena_release_indexff();

  private:
  const ::upstox::IndexFullFeed& _internal_indexff() const;
  ::upstox::IndexFullFeed* _internal_mutable_indexff();

  public:
  void clear_FullFeedUnion();
  FullFeedUnionCase FullFeedUnion_case() const;
  // @@protoc_insertion_point(class_scope:upstox.FullFeed)
 private:
  class _Internal;
  void set_has_marketff();
  void set_has_indexff();
  inline bool has_FullFeedUnion() const;
  inline void clear_has_FullFeedUnion();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 2,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FullFeed& from_msg);
    union FullFeedUnionUnion {
      constexpr FullFeedUnionUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::upstox::MarketFullFeed* marketff_;
      ::upstox::IndexFullFeed* indexff_;
    } FullFeedUnion_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MarketDataFeedV3_2eproto;
};
// -------------------------------------------------------------------

class Feed final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:upstox.Feed) */ {
 public:
  inline Feed() : Feed(nullptr) {}
  ~Feed() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Feed* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Feed));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Feed(
      ::google::protobuf::internal::ConstantInitialized);

  inline Feed(const Feed& from) : Feed(nullptr, from) {}
  inline Feed(Feed&& from) noexcept
      : Feed(nullptr, std::move(from)) {}
  inline Feed& operator=(const Feed& from) {
    CopyFrom(from);
    return *this;
  }
  inline Feed& operator=(Feed&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Feed& default_instance() {
    return *internal_default_instance();
  }
  enum FeedUnionCase {
    kLtpc = 1,
    kFullFeed = 2,
    kFirstLevelWithGreeks = 3,
    FEEDUNION_NOT_SET = 0,
  };
  static inline const Feed* internal_default_instance() {
    return reinterpret_cast<const Feed*>(
        &_Feed_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(Feed& a, Feed& b) { a.Swap(&b); }
  inline void Swap(Feed* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Feed* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Feed* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Feed>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Feed& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Feed& from) { Feed::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Feed* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "upstox.Feed"; }

 protected:
  explicit Feed(::google::protobuf::Arena* arena);
  Feed(::google::protobuf::Arena* arena, const Feed& from);
  Feed(::google::protobuf::Arena* arena, Feed&& from) noexcept
      : Feed(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRequestModeFieldNumber = 4,
    kLtpcFieldNumber = 1,
    kFullFeedFieldNumber = 2,
    kFirstLevelWithGreeksFieldNumber = 3,
  };
  // .upstox.RequestMode requestMode = 4;
  void clear_requestmode() ;
  ::upstox::RequestMode requestmode() const;
  void set_requestmode(::upstox::RequestMode value);

  private:
  ::upstox::RequestMode _internal_requestmode() const;
  void _internal_set_requestmode(::upstox::RequestMode value);

  public:
  // .upstox.LTPC ltpc = 1;
  bool has_ltpc() const;
  private:
  bool _internal_has_ltpc() const;

  public:
  void clear_ltpc() ;
  const ::upstox::LTPC& ltpc() const;
  PROTOBUF_NODISCARD ::upstox::LTPC* release_ltpc();
  ::upstox::LTPC* mutable_ltpc();
  void set_allocated_ltpc(::upstox::LTPC* value);
  void unsafe_arena_set_allocated_ltpc(::upstox::LTPC* value);
  ::upstox::LTPC* unsafe_arena_release_ltpc();

  private:
  const ::upstox::LTPC& _internal_ltpc() const;
  ::upstox::LTPC* _internal_mutable_ltpc();

  public:
  // .upstox.FullFeed fullFeed = 2;
  bool has_fullfeed() const;
  private:
  bool _internal_has_fullfeed() const;

  public:
  void clear_fullfeed() ;
  const ::upstox::FullFeed& fullfeed() const;
  PROTOBUF_NODISCARD ::upstox::FullFeed* release_fullfeed();
  ::upstox::FullFeed* mutable_fullfeed();
  void set_allocated_fullfeed(::upstox::FullFeed* value);
  void unsafe_arena_set_allocated_fullfeed(::upstox::FullFeed* value);
  ::upstox::FullFeed* unsafe_arena_release_fullfeed();

  private:
  const ::upstox::FullFeed& _internal_fullfeed() const;
  ::upstox::FullFeed* _internal_mutable_fullfeed();

  public:
  // .upstox.FirstLevelWithGreeks firstLevelWithGreeks = 3;
  bool has_firstlevelwithgreeks() const;
  private:
  bool _internal_has_firstlevelwithgreeks() const;

  public:
  void clear_firstlevelwithgreeks() ;
  const ::upstox::FirstLevelWithGreeks& firstlevelwithgreeks() const;
  PROTOBUF_NODISCARD ::upstox::FirstLevelWithGreeks* release_firstlevelwithgreeks();
  ::upstox::FirstLevelWithGreeks* mutable_firstlevelwithgreeks();
  void set_allocated_firstlevelwithgreeks(::upstox::FirstLevelWithGreeks* value);
  void unsafe_arena_set_allocated_firstlevelwithgreeks(::upstox::FirstLevelWithGreeks* value);
  ::upstox::FirstLevelWithGreeks* unsafe_arena_release_firstlevelwithgreeks();

  private:
  const ::upstox::FirstLevelWithGreeks& _internal_firstlevelwithgreeks() const;
  ::upstox::FirstLevelWithGreeks* _internal_mutable_firstlevelwithgreeks();

  public:
  void clear_FeedUnion();
  FeedUnionCase FeedUnion_case() const;
  // @@protoc_insertion_point(class_scope:upstox.Feed)
 private:
  class _Internal;
  void set_has_ltpc();
  void set_has_fullfeed();
  void set_has_firstlevelwithgreeks();
  inline bool has_FeedUnion() const;
  inline void clear_has_FeedUnion();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 4, 3,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Feed& from_msg);
    int requestmode_;
    union FeedUnionUnion {
      constexpr FeedUnionUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::upstox::LTPC* ltpc_;
      ::upstox::FullFeed* fullfeed_;
      ::upstox::FirstLevelWithGreeks* firstlevelwithgreeks_;
    } FeedUnion_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MarketDataFeedV3_2eproto;
};
// -------------------------------------------------------------------

class FeedResponse_FeedsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          std::string, ::google::protobuf::Message,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      std::string, ::google::protobuf::Message,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  FeedResponse_FeedsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FeedResponse_FeedsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit FeedResponse_FeedsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const FeedResponse_FeedsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const FeedResponse_FeedsEntry_DoNotUse*>(
        &_FeedResponse_FeedsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::MessageLite;
  friend struct ::TableStruct_MarketDataFeedV3_2eproto;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      42, 2>
      _table_;

  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;
};
// -------------------------------------------------------------------

class FeedResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:upstox.FeedResponse) */ {
 public:
  inline FeedResponse() : FeedResponse(nullptr) {}
  ~FeedResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FeedResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FeedResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FeedResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline FeedResponse(const FeedResponse& from) : FeedResponse(nullptr, from) {}
  inline FeedResponse(FeedResponse&& from) noexcept
      : FeedResponse(nullptr, std::move(from)) {}
  inline FeedResponse& operator=(const FeedResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline FeedResponse& operator=(FeedResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FeedResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const FeedResponse* internal_default_instance() {
    return reinterpret_cast<const FeedResponse*>(
        &_FeedResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(FeedResponse& a, FeedResponse& b) { a.Swap(&b); }
  inline void Swap(FeedResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FeedResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FeedResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FeedResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FeedResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FeedResponse& from) { FeedResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FeedResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "upstox.FeedResponse"; }

 protected:
  explicit FeedResponse(::google::protobuf::Arena* arena);
  FeedResponse(::google::protobuf::Arena* arena, const FeedResponse& from);
  FeedResponse(::google::protobuf::Arena* arena, FeedResponse&& from) noexcept
      : FeedResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFeedsFieldNumber = 2,
    kMarketInfoFieldNumber = 4,
    kCurrentTsFieldNumber = 3,
    kTypeFieldNumber = 1,
  };
  // map<string, .upstox.Feed> feeds = 2;
  int feeds_size() const;
  private:
  int _internal_feeds_size() const;

  public:
  void clear_feeds() ;
  const ::google::protobuf::Map<std::string, ::upstox::Feed>& feeds() const;
  ::google::protobuf::Map<std::string, ::upstox::Feed>* mutable_feeds();

  private:
  const ::google::protobuf::Map<std::string, ::upstox::Feed>& _internal_feeds() const;
  ::google::protobuf::Map<std::string, ::upstox::Feed>* _internal_mutable_feeds();

  public:
  // .upstox.MarketInfo marketInfo = 4;
  bool has_marketinfo() const;
  void clear_marketinfo() ;
  const ::upstox::MarketInfo& marketinfo() const;
  PROTOBUF_NODISCARD ::upstox::MarketInfo* release_marketinfo();
  ::upstox::MarketInfo* mutable_marketinfo();
  void set_allocated_marketinfo(::upstox::MarketInfo* value);
  void unsafe_arena_set_allocated_marketinfo(::upstox::MarketInfo* value);
  ::upstox::MarketInfo* unsafe_arena_release_marketinfo();

  private:
  const ::upstox::MarketInfo& _internal_marketinfo() const;
  ::upstox::MarketInfo* _internal_mutable_marketinfo();

  public:
  // int64 currentTs = 3;
  void clear_currentts() ;
  ::int64_t currentts() const;
  void set_currentts(::int64_t value);

  private:
  ::int64_t _internal_currentts() const;
  void _internal_set_currentts(::int64_t value);

  public:
  // .upstox.Type type = 1;
  void clear_type() ;
  ::upstox::Type type() const;
  void set_type(::upstox::Type value);

  private:
  ::upstox::Type _internal_type() const;
  void _internal_set_type(::upstox::Type value);

  public:
  // @@protoc_insertion_point(class_scope:upstox.FeedResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 3,
      33, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FeedResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<FeedResponse_FeedsEntry_DoNotUse, std::string, ::upstox::Feed,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        feeds_;
    ::upstox::MarketInfo* marketinfo_;
    ::int64_t currentts_;
    int type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MarketDataFeedV3_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// LTPC

// double ltp = 1;
inline void LTPC::clear_ltp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ltp_ = 0;
}
inline double LTPC::ltp() const {
  // @@protoc_insertion_point(field_get:upstox.LTPC.ltp)
  return _internal_ltp();
}
inline void LTPC::set_ltp(double value) {
  _internal_set_ltp(value);
  // @@protoc_insertion_point(field_set:upstox.LTPC.ltp)
}
inline double LTPC::_internal_ltp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ltp_;
}
inline void LTPC::_internal_set_ltp(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ltp_ = value;
}

// int64 ltt = 2;
inline void LTPC::clear_ltt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ltt_ = ::int64_t{0};
}
inline ::int64_t LTPC::ltt() const {
  // @@protoc_insertion_point(field_get:upstox.LTPC.ltt)
  return _internal_ltt();
}
inline void LTPC::set_ltt(::int64_t value) {
  _internal_set_ltt(value);
  // @@protoc_insertion_point(field_set:upstox.LTPC.ltt)
}
inline ::int64_t LTPC::_internal_ltt() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ltt_;
}
inline void LTPC::_internal_set_ltt(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ltt_ = value;
}

// double cp = 3;
inline void LTPC::clear_cp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cp_ = 0;
}
inline double LTPC::cp() const {
  // @@protoc_insertion_point(field_get:upstox.LTPC.cp)
  return _internal_cp();
}
inline void LTPC::set_cp(double value) {
  _internal_set_cp(value);
  // @@protoc_insertion_point(field_set:upstox.LTPC.cp)
}
inline double LTPC::_internal_cp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cp_;
}
inline void LTPC::_internal_set_cp(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cp_ = value;
}

// -------------------------------------------------------------------

// MarketLevel

// repeated .upstox.Quote bidAskQuote = 1;
inline int MarketLevel::_internal_bidaskquote_size() const {
  return _internal_bidaskquote().size();
}
inline int MarketLevel::bidaskquote_size() const {
  return _internal_bidaskquote_size();
}
inline void MarketLevel::clear_bidaskquote() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bidaskquote_.Clear();
}
inline ::upstox::Quote* MarketLevel::mutable_bidaskquote(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:upstox.MarketLevel.bidAskQuote)
  return _internal_mutable_bidaskquote()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::upstox::Quote>* MarketLevel::mutable_bidaskquote()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:upstox.MarketLevel.bidAskQuote)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_bidaskquote();
}
inline const ::upstox::Quote& MarketLevel::bidaskquote(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:upstox.MarketLevel.bidAskQuote)
  return _internal_bidaskquote().Get(index);
}
inline ::upstox::Quote* MarketLevel::add_bidaskquote() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::upstox::Quote* _add = _internal_mutable_bidaskquote()->Add();
  // @@protoc_insertion_point(field_add:upstox.MarketLevel.bidAskQuote)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::upstox::Quote>& MarketLevel::bidaskquote() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:upstox.MarketLevel.bidAskQuote)
  return _internal_bidaskquote();
}
inline const ::google::protobuf::RepeatedPtrField<::upstox::Quote>&
MarketLevel::_internal_bidaskquote() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bidaskquote_;
}
inline ::google::protobuf::RepeatedPtrField<::upstox::Quote>*
MarketLevel::_internal_mutable_bidaskquote() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.bidaskquote_;
}

// -------------------------------------------------------------------

// MarketOHLC

// repeated .upstox.OHLC ohlc = 1;
inline int MarketOHLC::_internal_ohlc_size() const {
  return _internal_ohlc().size();
}
inline int MarketOHLC::ohlc_size() const {
  return _internal_ohlc_size();
}
inline void MarketOHLC::clear_ohlc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ohlc_.Clear();
}
inline ::upstox::OHLC* MarketOHLC::mutable_ohlc(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:upstox.MarketOHLC.ohlc)
  return _internal_mutable_ohlc()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::upstox::OHLC>* MarketOHLC::mutable_ohlc()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:upstox.MarketOHLC.ohlc)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_ohlc();
}
inline const ::upstox::OHLC& MarketOHLC::ohlc(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:upstox.MarketOHLC.ohlc)
  return _internal_ohlc().Get(index);
}
inline ::upstox::OHLC* MarketOHLC::add_ohlc() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::upstox::OHLC* _add = _internal_mutable_ohlc()->Add();
  // @@protoc_insertion_point(field_add:upstox.MarketOHLC.ohlc)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::upstox::OHLC>& MarketOHLC::ohlc() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:upstox.MarketOHLC.ohlc)
  return _internal_ohlc();
}
inline const ::google::protobuf::RepeatedPtrField<::upstox::OHLC>&
MarketOHLC::_internal_ohlc() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ohlc_;
}
inline ::google::protobuf::RepeatedPtrField<::upstox::OHLC>*
MarketOHLC::_internal_mutable_ohlc() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.ohlc_;
}

// -------------------------------------------------------------------

// Quote

// int64 bidQ = 1;
inline void Quote::clear_bidq() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bidq_ = ::int64_t{0};
}
inline ::int64_t Quote::bidq() const {
  // @@protoc_insertion_point(field_get:upstox.Quote.bidQ)
  return _internal_bidq();
}
inline void Quote::set_bidq(::int64_t value) {
  _internal_set_bidq(value);
  // @@protoc_insertion_point(field_set:upstox.Quote.bidQ)
}
inline ::int64_t Quote::_internal_bidq() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bidq_;
}
inline void Quote::_internal_set_bidq(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bidq_ = value;
}

// double bidP = 2;
inline void Quote::clear_bidp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bidp_ = 0;
}
inline double Quote::bidp() const {
  // @@protoc_insertion_point(field_get:upstox.Quote.bidP)
  return _internal_bidp();
}
inline void Quote::set_bidp(double value) {
  _internal_set_bidp(value);
  // @@protoc_insertion_point(field_set:upstox.Quote.bidP)
}
inline double Quote::_internal_bidp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bidp_;
}
inline void Quote::_internal_set_bidp(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bidp_ = value;
}

// int64 askQ = 3;
inline void Quote::clear_askq() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.askq_ = ::int64_t{0};
}
inline ::int64_t Quote::askq() const {
  // @@protoc_insertion_point(field_get:upstox.Quote.askQ)
  return _internal_askq();
}
inline void Quote::set_askq(::int64_t value) {
  _internal_set_askq(value);
  // @@protoc_insertion_point(field_set:upstox.Quote.askQ)
}
inline ::int64_t Quote::_internal_askq() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.askq_;
}
inline void Quote::_internal_set_askq(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.askq_ = value;
}

// double askP = 4;
inline void Quote::clear_askp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.askp_ = 0;
}
inline double Quote::askp() const {
  // @@protoc_insertion_point(field_get:upstox.Quote.askP)
  return _internal_askp();
}
inline void Quote::set_askp(double value) {
  _internal_set_askp(value);
  // @@protoc_insertion_point(field_set:upstox.Quote.askP)
}
inline double Quote::_internal_askp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.askp_;
}
inline void Quote::_internal_set_askp(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.askp_ = value;
}

// -------------------------------------------------------------------

// OptionGreeks

// double delta = 1;
inline void OptionGreeks::clear_delta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delta_ = 0;
}
inline double OptionGreeks::delta() const {
  // @@protoc_insertion_point(field_get:upstox.OptionGreeks.delta)
  return _internal_delta();
}
inline void OptionGreeks::set_delta(double value) {
  _internal_set_delta(value);
  // @@protoc_insertion_point(field_set:upstox.OptionGreeks.delta)
}
inline double OptionGreeks::_internal_delta() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delta_;
}
inline void OptionGreeks::_internal_set_delta(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delta_ = value;
}

// double theta = 2;
inline void OptionGreeks::clear_theta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.theta_ = 0;
}
inline double OptionGreeks::theta() const {
  // @@protoc_insertion_point(field_get:upstox.OptionGreeks.theta)
  return _internal_theta();
}
inline void OptionGreeks::set_theta(double value) {
  _internal_set_theta(value);
  // @@protoc_insertion_point(field_set:upstox.OptionGreeks.theta)
}
inline double OptionGreeks::_internal_theta() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.theta_;
}
inline void OptionGreeks::_internal_set_theta(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.theta_ = value;
}

// double gamma = 3;
inline void OptionGreeks::clear_gamma() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gamma_ = 0;
}
inline double OptionGreeks::gamma() const {
  // @@protoc_insertion_point(field_get:upstox.OptionGreeks.gamma)
  return _internal_gamma();
}
inline void OptionGreeks::set_gamma(double value) {
  _internal_set_gamma(value);
  // @@protoc_insertion_point(field_set:upstox.OptionGreeks.gamma)
}
inline double OptionGreeks::_internal_gamma() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.gamma_;
}
inline void OptionGreeks::_internal_set_gamma(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.gamma_ = value;
}

// double vega = 4;
inline void OptionGreeks::clear_vega() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vega_ = 0;
}
inline double OptionGreeks::vega() const {
  // @@protoc_insertion_point(field_get:upstox.OptionGreeks.vega)
  return _internal_vega();
}
inline void OptionGreeks::set_vega(double value) {
  _internal_set_vega(value);
  // @@protoc_insertion_point(field_set:upstox.OptionGreeks.vega)
}
inline double OptionGreeks::_internal_vega() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vega_;
}
inline void OptionGreeks::_internal_set_vega(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vega_ = value;
}

// double rho = 5;
inline void OptionGreeks::clear_rho() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rho_ = 0;
}
inline double OptionGreeks::rho() const {
  // @@protoc_insertion_point(field_get:upstox.OptionGreeks.rho)
  return _internal_rho();
}
inline void OptionGreeks::set_rho(double value) {
  _internal_set_rho(value);
  // @@protoc_insertion_point(field_set:upstox.OptionGreeks.rho)
}
inline double OptionGreeks::_internal_rho() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rho_;
}
inline void OptionGreeks::_internal_set_rho(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rho_ = value;
}

// -------------------------------------------------------------------

// OHLC

// string interval = 1;
inline void OHLC::clear_interval() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interval_.ClearToEmpty();
}
inline const std::string& OHLC::interval() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:upstox.OHLC.interval)
  return _internal_interval();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OHLC::set_interval(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interval_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:upstox.OHLC.interval)
}
inline std::string* OHLC::mutable_interval() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_interval();
  // @@protoc_insertion_point(field_mutable:upstox.OHLC.interval)
  return _s;
}
inline const std::string& OHLC::_internal_interval() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.interval_.Get();
}
inline void OHLC::_internal_set_interval(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interval_.Set(value, GetArena());
}
inline std::string* OHLC::_internal_mutable_interval() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.interval_.Mutable( GetArena());
}
inline std::string* OHLC::release_interval() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:upstox.OHLC.interval)
  return _impl_.interval_.Release();
}
inline void OHLC::set_allocated_interval(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.interval_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.interval_.IsDefault()) {
    _impl_.interval_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:upstox.OHLC.interval)
}

// double open = 2;
inline void OHLC::clear_open() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.open_ = 0;
}
inline double OHLC::open() const {
  // @@protoc_insertion_point(field_get:upstox.OHLC.open)
  return _internal_open();
}
inline void OHLC::set_open(double value) {
  _internal_set_open(value);
  // @@protoc_insertion_point(field_set:upstox.OHLC.open)
}
inline double OHLC::_internal_open() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.open_;
}
inline void OHLC::_internal_set_open(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.open_ = value;
}

// double high = 3;
inline void OHLC::clear_high() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.high_ = 0;
}
inline double OHLC::high() const {
  // @@protoc_insertion_point(field_get:upstox.OHLC.high)
  return _internal_high();
}
inline void OHLC::set_high(double value) {
  _internal_set_high(value);
  // @@protoc_insertion_point(field_set:upstox.OHLC.high)
}
inline double OHLC::_internal_high() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.high_;
}
inline void OHLC::_internal_set_high(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.high_ = value;
}

// double low = 4;
inline void OHLC::clear_low() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.low_ = 0;
}
inline double OHLC::low() const {
  // @@protoc_insertion_point(field_get:upstox.OHLC.low)
  return _internal_low();
}
inline void OHLC::set_low(double value) {
  _internal_set_low(value);
  // @@protoc_insertion_point(field_set:upstox.OHLC.low)
}
inline double OHLC::_internal_low() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.low_;
}
inline void OHLC::_internal_set_low(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.low_ = value;
}

// double close = 5;
inline void OHLC::clear_close() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.close_ = 0;
}
inline double OHLC::close() const {
  // @@protoc_insertion_point(field_get:upstox.OHLC.close)
  return _internal_close();
}
inline void OHLC::set_close(double value) {
  _internal_set_close(value);
  // @@protoc_insertion_point(field_set:upstox.OHLC.close)
}
inline double OHLC::_internal_close() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.close_;
}
inline void OHLC::_internal_set_close(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.close_ = value;
}

// int64 vol = 6;
inline void OHLC::clear_vol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vol_ = ::int64_t{0};
}
inline ::int64_t OHLC::vol() const {
  // @@protoc_insertion_point(field_get:upstox.OHLC.vol)
  return _internal_vol();
}
inline void OHLC::set_vol(::int64_t value) {
  _internal_set_vol(value);
  // @@protoc_insertion_point(field_set:upstox.OHLC.vol)
}
inline ::int64_t OHLC::_internal_vol() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vol_;
}
inline void OHLC::_internal_set_vol(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vol_ = value;
}

// int64 ts = 7;
inline void OHLC::clear_ts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ts_ = ::int64_t{0};
}
inline ::int64_t OHLC::ts() const {
  // @@protoc_insertion_point(field_get:upstox.OHLC.ts)
  return _internal_ts();
}
inline void OHLC::set_ts(::int64_t value) {
  _internal_set_ts(value);
  // @@protoc_insertion_point(field_set:upstox.OHLC.ts)
}
inline ::int64_t OHLC::_internal_ts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ts_;
}
inline void OHLC::_internal_set_ts(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ts_ = value;
}

// -------------------------------------------------------------------

// MarketFullFeed

// .upstox.LTPC ltpc = 1;
inline bool MarketFullFeed::has_ltpc() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ltpc_ != nullptr);
  return value;
}
inline void MarketFullFeed::clear_ltpc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ltpc_ != nullptr) _impl_.ltpc_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::upstox::LTPC& MarketFullFeed::_internal_ltpc() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::upstox::LTPC* p = _impl_.ltpc_;
  return p != nullptr ? *p : reinterpret_cast<const ::upstox::LTPC&>(::upstox::_LTPC_default_instance_);
}
inline const ::upstox::LTPC& MarketFullFeed::ltpc() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:upstox.MarketFullFeed.ltpc)
  return _internal_ltpc();
}
inline void MarketFullFeed::unsafe_arena_set_allocated_ltpc(::upstox::LTPC* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ltpc_);
  }
  _impl_.ltpc_ = reinterpret_cast<::upstox::LTPC*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:upstox.MarketFullFeed.ltpc)
}
inline ::upstox::LTPC* MarketFullFeed::release_ltpc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::upstox::LTPC* released = _impl_.ltpc_;
  _impl_.ltpc_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::upstox::LTPC* MarketFullFeed::unsafe_arena_release_ltpc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:upstox.MarketFullFeed.ltpc)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::upstox::LTPC* temp = _impl_.ltpc_;
  _impl_.ltpc_ = nullptr;
  return temp;
}
inline ::upstox::LTPC* MarketFullFeed::_internal_mutable_ltpc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ltpc_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::upstox::LTPC>(GetArena());
    _impl_.ltpc_ = reinterpret_cast<::upstox::LTPC*>(p);
  }
  return _impl_.ltpc_;
}
inline ::upstox::LTPC* MarketFullFeed::mutable_ltpc() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::upstox::LTPC* _msg = _internal_mutable_ltpc();
  // @@protoc_insertion_point(field_mutable:upstox.MarketFullFeed.ltpc)
  return _msg;
}
inline void MarketFullFeed::set_allocated_ltpc(::upstox::LTPC* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.ltpc_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.ltpc_ = reinterpret_cast<::upstox::LTPC*>(value);
  // @@protoc_insertion_point(field_set_allocated:upstox.MarketFullFeed.ltpc)
}

// .upstox.MarketLevel marketLevel = 2;
inline bool MarketFullFeed::has_marketlevel() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.marketlevel_ != nullptr);
  return value;
}
inline void MarketFullFeed::clear_marketlevel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.marketlevel_ != nullptr) _impl_.marketlevel_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::upstox::MarketLevel& MarketFullFeed::_internal_marketlevel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::upstox::MarketLevel* p = _impl_.marketlevel_;
  return p != nullptr ? *p : reinterpret_cast<const ::upstox::MarketLevel&>(::upstox::_MarketLevel_default_instance_);
}
inline const ::upstox::MarketLevel& MarketFullFeed::marketlevel() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:upstox.MarketFullFeed.marketLevel)
  return _internal_marketlevel();
}
inline void MarketFullFeed::unsafe_arena_set_allocated_marketlevel(::upstox::MarketLevel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.marketlevel_);
  }
  _impl_.marketlevel_ = reinterpret_cast<::upstox::MarketLevel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:upstox.MarketFullFeed.marketLevel)
}
inline ::upstox::MarketLevel* MarketFullFeed::release_marketlevel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::upstox::MarketLevel* released = _impl_.marketlevel_;
  _impl_.marketlevel_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::upstox::MarketLevel* MarketFullFeed::unsafe_arena_release_marketlevel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:upstox.MarketFullFeed.marketLevel)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::upstox::MarketLevel* temp = _impl_.marketlevel_;
  _impl_.marketlevel_ = nullptr;
  return temp;
}
inline ::upstox::MarketLevel* MarketFullFeed::_internal_mutable_marketlevel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.marketlevel_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::upstox::MarketLevel>(GetArena());
    _impl_.marketlevel_ = reinterpret_cast<::upstox::MarketLevel*>(p);
  }
  return _impl_.marketlevel_;
}
inline ::upstox::MarketLevel* MarketFullFeed::mutable_marketlevel() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::upstox::MarketLevel* _msg = _internal_mutable_marketlevel();
  // @@protoc_insertion_point(field_mutable:upstox.MarketFullFeed.marketLevel)
  return _msg;
}
inline void MarketFullFeed::set_allocated_marketlevel(::upstox::MarketLevel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.marketlevel_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.marketlevel_ = reinterpret_cast<::upstox::MarketLevel*>(value);
  // @@protoc_insertion_point(field_set_allocated:upstox.MarketFullFeed.marketLevel)
}

// .upstox.OptionGreeks optionGreeks = 3;
inline bool MarketFullFeed::has_optiongreeks() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.optiongreeks_ != nullptr);
  return value;
}
inline void MarketFullFeed::clear_optiongreeks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optiongreeks_ != nullptr) _impl_.optiongreeks_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::upstox::OptionGreeks& MarketFullFeed::_internal_optiongreeks() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::upstox::OptionGreeks* p = _impl_.optiongreeks_;
  return p != nullptr ? *p : reinterpret_cast<const ::upstox::OptionGreeks&>(::upstox::_OptionGreeks_default_instance_);
}
inline const ::upstox::OptionGreeks& MarketFullFeed::optiongreeks() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:upstox.MarketFullFeed.optionGreeks)
  return _internal_optiongreeks();
}
inline void MarketFullFeed::unsafe_arena_set_allocated_optiongreeks(::upstox::OptionGreeks* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optiongreeks_);
  }
  _impl_.optiongreeks_ = reinterpret_cast<::upstox::OptionGreeks*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:upstox.MarketFullFeed.optionGreeks)
}
inline ::upstox::OptionGreeks* MarketFullFeed::release_optiongreeks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::upstox::OptionGreeks* released = _impl_.optiongreeks_;
  _impl_.optiongreeks_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::upstox::OptionGreeks* MarketFullFeed::unsafe_arena_release_optiongreeks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:upstox.MarketFullFeed.optionGreeks)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::upstox::OptionGreeks* temp = _impl_.optiongreeks_;
  _impl_.optiongreeks_ = nullptr;
  return temp;
}
inline ::upstox::OptionGreeks* MarketFullFeed::_internal_mutable_optiongreeks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optiongreeks_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::upstox::OptionGreeks>(GetArena());
    _impl_.optiongreeks_ = reinterpret_cast<::upstox::OptionGreeks*>(p);
  }
  return _impl_.optiongreeks_;
}
inline ::upstox::OptionGreeks* MarketFullFeed::mutable_optiongreeks() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::upstox::OptionGreeks* _msg = _internal_mutable_optiongreeks();
  // @@protoc_insertion_point(field_mutable:upstox.MarketFullFeed.optionGreeks)
  return _msg;
}
inline void MarketFullFeed::set_allocated_optiongreeks(::upstox::OptionGreeks* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.optiongreeks_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.optiongreeks_ = reinterpret_cast<::upstox::OptionGreeks*>(value);
  // @@protoc_insertion_point(field_set_allocated:upstox.MarketFullFeed.optionGreeks)
}

// .upstox.MarketOHLC marketOHLC = 4;
inline bool MarketFullFeed::has_marketohlc() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.marketohlc_ != nullptr);
  return value;
}
inline void MarketFullFeed::clear_marketohlc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.marketohlc_ != nullptr) _impl_.marketohlc_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::upstox::MarketOHLC& MarketFullFeed::_internal_marketohlc() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::upstox::MarketOHLC* p = _impl_.marketohlc_;
  return p != nullptr ? *p : reinterpret_cast<const ::upstox::MarketOHLC&>(::upstox::_MarketOHLC_default_instance_);
}
inline const ::upstox::MarketOHLC& MarketFullFeed::marketohlc() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:upstox.MarketFullFeed.marketOHLC)
  return _internal_marketohlc();
}
inline void MarketFullFeed::unsafe_arena_set_allocated_marketohlc(::upstox::MarketOHLC* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.marketohlc_);
  }
  _impl_.marketohlc_ = reinterpret_cast<::upstox::MarketOHLC*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:upstox.MarketFullFeed.marketOHLC)
}
inline ::upstox::MarketOHLC* MarketFullFeed::release_marketohlc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::upstox::MarketOHLC* released = _impl_.marketohlc_;
  _impl_.marketohlc_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::upstox::MarketOHLC* MarketFullFeed::unsafe_arena_release_marketohlc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:upstox.MarketFullFeed.marketOHLC)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::upstox::MarketOHLC* temp = _impl_.marketohlc_;
  _impl_.marketohlc_ = nullptr;
  return temp;
}
inline ::upstox::MarketOHLC* MarketFullFeed::_internal_mutable_marketohlc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.marketohlc_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::upstox::MarketOHLC>(GetArena());
    _impl_.marketohlc_ = reinterpret_cast<::upstox::MarketOHLC*>(p);
  }
  return _impl_.marketohlc_;
}
inline ::upstox::MarketOHLC* MarketFullFeed::mutable_marketohlc() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::upstox::MarketOHLC* _msg = _internal_mutable_marketohlc();
  // @@protoc_insertion_point(field_mutable:upstox.MarketFullFeed.marketOHLC)
  return _msg;
}
inline void MarketFullFeed::set_allocated_marketohlc(::upstox::MarketOHLC* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.marketohlc_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.marketohlc_ = reinterpret_cast<::upstox::MarketOHLC*>(value);
  // @@protoc_insertion_point(field_set_allocated:upstox.MarketFullFeed.marketOHLC)
}

// double atp = 5;
inline void MarketFullFeed::clear_atp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.atp_ = 0;
}
inline double MarketFullFeed::atp() const {
  // @@protoc_insertion_point(field_get:upstox.MarketFullFeed.atp)
  return _internal_atp();
}
inline void MarketFullFeed::set_atp(double value) {
  _internal_set_atp(value);
  // @@protoc_insertion_point(field_set:upstox.MarketFullFeed.atp)
}
inline double MarketFullFeed::_internal_atp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.atp_;
}
inline void MarketFullFeed::_internal_set_atp(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.atp_ = value;
}

// int64 vtt = 6;
inline void MarketFullFeed::clear_vtt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vtt_ = ::int64_t{0};
}
inline ::int64_t MarketFullFeed::vtt() const {
  // @@protoc_insertion_point(field_get:upstox.MarketFullFeed.vtt)
  return _internal_vtt();
}
inline void MarketFullFeed::set_vtt(::int64_t value) {
  _internal_set_vtt(value);
  // @@protoc_insertion_point(field_set:upstox.MarketFullFeed.vtt)
}
inline ::int64_t MarketFullFeed::_internal_vtt() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vtt_;
}
inline void MarketFullFeed::_internal_set_vtt(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vtt_ = value;
}

// double oi = 7;
inline void MarketFullFeed::clear_oi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.oi_ = 0;
}
inline double MarketFullFeed::oi() const {
  // @@protoc_insertion_point(field_get:upstox.MarketFullFeed.oi)
  return _internal_oi();
}
inline void MarketFullFeed::set_oi(double value) {
  _internal_set_oi(value);
  // @@protoc_insertion_point(field_set:upstox.MarketFullFeed.oi)
}
inline double MarketFullFeed::_internal_oi() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.oi_;
}
inline void MarketFullFeed::_internal_set_oi(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.oi_ = value;
}

// double iv = 8;
inline void MarketFullFeed::clear_iv() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.iv_ = 0;
}
inline double MarketFullFeed::iv() const {
  // @@protoc_insertion_point(field_get:upstox.MarketFullFeed.iv)
  return _internal_iv();
}
inline void MarketFullFeed::set_iv(double value) {
  _internal_set_iv(value);
  // @@protoc_insertion_point(field_set:upstox.MarketFullFeed.iv)
}
inline double MarketFullFeed::_internal_iv() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.iv_;
}
inline void MarketFullFeed::_internal_set_iv(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.iv_ = value;
}

// double tbq = 9;
inline void MarketFullFeed::clear_tbq() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tbq_ = 0;
}
inline double MarketFullFeed::tbq() const {
  // @@protoc_insertion_point(field_get:upstox.MarketFullFeed.tbq)
  return _internal_tbq();
}
inline void MarketFullFeed::set_tbq(double value) {
  _internal_set_tbq(value);
  // @@protoc_insertion_point(field_set:upstox.MarketFullFeed.tbq)
}
inline double MarketFullFeed::_internal_tbq() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tbq_;
}
inline void MarketFullFeed::_internal_set_tbq(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tbq_ = value;
}

// double tsq = 10;
inline void MarketFullFeed::clear_tsq() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tsq_ = 0;
}
inline double MarketFullFeed::tsq() const {
  // @@protoc_insertion_point(field_get:upstox.MarketFullFeed.tsq)
  return _internal_tsq();
}
inline void MarketFullFeed::set_tsq(double value) {
  _internal_set_tsq(value);
  // @@protoc_insertion_point(field_set:upstox.MarketFullFeed.tsq)
}
inline double MarketFullFeed::_internal_tsq() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tsq_;
}
inline void MarketFullFeed::_internal_set_tsq(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tsq_ = value;
}

// -------------------------------------------------------------------

// IndexFullFeed

// .upstox.LTPC ltpc = 1;
inline bool IndexFullFeed::has_ltpc() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ltpc_ != nullptr);
  return value;
}
inline void IndexFullFeed::clear_ltpc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ltpc_ != nullptr) _impl_.ltpc_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::upstox::LTPC& IndexFullFeed::_internal_ltpc() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::upstox::LTPC* p = _impl_.ltpc_;
  return p != nullptr ? *p : reinterpret_cast<const ::upstox::LTPC&>(::upstox::_LTPC_default_instance_);
}
inline const ::upstox::LTPC& IndexFullFeed::ltpc() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:upstox.IndexFullFeed.ltpc)
  return _internal_ltpc();
}
inline void IndexFullFeed::unsafe_arena_set_allocated_ltpc(::upstox::LTPC* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ltpc_);
  }
  _impl_.ltpc_ = reinterpret_cast<::upstox::LTPC*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:upstox.IndexFullFeed.ltpc)
}
inline ::upstox::LTPC* IndexFullFeed::release_ltpc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::upstox::LTPC* released = _impl_.ltpc_;
  _impl_.ltpc_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::upstox::LTPC* IndexFullFeed::unsafe_arena_release_ltpc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:upstox.IndexFullFeed.ltpc)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::upstox::LTPC* temp = _impl_.ltpc_;
  _impl_.ltpc_ = nullptr;
  return temp;
}
inline ::upstox::LTPC* IndexFullFeed::_internal_mutable_ltpc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ltpc_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::upstox::LTPC>(GetArena());
    _impl_.ltpc_ = reinterpret_cast<::upstox::LTPC*>(p);
  }
  return _impl_.ltpc_;
}
inline ::upstox::LTPC* IndexFullFeed::mutable_ltpc() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::upstox::LTPC* _msg = _internal_mutable_ltpc();
  // @@protoc_insertion_point(field_mutable:upstox.IndexFullFeed.ltpc)
  return _msg;
}
inline void IndexFullFeed::set_allocated_ltpc(::upstox::LTPC* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.ltpc_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.ltpc_ = reinterpret_cast<::upstox::LTPC*>(value);
  // @@protoc_insertion_point(field_set_allocated:upstox.IndexFullFeed.ltpc)
}

// .upstox.MarketOHLC marketOHLC = 2;
inline bool IndexFullFeed::has_marketohlc() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.marketohlc_ != nullptr);
  return value;
}
inline void IndexFullFeed::clear_marketohlc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.marketohlc_ != nullptr) _impl_.marketohlc_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::upstox::MarketOHLC& IndexFullFeed::_internal_marketohlc() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::upstox::MarketOHLC* p = _impl_.marketohlc_;
  return p != nullptr ? *p : reinterpret_cast<const ::upstox::MarketOHLC&>(::upstox::_MarketOHLC_default_instance_);
}
inline const ::upstox::MarketOHLC& IndexFullFeed::marketohlc() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:upstox.IndexFullFeed.marketOHLC)
  return _internal_marketohlc();
}
inline void IndexFullFeed::unsafe_arena_set_allocated_marketohlc(::upstox::MarketOHLC* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.marketohlc_);
  }
  _impl_.marketohlc_ = reinterpret_cast<::upstox::MarketOHLC*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:upstox.IndexFullFeed.marketOHLC)
}
inline ::upstox::MarketOHLC* IndexFullFeed::release_marketohlc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::upstox::MarketOHLC* released = _impl_.marketohlc_;
  _impl_.marketohlc_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::upstox::MarketOHLC* IndexFullFeed::unsafe_arena_release_marketohlc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:upstox.IndexFullFeed.marketOHLC)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::upstox::MarketOHLC* temp = _impl_.marketohlc_;
  _impl_.marketohlc_ = nullptr;
  return temp;
}
inline ::upstox::MarketOHLC* IndexFullFeed::_internal_mutable_marketohlc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.marketohlc_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::upstox::MarketOHLC>(GetArena());
    _impl_.marketohlc_ = reinterpret_cast<::upstox::MarketOHLC*>(p);
  }
  return _impl_.marketohlc_;
}
inline ::upstox::MarketOHLC* IndexFullFeed::mutable_marketohlc() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::upstox::MarketOHLC* _msg = _internal_mutable_marketohlc();
  // @@protoc_insertion_point(field_mutable:upstox.IndexFullFeed.marketOHLC)
  return _msg;
}
inline void IndexFullFeed::set_allocated_marketohlc(::upstox::MarketOHLC* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.marketohlc_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.marketohlc_ = reinterpret_cast<::upstox::MarketOHLC*>(value);
  // @@protoc_insertion_point(field_set_allocated:upstox.IndexFullFeed.marketOHLC)
}

// -------------------------------------------------------------------

// FullFeed

// .upstox.MarketFullFeed marketFF = 1;
inline bool FullFeed::has_marketff() const {
  return FullFeedUnion_case() == kMarketFF;
}
inline bool FullFeed::_internal_has_marketff() const {
  return FullFeedUnion_case() == kMarketFF;
}
inline void FullFeed::set_has_marketff() {
  _impl_._oneof_case_[0] = kMarketFF;
}
inline void FullFeed::clear_marketff() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (FullFeedUnion_case() == kMarketFF) {
    if (GetArena() == nullptr) {
      delete _impl_.FullFeedUnion_.marketff_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.FullFeedUnion_.marketff_);
    }
    clear_has_FullFeedUnion();
  }
}
inline ::upstox::MarketFullFeed* FullFeed::release_marketff() {
  // @@protoc_insertion_point(field_release:upstox.FullFeed.marketFF)
  if (FullFeedUnion_case() == kMarketFF) {
    clear_has_FullFeedUnion();
    auto* temp = _impl_.FullFeedUnion_.marketff_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.FullFeedUnion_.marketff_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::upstox::MarketFullFeed& FullFeed::_internal_marketff() const {
  return FullFeedUnion_case() == kMarketFF ? *_impl_.FullFeedUnion_.marketff_ : reinterpret_cast<::upstox::MarketFullFeed&>(::upstox::_MarketFullFeed_default_instance_);
}
inline const ::upstox::MarketFullFeed& FullFeed::marketff() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:upstox.FullFeed.marketFF)
  return _internal_marketff();
}
inline ::upstox::MarketFullFeed* FullFeed::unsafe_arena_release_marketff() {
  // @@protoc_insertion_point(field_unsafe_arena_release:upstox.FullFeed.marketFF)
  if (FullFeedUnion_case() == kMarketFF) {
    clear_has_FullFeedUnion();
    auto* temp = _impl_.FullFeedUnion_.marketff_;
    _impl_.FullFeedUnion_.marketff_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void FullFeed::unsafe_arena_set_allocated_marketff(::upstox::MarketFullFeed* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_FullFeedUnion();
  if (value) {
    set_has_marketff();
    _impl_.FullFeedUnion_.marketff_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:upstox.FullFeed.marketFF)
}
inline ::upstox::MarketFullFeed* FullFeed::_internal_mutable_marketff() {
  if (FullFeedUnion_case() != kMarketFF) {
    clear_FullFeedUnion();
    set_has_marketff();
    _impl_.FullFeedUnion_.marketff_ =
        ::google::protobuf::Message::DefaultConstruct<::upstox::MarketFullFeed>(GetArena());
  }
  return _impl_.FullFeedUnion_.marketff_;
}
inline ::upstox::MarketFullFeed* FullFeed::mutable_marketff() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::upstox::MarketFullFeed* _msg = _internal_mutable_marketff();
  // @@protoc_insertion_point(field_mutable:upstox.FullFeed.marketFF)
  return _msg;
}

// .upstox.IndexFullFeed indexFF = 2;
inline bool FullFeed::has_indexff() const {
  return FullFeedUnion_case() == kIndexFF;
}
inline bool FullFeed::_internal_has_indexff() const {
  return FullFeedUnion_case() == kIndexFF;
}
inline void FullFeed::set_has_indexff() {
  _impl_._oneof_case_[0] = kIndexFF;
}
inline void FullFeed::clear_indexff() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (FullFeedUnion_case() == kIndexFF) {
    if (GetArena() == nullptr) {
      delete _impl_.FullFeedUnion_.indexff_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.FullFeedUnion_.indexff_);
    }
    clear_has_FullFeedUnion();
  }
}
inline ::upstox::IndexFullFeed* FullFeed::release_indexff() {
  // @@protoc_insertion_point(field_release:upstox.FullFeed.indexFF)
  if (FullFeedUnion_case() == kIndexFF) {
    clear_has_FullFeedUnion();
    auto* temp = _impl_.FullFeedUnion_.indexff_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.FullFeedUnion_.indexff_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::upstox::IndexFullFeed& FullFeed::_internal_indexff() const {
  return FullFeedUnion_case() == kIndexFF ? *_impl_.FullFeedUnion_.indexff_ : reinterpret_cast<::upstox::IndexFullFeed&>(::upstox::_IndexFullFeed_default_instance_);
}
inline const ::upstox::IndexFullFeed& FullFeed::indexff() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:upstox.FullFeed.indexFF)
  return _internal_indexff();
}
inline ::upstox::IndexFullFeed* FullFeed::unsafe_arena_release_indexff() {
  // @@protoc_insertion_point(field_unsafe_arena_release:upstox.FullFeed.indexFF)
  if (FullFeedUnion_case() == kIndexFF) {
    clear_has_FullFeedUnion();
    auto* temp = _impl_.FullFeedUnion_.indexff_;
    _impl_.FullFeedUnion_.indexff_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void FullFeed::unsafe_arena_set_allocated_indexff(::upstox::IndexFullFeed* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_FullFeedUnion();
  if (value) {
    set_has_indexff();
    _impl_.FullFeedUnion_.indexff_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:upstox.FullFeed.indexFF)
}
inline ::upstox::IndexFullFeed* FullFeed::_internal_mutable_indexff() {
  if (FullFeedUnion_case() != kIndexFF) {
    clear_FullFeedUnion();
    set_has_indexff();
    _impl_.FullFeedUnion_.indexff_ =
        ::google::protobuf::Message::DefaultConstruct<::upstox::IndexFullFeed>(GetArena());
  }
  return _impl_.FullFeedUnion_.indexff_;
}
inline ::upstox::IndexFullFeed* FullFeed::mutable_indexff() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::upstox::IndexFullFeed* _msg = _internal_mutable_indexff();
  // @@protoc_insertion_point(field_mutable:upstox.FullFeed.indexFF)
  return _msg;
}

inline bool FullFeed::has_FullFeedUnion() const {
  return FullFeedUnion_case() != FULLFEEDUNION_NOT_SET;
}
inline void FullFeed::clear_has_FullFeedUnion() {
  _impl_._oneof_case_[0] = FULLFEEDUNION_NOT_SET;
}
inline FullFeed::FullFeedUnionCase FullFeed::FullFeedUnion_case() const {
  return FullFeed::FullFeedUnionCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// FirstLevelWithGreeks

// .upstox.LTPC ltpc = 1;
inline bool FirstLevelWithGreeks::has_ltpc() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ltpc_ != nullptr);
  return value;
}
inline void FirstLevelWithGreeks::clear_ltpc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ltpc_ != nullptr) _impl_.ltpc_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::upstox::LTPC& FirstLevelWithGreeks::_internal_ltpc() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::upstox::LTPC* p = _impl_.ltpc_;
  return p != nullptr ? *p : reinterpret_cast<const ::upstox::LTPC&>(::upstox::_LTPC_default_instance_);
}
inline const ::upstox::LTPC& FirstLevelWithGreeks::ltpc() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:upstox.FirstLevelWithGreeks.ltpc)
  return _internal_ltpc();
}
inline void FirstLevelWithGreeks::unsafe_arena_set_allocated_ltpc(::upstox::LTPC* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ltpc_);
  }
  _impl_.ltpc_ = reinterpret_cast<::upstox::LTPC*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:upstox.FirstLevelWithGreeks.ltpc)
}
inline ::upstox::LTPC* FirstLevelWithGreeks::release_ltpc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::upstox::LTPC* released = _impl_.ltpc_;
  _impl_.ltpc_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::upstox::LTPC* FirstLevelWithGreeks::unsafe_arena_release_ltpc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:upstox.FirstLevelWithGreeks.ltpc)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::upstox::LTPC* temp = _impl_.ltpc_;
  _impl_.ltpc_ = nullptr;
  return temp;
}
inline ::upstox::LTPC* FirstLevelWithGreeks::_internal_mutable_ltpc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ltpc_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::upstox::LTPC>(GetArena());
    _impl_.ltpc_ = reinterpret_cast<::upstox::LTPC*>(p);
  }
  return _impl_.ltpc_;
}
inline ::upstox::LTPC* FirstLevelWithGreeks::mutable_ltpc() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::upstox::LTPC* _msg = _internal_mutable_ltpc();
  // @@protoc_insertion_point(field_mutable:upstox.FirstLevelWithGreeks.ltpc)
  return _msg;
}
inline void FirstLevelWithGreeks::set_allocated_ltpc(::upstox::LTPC* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.ltpc_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.ltpc_ = reinterpret_cast<::upstox::LTPC*>(value);
  // @@protoc_insertion_point(field_set_allocated:upstox.FirstLevelWithGreeks.ltpc)
}

// .upstox.Quote firstDepth = 2;
inline bool FirstLevelWithGreeks::has_firstdepth() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.firstdepth_ != nullptr);
  return value;
}
inline void FirstLevelWithGreeks::clear_firstdepth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.firstdepth_ != nullptr) _impl_.firstdepth_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::upstox::Quote& FirstLevelWithGreeks::_internal_firstdepth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::upstox::Quote* p = _impl_.firstdepth_;
  return p != nullptr ? *p : reinterpret_cast<const ::upstox::Quote&>(::upstox::_Quote_default_instance_);
}
inline const ::upstox::Quote& FirstLevelWithGreeks::firstdepth() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:upstox.FirstLevelWithGreeks.firstDepth)
  return _internal_firstdepth();
}
inline void FirstLevelWithGreeks::unsafe_arena_set_allocated_firstdepth(::upstox::Quote* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.firstdepth_);
  }
  _impl_.firstdepth_ = reinterpret_cast<::upstox::Quote*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:upstox.FirstLevelWithGreeks.firstDepth)
}
inline ::upstox::Quote* FirstLevelWithGreeks::release_firstdepth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::upstox::Quote* released = _impl_.firstdepth_;
  _impl_.firstdepth_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::upstox::Quote* FirstLevelWithGreeks::unsafe_arena_release_firstdepth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:upstox.FirstLevelWithGreeks.firstDepth)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::upstox::Quote* temp = _impl_.firstdepth_;
  _impl_.firstdepth_ = nullptr;
  return temp;
}
inline ::upstox::Quote* FirstLevelWithGreeks::_internal_mutable_firstdepth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.firstdepth_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::upstox::Quote>(GetArena());
    _impl_.firstdepth_ = reinterpret_cast<::upstox::Quote*>(p);
  }
  return _impl_.firstdepth_;
}
inline ::upstox::Quote* FirstLevelWithGreeks::mutable_firstdepth() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::upstox::Quote* _msg = _internal_mutable_firstdepth();
  // @@protoc_insertion_point(field_mutable:upstox.FirstLevelWithGreeks.firstDepth)
  return _msg;
}
inline void FirstLevelWithGreeks::set_allocated_firstdepth(::upstox::Quote* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.firstdepth_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.firstdepth_ = reinterpret_cast<::upstox::Quote*>(value);
  // @@protoc_insertion_point(field_set_allocated:upstox.FirstLevelWithGreeks.firstDepth)
}

// .upstox.OptionGreeks optionGreeks = 3;
inline bool FirstLevelWithGreeks::has_optiongreeks() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.optiongreeks_ != nullptr);
  return value;
}
inline void FirstLevelWithGreeks::clear_optiongreeks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optiongreeks_ != nullptr) _impl_.optiongreeks_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::upstox::OptionGreeks& FirstLevelWithGreeks::_internal_optiongreeks() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::upstox::OptionGreeks* p = _impl_.optiongreeks_;
  return p != nullptr ? *p : reinterpret_cast<const ::upstox::OptionGreeks&>(::upstox::_OptionGreeks_default_instance_);
}
inline const ::upstox::OptionGreeks& FirstLevelWithGreeks::optiongreeks() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:upstox.FirstLevelWithGreeks.optionGreeks)
  return _internal_optiongreeks();
}
inline void FirstLevelWithGreeks::unsafe_arena_set_allocated_optiongreeks(::upstox::OptionGreeks* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.optiongreeks_);
  }
  _impl_.optiongreeks_ = reinterpret_cast<::upstox::OptionGreeks*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:upstox.FirstLevelWithGreeks.optionGreeks)
}
inline ::upstox::OptionGreeks* FirstLevelWithGreeks::release_optiongreeks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::upstox::OptionGreeks* released = _impl_.optiongreeks_;
  _impl_.optiongreeks_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::upstox::OptionGreeks* FirstLevelWithGreeks::unsafe_arena_release_optiongreeks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:upstox.FirstLevelWithGreeks.optionGreeks)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::upstox::OptionGreeks* temp = _impl_.optiongreeks_;
  _impl_.optiongreeks_ = nullptr;
  return temp;
}
inline ::upstox::OptionGreeks* FirstLevelWithGreeks::_internal_mutable_optiongreeks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.optiongreeks_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::upstox::OptionGreeks>(GetArena());
    _impl_.optiongreeks_ = reinterpret_cast<::upstox::OptionGreeks*>(p);
  }
  return _impl_.optiongreeks_;
}
inline ::upstox::OptionGreeks* FirstLevelWithGreeks::mutable_optiongreeks() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::upstox::OptionGreeks* _msg = _internal_mutable_optiongreeks();
  // @@protoc_insertion_point(field_mutable:upstox.FirstLevelWithGreeks.optionGreeks)
  return _msg;
}
inline void FirstLevelWithGreeks::set_allocated_optiongreeks(::upstox::OptionGreeks* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.optiongreeks_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.optiongreeks_ = reinterpret_cast<::upstox::OptionGreeks*>(value);
  // @@protoc_insertion_point(field_set_allocated:upstox.FirstLevelWithGreeks.optionGreeks)
}

// int64 vtt = 4;
inline void FirstLevelWithGreeks::clear_vtt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vtt_ = ::int64_t{0};
}
inline ::int64_t FirstLevelWithGreeks::vtt() const {
  // @@protoc_insertion_point(field_get:upstox.FirstLevelWithGreeks.vtt)
  return _internal_vtt();
}
inline void FirstLevelWithGreeks::set_vtt(::int64_t value) {
  _internal_set_vtt(value);
  // @@protoc_insertion_point(field_set:upstox.FirstLevelWithGreeks.vtt)
}
inline ::int64_t FirstLevelWithGreeks::_internal_vtt() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vtt_;
}
inline void FirstLevelWithGreeks::_internal_set_vtt(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vtt_ = value;
}

// double oi = 5;
inline void FirstLevelWithGreeks::clear_oi() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.oi_ = 0;
}
inline double FirstLevelWithGreeks::oi() const {
  // @@protoc_insertion_point(field_get:upstox.FirstLevelWithGreeks.oi)
  return _internal_oi();
}
inline void FirstLevelWithGreeks::set_oi(double value) {
  _internal_set_oi(value);
  // @@protoc_insertion_point(field_set:upstox.FirstLevelWithGreeks.oi)
}
inline double FirstLevelWithGreeks::_internal_oi() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.oi_;
}
inline void FirstLevelWithGreeks::_internal_set_oi(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.oi_ = value;
}

// double iv = 6;
inline void FirstLevelWithGreeks::clear_iv() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.iv_ = 0;
}
inline double FirstLevelWithGreeks::iv() const {
  // @@protoc_insertion_point(field_get:upstox.FirstLevelWithGreeks.iv)
  return _internal_iv();
}
inline void FirstLevelWithGreeks::set_iv(double value) {
  _internal_set_iv(value);
  // @@protoc_insertion_point(field_set:upstox.FirstLevelWithGreeks.iv)
}
inline double FirstLevelWithGreeks::_internal_iv() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.iv_;
}
inline void FirstLevelWithGreeks::_internal_set_iv(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.iv_ = value;
}

// -------------------------------------------------------------------

// Feed

// .upstox.LTPC ltpc = 1;
inline bool Feed::has_ltpc() const {
  return FeedUnion_case() == kLtpc;
}
inline bool Feed::_internal_has_ltpc() const {
  return FeedUnion_case() == kLtpc;
}
inline void Feed::set_has_ltpc() {
  _impl_._oneof_case_[0] = kLtpc;
}
inline void Feed::clear_ltpc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (FeedUnion_case() == kLtpc) {
    if (GetArena() == nullptr) {
      delete _impl_.FeedUnion_.ltpc_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.FeedUnion_.ltpc_);
    }
    clear_has_FeedUnion();
  }
}
inline ::upstox::LTPC* Feed::release_ltpc() {
  // @@protoc_insertion_point(field_release:upstox.Feed.ltpc)
  if (FeedUnion_case() == kLtpc) {
    clear_has_FeedUnion();
    auto* temp = _impl_.FeedUnion_.ltpc_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.FeedUnion_.ltpc_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::upstox::LTPC& Feed::_internal_ltpc() const {
  return FeedUnion_case() == kLtpc ? *_impl_.FeedUnion_.ltpc_ : reinterpret_cast<::upstox::LTPC&>(::upstox::_LTPC_default_instance_);
}
inline const ::upstox::LTPC& Feed::ltpc() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:upstox.Feed.ltpc)
  return _internal_ltpc();
}
inline ::upstox::LTPC* Feed::unsafe_arena_release_ltpc() {
  // @@protoc_insertion_point(field_unsafe_arena_release:upstox.Feed.ltpc)
  if (FeedUnion_case() == kLtpc) {
    clear_has_FeedUnion();
    auto* temp = _impl_.FeedUnion_.ltpc_;
    _impl_.FeedUnion_.ltpc_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Feed::unsafe_arena_set_allocated_ltpc(::upstox::LTPC* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_FeedUnion();
  if (value) {
    set_has_ltpc();
    _impl_.FeedUnion_.ltpc_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:upstox.Feed.ltpc)
}
inline ::upstox::LTPC* Feed::_internal_mutable_ltpc() {
  if (FeedUnion_case() != kLtpc) {
    clear_FeedUnion();
    set_has_ltpc();
    _impl_.FeedUnion_.ltpc_ =
        ::google::protobuf::Message::DefaultConstruct<::upstox::LTPC>(GetArena());
  }
  return _impl_.FeedUnion_.ltpc_;
}
inline ::upstox::LTPC* Feed::mutable_ltpc() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::upstox::LTPC* _msg = _internal_mutable_ltpc();
  // @@protoc_insertion_point(field_mutable:upstox.Feed.ltpc)
  return _msg;
}

// .upstox.FullFeed fullFeed = 2;
inline bool Feed::has_fullfeed() const {
  return FeedUnion_case() == kFullFeed;
}
inline bool Feed::_internal_has_fullfeed() const {
  return FeedUnion_case() == kFullFeed;
}
inline void Feed::set_has_fullfeed() {
  _impl_._oneof_case_[0] = kFullFeed;
}
inline void Feed::clear_fullfeed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (FeedUnion_case() == kFullFeed) {
    if (GetArena() == nullptr) {
      delete _impl_.FeedUnion_.fullfeed_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.FeedUnion_.fullfeed_);
    }
    clear_has_FeedUnion();
  }
}
inline ::upstox::FullFeed* Feed::release_fullfeed() {
  // @@protoc_insertion_point(field_release:upstox.Feed.fullFeed)
  if (FeedUnion_case() == kFullFeed) {
    clear_has_FeedUnion();
    auto* temp = _impl_.FeedUnion_.fullfeed_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.FeedUnion_.fullfeed_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::upstox::FullFeed& Feed::_internal_fullfeed() const {
  return FeedUnion_case() == kFullFeed ? *_impl_.FeedUnion_.fullfeed_ : reinterpret_cast<::upstox::FullFeed&>(::upstox::_FullFeed_default_instance_);
}
inline const ::upstox::FullFeed& Feed::fullfeed() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:upstox.Feed.fullFeed)
  return _internal_fullfeed();
}
inline ::upstox::FullFeed* Feed::unsafe_arena_release_fullfeed() {
  // @@protoc_insertion_point(field_unsafe_arena_release:upstox.Feed.fullFeed)
  if (FeedUnion_case() == kFullFeed) {
    clear_has_FeedUnion();
    auto* temp = _impl_.FeedUnion_.fullfeed_;
    _impl_.FeedUnion_.fullfeed_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Feed::unsafe_arena_set_allocated_fullfeed(::upstox::FullFeed* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_FeedUnion();
  if (value) {
    set_has_fullfeed();
    _impl_.FeedUnion_.fullfeed_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:upstox.Feed.fullFeed)
}
inline ::upstox::FullFeed* Feed::_internal_mutable_fullfeed() {
  if (FeedUnion_case() != kFullFeed) {
    clear_FeedUnion();
    set_has_fullfeed();
    _impl_.FeedUnion_.fullfeed_ =
        ::google::protobuf::Message::DefaultConstruct<::upstox::FullFeed>(GetArena());
  }
  return _impl_.FeedUnion_.fullfeed_;
}
inline ::upstox::FullFeed* Feed::mutable_fullfeed() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::upstox::FullFeed* _msg = _internal_mutable_fullfeed();
  // @@protoc_insertion_point(field_mutable:upstox.Feed.fullFeed)
  return _msg;
}

// .upstox.FirstLevelWithGreeks firstLevelWithGreeks = 3;
inline bool Feed::has_firstlevelwithgreeks() const {
  return FeedUnion_case() == kFirstLevelWithGreeks;
}
inline bool Feed::_internal_has_firstlevelwithgreeks() const {
  return FeedUnion_case() == kFirstLevelWithGreeks;
}
inline void Feed::set_has_firstlevelwithgreeks() {
  _impl_._oneof_case_[0] = kFirstLevelWithGreeks;
}
inline void Feed::clear_firstlevelwithgreeks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (FeedUnion_case() == kFirstLevelWithGreeks) {
    if (GetArena() == nullptr) {
      delete _impl_.FeedUnion_.firstlevelwithgreeks_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.FeedUnion_.firstlevelwithgreeks_);
    }
    clear_has_FeedUnion();
  }
}
inline ::upstox::FirstLevelWithGreeks* Feed::release_firstlevelwithgreeks() {
  // @@protoc_insertion_point(field_release:upstox.Feed.firstLevelWithGreeks)
  if (FeedUnion_case() == kFirstLevelWithGreeks) {
    clear_has_FeedUnion();
    auto* temp = _impl_.FeedUnion_.firstlevelwithgreeks_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.FeedUnion_.firstlevelwithgreeks_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::upstox::FirstLevelWithGreeks& Feed::_internal_firstlevelwithgreeks() const {
  return FeedUnion_case() == kFirstLevelWithGreeks ? *_impl_.FeedUnion_.firstlevelwithgreeks_ : reinterpret_cast<::upstox::FirstLevelWithGreeks&>(::upstox::_FirstLevelWithGreeks_default_instance_);
}
inline const ::upstox::FirstLevelWithGreeks& Feed::firstlevelwithgreeks() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:upstox.Feed.firstLevelWithGreeks)
  return _internal_firstlevelwithgreeks();
}
inline ::upstox::FirstLevelWithGreeks* Feed::unsafe_arena_release_firstlevelwithgreeks() {
  // @@protoc_insertion_point(field_unsafe_arena_release:upstox.Feed.firstLevelWithGreeks)
  if (FeedUnion_case() == kFirstLevelWithGreeks) {
    clear_has_FeedUnion();
    auto* temp = _impl_.FeedUnion_.firstlevelwithgreeks_;
    _impl_.FeedUnion_.firstlevelwithgreeks_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void Feed::unsafe_arena_set_allocated_firstlevelwithgreeks(::upstox::FirstLevelWithGreeks* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_FeedUnion();
  if (value) {
    set_has_firstlevelwithgreeks();
    _impl_.FeedUnion_.firstlevelwithgreeks_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:upstox.Feed.firstLevelWithGreeks)
}
inline ::upstox::FirstLevelWithGreeks* Feed::_internal_mutable_firstlevelwithgreeks() {
  if (FeedUnion_case() != kFirstLevelWithGreeks) {
    clear_FeedUnion();
    set_has_firstlevelwithgreeks();
    _impl_.FeedUnion_.firstlevelwithgreeks_ =
        ::google::protobuf::Message::DefaultConstruct<::upstox::FirstLevelWithGreeks>(GetArena());
  }
  return _impl_.FeedUnion_.firstlevelwithgreeks_;
}
inline ::upstox::FirstLevelWithGreeks* Feed::mutable_firstlevelwithgreeks() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::upstox::FirstLevelWithGreeks* _msg = _internal_mutable_firstlevelwithgreeks();
  // @@protoc_insertion_point(field_mutable:upstox.Feed.firstLevelWithGreeks)
  return _msg;
}

// .upstox.RequestMode requestMode = 4;
inline void Feed::clear_requestmode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requestmode_ = 0;
}
inline ::upstox::RequestMode Feed::requestmode() const {
  // @@protoc_insertion_point(field_get:upstox.Feed.requestMode)
  return _internal_requestmode();
}
inline void Feed::set_requestmode(::upstox::RequestMode value) {
  _internal_set_requestmode(value);
  // @@protoc_insertion_point(field_set:upstox.Feed.requestMode)
}
inline ::upstox::RequestMode Feed::_internal_requestmode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::upstox::RequestMode>(_impl_.requestmode_);
}
inline void Feed::_internal_set_requestmode(::upstox::RequestMode value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requestmode_ = value;
}

inline bool Feed::has_FeedUnion() const {
  return FeedUnion_case() != FEEDUNION_NOT_SET;
}
inline void Feed::clear_has_FeedUnion() {
  _impl_._oneof_case_[0] = FEEDUNION_NOT_SET;
}
inline Feed::FeedUnionCase Feed::FeedUnion_case() const {
  return Feed::FeedUnionCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// MarketInfo

// map<string, .upstox.MarketStatus> segmentStatus = 1;
inline int MarketInfo::_internal_segmentstatus_size() const {
  return _internal_segmentstatus().size();
}
inline int MarketInfo::segmentstatus_size() const {
  return _internal_segmentstatus_size();
}
inline void MarketInfo::clear_segmentstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.segmentstatus_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::upstox::MarketStatus>& MarketInfo::_internal_segmentstatus() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.segmentstatus_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::upstox::MarketStatus>& MarketInfo::segmentstatus() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:upstox.MarketInfo.segmentStatus)
  return _internal_segmentstatus();
}
inline ::google::protobuf::Map<std::string, ::upstox::MarketStatus>* MarketInfo::_internal_mutable_segmentstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.segmentstatus_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::upstox::MarketStatus>* MarketInfo::mutable_segmentstatus() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:upstox.MarketInfo.segmentStatus)
  return _internal_mutable_segmentstatus();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// FeedResponse

// .upstox.Type type = 1;
inline void FeedResponse::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
}
inline ::upstox::Type FeedResponse::type() const {
  // @@protoc_insertion_point(field_get:upstox.FeedResponse.type)
  return _internal_type();
}
inline void FeedResponse::set_type(::upstox::Type value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:upstox.FeedResponse.type)
}
inline ::upstox::Type FeedResponse::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::upstox::Type>(_impl_.type_);
}
inline void FeedResponse::_internal_set_type(::upstox::Type value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// map<string, .upstox.Feed> feeds = 2;
inline int FeedResponse::_internal_feeds_size() const {
  return _internal_feeds().size();
}
inline int FeedResponse::feeds_size() const {
  return _internal_feeds_size();
}
inline void FeedResponse::clear_feeds() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.feeds_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::upstox::Feed>& FeedResponse::_internal_feeds() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.feeds_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::upstox::Feed>& FeedResponse::feeds() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:upstox.FeedResponse.feeds)
  return _internal_feeds();
}
inline ::google::protobuf::Map<std::string, ::upstox::Feed>* FeedResponse::_internal_mutable_feeds() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.feeds_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::upstox::Feed>* FeedResponse::mutable_feeds() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:upstox.FeedResponse.feeds)
  return _internal_mutable_feeds();
}

// int64 currentTs = 3;
inline void FeedResponse::clear_currentts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currentts_ = ::int64_t{0};
}
inline ::int64_t FeedResponse::currentts() const {
  // @@protoc_insertion_point(field_get:upstox.FeedResponse.currentTs)
  return _internal_currentts();
}
inline void FeedResponse::set_currentts(::int64_t value) {
  _internal_set_currentts(value);
  // @@protoc_insertion_point(field_set:upstox.FeedResponse.currentTs)
}
inline ::int64_t FeedResponse::_internal_currentts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.currentts_;
}
inline void FeedResponse::_internal_set_currentts(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.currentts_ = value;
}

// .upstox.MarketInfo marketInfo = 4;
inline bool FeedResponse::has_marketinfo() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.marketinfo_ != nullptr);
  return value;
}
inline void FeedResponse::clear_marketinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.marketinfo_ != nullptr) _impl_.marketinfo_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::upstox::MarketInfo& FeedResponse::_internal_marketinfo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::upstox::MarketInfo* p = _impl_.marketinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::upstox::MarketInfo&>(::upstox::_MarketInfo_default_instance_);
}
inline const ::upstox::MarketInfo& FeedResponse::marketinfo() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:upstox.FeedResponse.marketInfo)
  return _internal_marketinfo();
}
inline void FeedResponse::unsafe_arena_set_allocated_marketinfo(::upstox::MarketInfo* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.marketinfo_);
  }
  _impl_.marketinfo_ = reinterpret_cast<::upstox::MarketInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:upstox.FeedResponse.marketInfo)
}
inline ::upstox::MarketInfo* FeedResponse::release_marketinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::upstox::MarketInfo* released = _impl_.marketinfo_;
  _impl_.marketinfo_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::upstox::MarketInfo* FeedResponse::unsafe_arena_release_marketinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:upstox.FeedResponse.marketInfo)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::upstox::MarketInfo* temp = _impl_.marketinfo_;
  _impl_.marketinfo_ = nullptr;
  return temp;
}
inline ::upstox::MarketInfo* FeedResponse::_internal_mutable_marketinfo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.marketinfo_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::upstox::MarketInfo>(GetArena());
    _impl_.marketinfo_ = reinterpret_cast<::upstox::MarketInfo*>(p);
  }
  return _impl_.marketinfo_;
}
inline ::upstox::MarketInfo* FeedResponse::mutable_marketinfo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::upstox::MarketInfo* _msg = _internal_mutable_marketinfo();
  // @@protoc_insertion_point(field_mutable:upstox.FeedResponse.marketInfo)
  return _msg;
}
inline void FeedResponse::set_allocated_marketinfo(::upstox::MarketInfo* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.marketinfo_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.marketinfo_ = reinterpret_cast<::upstox::MarketInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:upstox.FeedResponse.marketInfo)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace upstox


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::upstox::Type> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::upstox::Type>() {
  return ::upstox::Type_descriptor();
}
template <>
struct is_proto_enum<::upstox::RequestMode> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::upstox::RequestMode>() {
  return ::upstox::RequestMode_descriptor();
}
template <>
struct is_proto_enum<::upstox::MarketStatus> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::upstox::MarketStatus>() {
  return ::upstox::MarketStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // MarketDataFeedV3_2eproto_2epb_2eh
