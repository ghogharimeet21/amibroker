// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: MarketDataFeedV3.proto
// Protobuf C++ Version: 5.29.2

#include "MarketDataFeedV3.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace upstox {

inline constexpr Quote::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : bidq_{::int64_t{0}},
        bidp_{0},
        askq_{::int64_t{0}},
        askp_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Quote::Quote(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct QuoteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR QuoteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~QuoteDefaultTypeInternal() {}
  union {
    Quote _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 QuoteDefaultTypeInternal _Quote_default_instance_;

inline constexpr OptionGreeks::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : delta_{0},
        theta_{0},
        gamma_{0},
        vega_{0},
        rho_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OptionGreeks::OptionGreeks(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OptionGreeksDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OptionGreeksDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OptionGreeksDefaultTypeInternal() {}
  union {
    OptionGreeks _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OptionGreeksDefaultTypeInternal _OptionGreeks_default_instance_;

inline constexpr OHLC::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : interval_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        open_{0},
        high_{0},
        low_{0},
        close_{0},
        vol_{::int64_t{0}},
        ts_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OHLC::OHLC(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OHLCDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OHLCDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OHLCDefaultTypeInternal() {}
  union {
    OHLC _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OHLCDefaultTypeInternal _OHLC_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR MarketInfo_SegmentStatusEntry_DoNotUse::MarketInfo_SegmentStatusEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : MarketInfo_SegmentStatusEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : MarketInfo_SegmentStatusEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct MarketInfo_SegmentStatusEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MarketInfo_SegmentStatusEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MarketInfo_SegmentStatusEntry_DoNotUseDefaultTypeInternal() {}
  union {
    MarketInfo_SegmentStatusEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MarketInfo_SegmentStatusEntry_DoNotUseDefaultTypeInternal _MarketInfo_SegmentStatusEntry_DoNotUse_default_instance_;

inline constexpr LTPC::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : ltp_{0},
        ltt_{::int64_t{0}},
        cp_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LTPC::LTPC(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LTPCDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LTPCDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LTPCDefaultTypeInternal() {}
  union {
    LTPC _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LTPCDefaultTypeInternal _LTPC_default_instance_;

inline constexpr MarketOHLC::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : ohlc_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MarketOHLC::MarketOHLC(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MarketOHLCDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MarketOHLCDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MarketOHLCDefaultTypeInternal() {}
  union {
    MarketOHLC _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MarketOHLCDefaultTypeInternal _MarketOHLC_default_instance_;

inline constexpr MarketLevel::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : bidaskquote_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MarketLevel::MarketLevel(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MarketLevelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MarketLevelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MarketLevelDefaultTypeInternal() {}
  union {
    MarketLevel _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MarketLevelDefaultTypeInternal _MarketLevel_default_instance_;

inline constexpr MarketInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : segmentstatus_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MarketInfo::MarketInfo(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MarketInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MarketInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MarketInfoDefaultTypeInternal() {}
  union {
    MarketInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MarketInfoDefaultTypeInternal _MarketInfo_default_instance_;

inline constexpr FirstLevelWithGreeks::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ltpc_{nullptr},
        firstdepth_{nullptr},
        optiongreeks_{nullptr},
        vtt_{::int64_t{0}},
        oi_{0},
        iv_{0} {}

template <typename>
PROTOBUF_CONSTEXPR FirstLevelWithGreeks::FirstLevelWithGreeks(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FirstLevelWithGreeksDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FirstLevelWithGreeksDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FirstLevelWithGreeksDefaultTypeInternal() {}
  union {
    FirstLevelWithGreeks _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FirstLevelWithGreeksDefaultTypeInternal _FirstLevelWithGreeks_default_instance_;

inline constexpr MarketFullFeed::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ltpc_{nullptr},
        marketlevel_{nullptr},
        optiongreeks_{nullptr},
        marketohlc_{nullptr},
        atp_{0},
        vtt_{::int64_t{0}},
        oi_{0},
        iv_{0},
        tbq_{0},
        tsq_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MarketFullFeed::MarketFullFeed(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MarketFullFeedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MarketFullFeedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MarketFullFeedDefaultTypeInternal() {}
  union {
    MarketFullFeed _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MarketFullFeedDefaultTypeInternal _MarketFullFeed_default_instance_;

inline constexpr IndexFullFeed::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ltpc_{nullptr},
        marketohlc_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR IndexFullFeed::IndexFullFeed(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct IndexFullFeedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IndexFullFeedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~IndexFullFeedDefaultTypeInternal() {}
  union {
    IndexFullFeed _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IndexFullFeedDefaultTypeInternal _IndexFullFeed_default_instance_;

inline constexpr FullFeed::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : FullFeedUnion_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR FullFeed::FullFeed(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FullFeedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FullFeedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FullFeedDefaultTypeInternal() {}
  union {
    FullFeed _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FullFeedDefaultTypeInternal _FullFeed_default_instance_;

inline constexpr Feed::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : requestmode_{static_cast< ::upstox::RequestMode >(0)},
        FeedUnion_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR Feed::Feed(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FeedDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FeedDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FeedDefaultTypeInternal() {}
  union {
    Feed _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FeedDefaultTypeInternal _Feed_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR FeedResponse_FeedsEntry_DoNotUse::FeedResponse_FeedsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : FeedResponse_FeedsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : FeedResponse_FeedsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct FeedResponse_FeedsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FeedResponse_FeedsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FeedResponse_FeedsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    FeedResponse_FeedsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FeedResponse_FeedsEntry_DoNotUseDefaultTypeInternal _FeedResponse_FeedsEntry_DoNotUse_default_instance_;

inline constexpr FeedResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        feeds_{},
        marketinfo_{nullptr},
        currentts_{::int64_t{0}},
        type_{static_cast< ::upstox::Type >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR FeedResponse::FeedResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FeedResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FeedResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FeedResponseDefaultTypeInternal() {}
  union {
    FeedResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FeedResponseDefaultTypeInternal _FeedResponse_default_instance_;
}  // namespace upstox
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_MarketDataFeedV3_2eproto[3];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_MarketDataFeedV3_2eproto = nullptr;
const ::uint32_t
    TableStruct_MarketDataFeedV3_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::upstox::LTPC, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::upstox::LTPC, _impl_.ltp_),
        PROTOBUF_FIELD_OFFSET(::upstox::LTPC, _impl_.ltt_),
        PROTOBUF_FIELD_OFFSET(::upstox::LTPC, _impl_.cp_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::upstox::MarketLevel, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::upstox::MarketLevel, _impl_.bidaskquote_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::upstox::MarketOHLC, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::upstox::MarketOHLC, _impl_.ohlc_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::upstox::Quote, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::upstox::Quote, _impl_.bidq_),
        PROTOBUF_FIELD_OFFSET(::upstox::Quote, _impl_.bidp_),
        PROTOBUF_FIELD_OFFSET(::upstox::Quote, _impl_.askq_),
        PROTOBUF_FIELD_OFFSET(::upstox::Quote, _impl_.askp_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::upstox::OptionGreeks, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::upstox::OptionGreeks, _impl_.delta_),
        PROTOBUF_FIELD_OFFSET(::upstox::OptionGreeks, _impl_.theta_),
        PROTOBUF_FIELD_OFFSET(::upstox::OptionGreeks, _impl_.gamma_),
        PROTOBUF_FIELD_OFFSET(::upstox::OptionGreeks, _impl_.vega_),
        PROTOBUF_FIELD_OFFSET(::upstox::OptionGreeks, _impl_.rho_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::upstox::OHLC, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::upstox::OHLC, _impl_.interval_),
        PROTOBUF_FIELD_OFFSET(::upstox::OHLC, _impl_.open_),
        PROTOBUF_FIELD_OFFSET(::upstox::OHLC, _impl_.high_),
        PROTOBUF_FIELD_OFFSET(::upstox::OHLC, _impl_.low_),
        PROTOBUF_FIELD_OFFSET(::upstox::OHLC, _impl_.close_),
        PROTOBUF_FIELD_OFFSET(::upstox::OHLC, _impl_.vol_),
        PROTOBUF_FIELD_OFFSET(::upstox::OHLC, _impl_.ts_),
        PROTOBUF_FIELD_OFFSET(::upstox::MarketFullFeed, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::upstox::MarketFullFeed, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::upstox::MarketFullFeed, _impl_.ltpc_),
        PROTOBUF_FIELD_OFFSET(::upstox::MarketFullFeed, _impl_.marketlevel_),
        PROTOBUF_FIELD_OFFSET(::upstox::MarketFullFeed, _impl_.optiongreeks_),
        PROTOBUF_FIELD_OFFSET(::upstox::MarketFullFeed, _impl_.marketohlc_),
        PROTOBUF_FIELD_OFFSET(::upstox::MarketFullFeed, _impl_.atp_),
        PROTOBUF_FIELD_OFFSET(::upstox::MarketFullFeed, _impl_.vtt_),
        PROTOBUF_FIELD_OFFSET(::upstox::MarketFullFeed, _impl_.oi_),
        PROTOBUF_FIELD_OFFSET(::upstox::MarketFullFeed, _impl_.iv_),
        PROTOBUF_FIELD_OFFSET(::upstox::MarketFullFeed, _impl_.tbq_),
        PROTOBUF_FIELD_OFFSET(::upstox::MarketFullFeed, _impl_.tsq_),
        0,
        1,
        2,
        3,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::upstox::IndexFullFeed, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::upstox::IndexFullFeed, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::upstox::IndexFullFeed, _impl_.ltpc_),
        PROTOBUF_FIELD_OFFSET(::upstox::IndexFullFeed, _impl_.marketohlc_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::upstox::FullFeed, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::upstox::FullFeed, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::upstox::FullFeed, _impl_.FullFeedUnion_),
        PROTOBUF_FIELD_OFFSET(::upstox::FirstLevelWithGreeks, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::upstox::FirstLevelWithGreeks, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::upstox::FirstLevelWithGreeks, _impl_.ltpc_),
        PROTOBUF_FIELD_OFFSET(::upstox::FirstLevelWithGreeks, _impl_.firstdepth_),
        PROTOBUF_FIELD_OFFSET(::upstox::FirstLevelWithGreeks, _impl_.optiongreeks_),
        PROTOBUF_FIELD_OFFSET(::upstox::FirstLevelWithGreeks, _impl_.vtt_),
        PROTOBUF_FIELD_OFFSET(::upstox::FirstLevelWithGreeks, _impl_.oi_),
        PROTOBUF_FIELD_OFFSET(::upstox::FirstLevelWithGreeks, _impl_.iv_),
        0,
        1,
        2,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::upstox::Feed, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::upstox::Feed, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::upstox::Feed, _impl_.requestmode_),
        PROTOBUF_FIELD_OFFSET(::upstox::Feed, _impl_.FeedUnion_),
        PROTOBUF_FIELD_OFFSET(::upstox::MarketInfo_SegmentStatusEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::upstox::MarketInfo_SegmentStatusEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::upstox::MarketInfo_SegmentStatusEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::upstox::MarketInfo_SegmentStatusEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::upstox::MarketInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::upstox::MarketInfo, _impl_.segmentstatus_),
        PROTOBUF_FIELD_OFFSET(::upstox::FeedResponse_FeedsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::upstox::FeedResponse_FeedsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::upstox::FeedResponse_FeedsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::upstox::FeedResponse_FeedsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::upstox::FeedResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::upstox::FeedResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::upstox::FeedResponse, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::upstox::FeedResponse, _impl_.feeds_),
        PROTOBUF_FIELD_OFFSET(::upstox::FeedResponse, _impl_.currentts_),
        PROTOBUF_FIELD_OFFSET(::upstox::FeedResponse, _impl_.marketinfo_),
        ~0u,
        ~0u,
        ~0u,
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::upstox::LTPC)},
        {11, -1, -1, sizeof(::upstox::MarketLevel)},
        {20, -1, -1, sizeof(::upstox::MarketOHLC)},
        {29, -1, -1, sizeof(::upstox::Quote)},
        {41, -1, -1, sizeof(::upstox::OptionGreeks)},
        {54, -1, -1, sizeof(::upstox::OHLC)},
        {69, 87, -1, sizeof(::upstox::MarketFullFeed)},
        {97, 107, -1, sizeof(::upstox::IndexFullFeed)},
        {109, -1, -1, sizeof(::upstox::FullFeed)},
        {120, 134, -1, sizeof(::upstox::FirstLevelWithGreeks)},
        {140, -1, -1, sizeof(::upstox::Feed)},
        {153, 163, -1, sizeof(::upstox::MarketInfo_SegmentStatusEntry_DoNotUse)},
        {165, -1, -1, sizeof(::upstox::MarketInfo)},
        {174, 184, -1, sizeof(::upstox::FeedResponse_FeedsEntry_DoNotUse)},
        {186, 198, -1, sizeof(::upstox::FeedResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::upstox::_LTPC_default_instance_._instance,
    &::upstox::_MarketLevel_default_instance_._instance,
    &::upstox::_MarketOHLC_default_instance_._instance,
    &::upstox::_Quote_default_instance_._instance,
    &::upstox::_OptionGreeks_default_instance_._instance,
    &::upstox::_OHLC_default_instance_._instance,
    &::upstox::_MarketFullFeed_default_instance_._instance,
    &::upstox::_IndexFullFeed_default_instance_._instance,
    &::upstox::_FullFeed_default_instance_._instance,
    &::upstox::_FirstLevelWithGreeks_default_instance_._instance,
    &::upstox::_Feed_default_instance_._instance,
    &::upstox::_MarketInfo_SegmentStatusEntry_DoNotUse_default_instance_._instance,
    &::upstox::_MarketInfo_default_instance_._instance,
    &::upstox::_FeedResponse_FeedsEntry_DoNotUse_default_instance_._instance,
    &::upstox::_FeedResponse_default_instance_._instance,
};
const char descriptor_table_protodef_MarketDataFeedV3_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\026MarketDataFeedV3.proto\022\006upstox\",\n\004LTPC"
    "\022\013\n\003ltp\030\001 \001(\001\022\013\n\003ltt\030\002 \001(\003\022\n\n\002cp\030\003 \001(\001\"1"
    "\n\013MarketLevel\022\"\n\013bidAskQuote\030\001 \003(\0132\r.ups"
    "tox.Quote\"(\n\nMarketOHLC\022\032\n\004ohlc\030\001 \003(\0132\014."
    "upstox.OHLC\"\?\n\005Quote\022\014\n\004bidQ\030\001 \001(\003\022\014\n\004bi"
    "dP\030\002 \001(\001\022\014\n\004askQ\030\003 \001(\003\022\014\n\004askP\030\004 \001(\001\"V\n\014"
    "OptionGreeks\022\r\n\005delta\030\001 \001(\001\022\r\n\005theta\030\002 \001"
    "(\001\022\r\n\005gamma\030\003 \001(\001\022\014\n\004vega\030\004 \001(\001\022\013\n\003rho\030\005"
    " \001(\001\"i\n\004OHLC\022\020\n\010interval\030\001 \001(\t\022\014\n\004open\030\002"
    " \001(\001\022\014\n\004high\030\003 \001(\001\022\013\n\003low\030\004 \001(\001\022\r\n\005close"
    "\030\005 \001(\001\022\013\n\003vol\030\006 \001(\003\022\n\n\002ts\030\007 \001(\003\"\366\001\n\016Mark"
    "etFullFeed\022\032\n\004ltpc\030\001 \001(\0132\014.upstox.LTPC\022("
    "\n\013marketLevel\030\002 \001(\0132\023.upstox.MarketLevel"
    "\022*\n\014optionGreeks\030\003 \001(\0132\024.upstox.OptionGr"
    "eeks\022&\n\nmarketOHLC\030\004 \001(\0132\022.upstox.Market"
    "OHLC\022\013\n\003atp\030\005 \001(\001\022\013\n\003vtt\030\006 \001(\003\022\n\n\002oi\030\007 \001"
    "(\001\022\n\n\002iv\030\010 \001(\001\022\013\n\003tbq\030\t \001(\001\022\013\n\003tsq\030\n \001(\001"
    "\"S\n\rIndexFullFeed\022\032\n\004ltpc\030\001 \001(\0132\014.upstox"
    ".LTPC\022&\n\nmarketOHLC\030\002 \001(\0132\022.upstox.Marke"
    "tOHLC\"q\n\010FullFeed\022*\n\010marketFF\030\001 \001(\0132\026.up"
    "stox.MarketFullFeedH\000\022(\n\007indexFF\030\002 \001(\0132\025"
    ".upstox.IndexFullFeedH\000B\017\n\rFullFeedUnion"
    "\"\246\001\n\024FirstLevelWithGreeks\022\032\n\004ltpc\030\001 \001(\0132"
    "\014.upstox.LTPC\022!\n\nfirstDepth\030\002 \001(\0132\r.upst"
    "ox.Quote\022*\n\014optionGreeks\030\003 \001(\0132\024.upstox."
    "OptionGreeks\022\013\n\003vtt\030\004 \001(\003\022\n\n\002oi\030\005 \001(\001\022\n\n"
    "\002iv\030\006 \001(\001\"\277\001\n\004Feed\022\034\n\004ltpc\030\001 \001(\0132\014.upsto"
    "x.LTPCH\000\022$\n\010fullFeed\030\002 \001(\0132\020.upstox.Full"
    "FeedH\000\022<\n\024firstLevelWithGreeks\030\003 \001(\0132\034.u"
    "pstox.FirstLevelWithGreeksH\000\022(\n\013requestM"
    "ode\030\004 \001(\0162\023.upstox.RequestModeB\013\n\tFeedUn"
    "ion\"\226\001\n\nMarketInfo\022<\n\rsegmentStatus\030\001 \003("
    "\0132%.upstox.MarketInfo.SegmentStatusEntry"
    "\032J\n\022SegmentStatusEntry\022\013\n\003key\030\001 \001(\t\022#\n\005v"
    "alue\030\002 \001(\0162\024.upstox.MarketStatus:\0028\001\"\321\001\n"
    "\014FeedResponse\022\032\n\004type\030\001 \001(\0162\014.upstox.Typ"
    "e\022.\n\005feeds\030\002 \003(\0132\037.upstox.FeedResponse.F"
    "eedsEntry\022\021\n\tcurrentTs\030\003 \001(\003\022&\n\nmarketIn"
    "fo\030\004 \001(\0132\022.upstox.MarketInfo\032:\n\nFeedsEnt"
    "ry\022\013\n\003key\030\001 \001(\t\022\033\n\005value\030\002 \001(\0132\014.upstox."
    "Feed:\0028\001*8\n\004Type\022\020\n\014initial_feed\020\000\022\r\n\tli"
    "ve_feed\020\001\022\017\n\013market_info\020\002*E\n\013RequestMod"
    "e\022\010\n\004ltpc\020\000\022\013\n\007full_d5\020\001\022\021\n\roption_greek"
    "s\020\002\022\014\n\010full_d30\020\003*{\n\014MarketStatus\022\022\n\016PRE"
    "_OPEN_START\020\000\022\020\n\014PRE_OPEN_END\020\001\022\017\n\013NORMA"
    "L_OPEN\020\002\022\020\n\014NORMAL_CLOSE\020\003\022\021\n\rCLOSING_ST"
    "ART\020\004\022\017\n\013CLOSING_END\020\005b\006proto3"
};
static ::absl::once_flag descriptor_table_MarketDataFeedV3_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_MarketDataFeedV3_2eproto = {
    false,
    false,
    1870,
    descriptor_table_protodef_MarketDataFeedV3_2eproto,
    "MarketDataFeedV3.proto",
    &descriptor_table_MarketDataFeedV3_2eproto_once,
    nullptr,
    0,
    15,
    schemas,
    file_default_instances,
    TableStruct_MarketDataFeedV3_2eproto::offsets,
    file_level_enum_descriptors_MarketDataFeedV3_2eproto,
    file_level_service_descriptors_MarketDataFeedV3_2eproto,
};
namespace upstox {
const ::google::protobuf::EnumDescriptor* Type_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_MarketDataFeedV3_2eproto);
  return file_level_enum_descriptors_MarketDataFeedV3_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t Type_internal_data_[] = {
    196608u, 0u, };
bool Type_IsValid(int value) {
  return 0 <= value && value <= 2;
}
const ::google::protobuf::EnumDescriptor* RequestMode_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_MarketDataFeedV3_2eproto);
  return file_level_enum_descriptors_MarketDataFeedV3_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t RequestMode_internal_data_[] = {
    262144u, 0u, };
bool RequestMode_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf::EnumDescriptor* MarketStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_MarketDataFeedV3_2eproto);
  return file_level_enum_descriptors_MarketDataFeedV3_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t MarketStatus_internal_data_[] = {
    393216u, 0u, };
bool MarketStatus_IsValid(int value) {
  return 0 <= value && value <= 5;
}
// ===================================================================

class LTPC::_Internal {
 public:
};

LTPC::LTPC(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:upstox.LTPC)
}
LTPC::LTPC(
    ::google::protobuf::Arena* arena, const LTPC& from)
    : LTPC(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE LTPC::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void LTPC::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ltp_),
           0,
           offsetof(Impl_, cp_) -
               offsetof(Impl_, ltp_) +
               sizeof(Impl_::cp_));
}
LTPC::~LTPC() {
  // @@protoc_insertion_point(destructor:upstox.LTPC)
  SharedDtor(*this);
}
inline void LTPC::SharedDtor(MessageLite& self) {
  LTPC& this_ = static_cast<LTPC&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* LTPC::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LTPC(arena);
}
constexpr auto LTPC::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(LTPC),
                                            alignof(LTPC));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LTPC::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LTPC_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LTPC::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LTPC>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LTPC::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LTPC>(), &LTPC::ByteSizeLong,
            &LTPC::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LTPC, _impl_._cached_size_),
        false,
    },
    &LTPC::kDescriptorMethods,
    &descriptor_table_MarketDataFeedV3_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LTPC::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> LTPC::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::upstox::LTPC>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double ltp = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(LTPC, _impl_.ltp_)}},
    // int64 ltt = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(LTPC, _impl_.ltt_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(LTPC, _impl_.ltt_)}},
    // double cp = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(LTPC, _impl_.cp_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double ltp = 1;
    {PROTOBUF_FIELD_OFFSET(LTPC, _impl_.ltp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // int64 ltt = 2;
    {PROTOBUF_FIELD_OFFSET(LTPC, _impl_.ltt_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // double cp = 3;
    {PROTOBUF_FIELD_OFFSET(LTPC, _impl_.cp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void LTPC::Clear() {
// @@protoc_insertion_point(message_clear_start:upstox.LTPC)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.ltp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.cp_) -
      reinterpret_cast<char*>(&_impl_.ltp_)) + sizeof(_impl_.cp_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LTPC::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LTPC& this_ = static_cast<const LTPC&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LTPC::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LTPC& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:upstox.LTPC)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double ltp = 1;
          if (::absl::bit_cast<::uint64_t>(this_._internal_ltp()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_ltp(), target);
          }

          // int64 ltt = 2;
          if (this_._internal_ltt() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<2>(
                    stream, this_._internal_ltt(), target);
          }

          // double cp = 3;
          if (::absl::bit_cast<::uint64_t>(this_._internal_cp()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_cp(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:upstox.LTPC)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LTPC::ByteSizeLong(const MessageLite& base) {
          const LTPC& this_ = static_cast<const LTPC&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LTPC::ByteSizeLong() const {
          const LTPC& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:upstox.LTPC)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // double ltp = 1;
            if (::absl::bit_cast<::uint64_t>(this_._internal_ltp()) != 0) {
              total_size += 9;
            }
            // int64 ltt = 2;
            if (this_._internal_ltt() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_ltt());
            }
            // double cp = 3;
            if (::absl::bit_cast<::uint64_t>(this_._internal_cp()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LTPC::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LTPC*>(&to_msg);
  auto& from = static_cast<const LTPC&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:upstox.LTPC)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_ltp()) != 0) {
    _this->_impl_.ltp_ = from._impl_.ltp_;
  }
  if (from._internal_ltt() != 0) {
    _this->_impl_.ltt_ = from._impl_.ltt_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_cp()) != 0) {
    _this->_impl_.cp_ = from._impl_.cp_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LTPC::CopyFrom(const LTPC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:upstox.LTPC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LTPC::InternalSwap(LTPC* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LTPC, _impl_.cp_)
      + sizeof(LTPC::_impl_.cp_)
      - PROTOBUF_FIELD_OFFSET(LTPC, _impl_.ltp_)>(
          reinterpret_cast<char*>(&_impl_.ltp_),
          reinterpret_cast<char*>(&other->_impl_.ltp_));
}

::google::protobuf::Metadata LTPC::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MarketLevel::_Internal {
 public:
};

MarketLevel::MarketLevel(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:upstox.MarketLevel)
}
inline PROTOBUF_NDEBUG_INLINE MarketLevel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::upstox::MarketLevel& from_msg)
      : bidaskquote_{visibility, arena, from.bidaskquote_},
        _cached_size_{0} {}

MarketLevel::MarketLevel(
    ::google::protobuf::Arena* arena,
    const MarketLevel& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MarketLevel* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:upstox.MarketLevel)
}
inline PROTOBUF_NDEBUG_INLINE MarketLevel::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : bidaskquote_{visibility, arena},
        _cached_size_{0} {}

inline void MarketLevel::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
MarketLevel::~MarketLevel() {
  // @@protoc_insertion_point(destructor:upstox.MarketLevel)
  SharedDtor(*this);
}
inline void MarketLevel::SharedDtor(MessageLite& self) {
  MarketLevel& this_ = static_cast<MarketLevel&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* MarketLevel::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MarketLevel(arena);
}
constexpr auto MarketLevel::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(MarketLevel, _impl_.bidaskquote_) +
          decltype(MarketLevel::_impl_.bidaskquote_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(MarketLevel), alignof(MarketLevel), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&MarketLevel::PlacementNew_,
                                 sizeof(MarketLevel),
                                 alignof(MarketLevel));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MarketLevel::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MarketLevel_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MarketLevel::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MarketLevel>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MarketLevel::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MarketLevel>(), &MarketLevel::ByteSizeLong,
            &MarketLevel::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MarketLevel, _impl_._cached_size_),
        false,
    },
    &MarketLevel::kDescriptorMethods,
    &descriptor_table_MarketDataFeedV3_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MarketLevel::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> MarketLevel::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::upstox::MarketLevel>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .upstox.Quote bidAskQuote = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MarketLevel, _impl_.bidaskquote_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .upstox.Quote bidAskQuote = 1;
    {PROTOBUF_FIELD_OFFSET(MarketLevel, _impl_.bidaskquote_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::upstox::Quote>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void MarketLevel::Clear() {
// @@protoc_insertion_point(message_clear_start:upstox.MarketLevel)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.bidaskquote_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MarketLevel::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MarketLevel& this_ = static_cast<const MarketLevel&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MarketLevel::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MarketLevel& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:upstox.MarketLevel)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .upstox.Quote bidAskQuote = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_bidaskquote_size());
               i < n; i++) {
            const auto& repfield = this_._internal_bidaskquote().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:upstox.MarketLevel)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MarketLevel::ByteSizeLong(const MessageLite& base) {
          const MarketLevel& this_ = static_cast<const MarketLevel&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MarketLevel::ByteSizeLong() const {
          const MarketLevel& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:upstox.MarketLevel)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .upstox.Quote bidAskQuote = 1;
            {
              total_size += 1UL * this_._internal_bidaskquote_size();
              for (const auto& msg : this_._internal_bidaskquote()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MarketLevel::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MarketLevel*>(&to_msg);
  auto& from = static_cast<const MarketLevel&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:upstox.MarketLevel)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_bidaskquote()->MergeFrom(
      from._internal_bidaskquote());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MarketLevel::CopyFrom(const MarketLevel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:upstox.MarketLevel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MarketLevel::InternalSwap(MarketLevel* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.bidaskquote_.InternalSwap(&other->_impl_.bidaskquote_);
}

::google::protobuf::Metadata MarketLevel::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MarketOHLC::_Internal {
 public:
};

MarketOHLC::MarketOHLC(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:upstox.MarketOHLC)
}
inline PROTOBUF_NDEBUG_INLINE MarketOHLC::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::upstox::MarketOHLC& from_msg)
      : ohlc_{visibility, arena, from.ohlc_},
        _cached_size_{0} {}

MarketOHLC::MarketOHLC(
    ::google::protobuf::Arena* arena,
    const MarketOHLC& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MarketOHLC* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:upstox.MarketOHLC)
}
inline PROTOBUF_NDEBUG_INLINE MarketOHLC::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : ohlc_{visibility, arena},
        _cached_size_{0} {}

inline void MarketOHLC::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
MarketOHLC::~MarketOHLC() {
  // @@protoc_insertion_point(destructor:upstox.MarketOHLC)
  SharedDtor(*this);
}
inline void MarketOHLC::SharedDtor(MessageLite& self) {
  MarketOHLC& this_ = static_cast<MarketOHLC&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* MarketOHLC::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MarketOHLC(arena);
}
constexpr auto MarketOHLC::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(MarketOHLC, _impl_.ohlc_) +
          decltype(MarketOHLC::_impl_.ohlc_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(MarketOHLC), alignof(MarketOHLC), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&MarketOHLC::PlacementNew_,
                                 sizeof(MarketOHLC),
                                 alignof(MarketOHLC));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MarketOHLC::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MarketOHLC_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MarketOHLC::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MarketOHLC>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MarketOHLC::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MarketOHLC>(), &MarketOHLC::ByteSizeLong,
            &MarketOHLC::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MarketOHLC, _impl_._cached_size_),
        false,
    },
    &MarketOHLC::kDescriptorMethods,
    &descriptor_table_MarketDataFeedV3_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MarketOHLC::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> MarketOHLC::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::upstox::MarketOHLC>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .upstox.OHLC ohlc = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MarketOHLC, _impl_.ohlc_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .upstox.OHLC ohlc = 1;
    {PROTOBUF_FIELD_OFFSET(MarketOHLC, _impl_.ohlc_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::upstox::OHLC>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void MarketOHLC::Clear() {
// @@protoc_insertion_point(message_clear_start:upstox.MarketOHLC)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ohlc_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MarketOHLC::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MarketOHLC& this_ = static_cast<const MarketOHLC&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MarketOHLC::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MarketOHLC& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:upstox.MarketOHLC)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .upstox.OHLC ohlc = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_ohlc_size());
               i < n; i++) {
            const auto& repfield = this_._internal_ohlc().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:upstox.MarketOHLC)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MarketOHLC::ByteSizeLong(const MessageLite& base) {
          const MarketOHLC& this_ = static_cast<const MarketOHLC&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MarketOHLC::ByteSizeLong() const {
          const MarketOHLC& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:upstox.MarketOHLC)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .upstox.OHLC ohlc = 1;
            {
              total_size += 1UL * this_._internal_ohlc_size();
              for (const auto& msg : this_._internal_ohlc()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MarketOHLC::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MarketOHLC*>(&to_msg);
  auto& from = static_cast<const MarketOHLC&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:upstox.MarketOHLC)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_ohlc()->MergeFrom(
      from._internal_ohlc());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MarketOHLC::CopyFrom(const MarketOHLC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:upstox.MarketOHLC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MarketOHLC::InternalSwap(MarketOHLC* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.ohlc_.InternalSwap(&other->_impl_.ohlc_);
}

::google::protobuf::Metadata MarketOHLC::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Quote::_Internal {
 public:
};

Quote::Quote(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:upstox.Quote)
}
Quote::Quote(
    ::google::protobuf::Arena* arena, const Quote& from)
    : Quote(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE Quote::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void Quote::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, bidq_),
           0,
           offsetof(Impl_, askp_) -
               offsetof(Impl_, bidq_) +
               sizeof(Impl_::askp_));
}
Quote::~Quote() {
  // @@protoc_insertion_point(destructor:upstox.Quote)
  SharedDtor(*this);
}
inline void Quote::SharedDtor(MessageLite& self) {
  Quote& this_ = static_cast<Quote&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Quote::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Quote(arena);
}
constexpr auto Quote::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Quote),
                                            alignof(Quote));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Quote::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Quote_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Quote::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Quote>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Quote::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Quote>(), &Quote::ByteSizeLong,
            &Quote::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Quote, _impl_._cached_size_),
        false,
    },
    &Quote::kDescriptorMethods,
    &descriptor_table_MarketDataFeedV3_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Quote::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> Quote::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::upstox::Quote>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double askP = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(Quote, _impl_.askp_)}},
    // int64 bidQ = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Quote, _impl_.bidq_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Quote, _impl_.bidq_)}},
    // double bidP = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(Quote, _impl_.bidp_)}},
    // int64 askQ = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Quote, _impl_.askq_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Quote, _impl_.askq_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 bidQ = 1;
    {PROTOBUF_FIELD_OFFSET(Quote, _impl_.bidq_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // double bidP = 2;
    {PROTOBUF_FIELD_OFFSET(Quote, _impl_.bidp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // int64 askQ = 3;
    {PROTOBUF_FIELD_OFFSET(Quote, _impl_.askq_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // double askP = 4;
    {PROTOBUF_FIELD_OFFSET(Quote, _impl_.askp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void Quote::Clear() {
// @@protoc_insertion_point(message_clear_start:upstox.Quote)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.bidq_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.askp_) -
      reinterpret_cast<char*>(&_impl_.bidq_)) + sizeof(_impl_.askp_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Quote::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Quote& this_ = static_cast<const Quote&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Quote::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Quote& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:upstox.Quote)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 bidQ = 1;
          if (this_._internal_bidq() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_bidq(), target);
          }

          // double bidP = 2;
          if (::absl::bit_cast<::uint64_t>(this_._internal_bidp()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_bidp(), target);
          }

          // int64 askQ = 3;
          if (this_._internal_askq() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_askq(), target);
          }

          // double askP = 4;
          if (::absl::bit_cast<::uint64_t>(this_._internal_askp()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                4, this_._internal_askp(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:upstox.Quote)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Quote::ByteSizeLong(const MessageLite& base) {
          const Quote& this_ = static_cast<const Quote&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Quote::ByteSizeLong() const {
          const Quote& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:upstox.Quote)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int64 bidQ = 1;
            if (this_._internal_bidq() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_bidq());
            }
            // double bidP = 2;
            if (::absl::bit_cast<::uint64_t>(this_._internal_bidp()) != 0) {
              total_size += 9;
            }
            // int64 askQ = 3;
            if (this_._internal_askq() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_askq());
            }
            // double askP = 4;
            if (::absl::bit_cast<::uint64_t>(this_._internal_askp()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Quote::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Quote*>(&to_msg);
  auto& from = static_cast<const Quote&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:upstox.Quote)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_bidq() != 0) {
    _this->_impl_.bidq_ = from._impl_.bidq_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_bidp()) != 0) {
    _this->_impl_.bidp_ = from._impl_.bidp_;
  }
  if (from._internal_askq() != 0) {
    _this->_impl_.askq_ = from._impl_.askq_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_askp()) != 0) {
    _this->_impl_.askp_ = from._impl_.askp_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Quote::CopyFrom(const Quote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:upstox.Quote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Quote::InternalSwap(Quote* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Quote, _impl_.askp_)
      + sizeof(Quote::_impl_.askp_)
      - PROTOBUF_FIELD_OFFSET(Quote, _impl_.bidq_)>(
          reinterpret_cast<char*>(&_impl_.bidq_),
          reinterpret_cast<char*>(&other->_impl_.bidq_));
}

::google::protobuf::Metadata Quote::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OptionGreeks::_Internal {
 public:
};

OptionGreeks::OptionGreeks(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:upstox.OptionGreeks)
}
OptionGreeks::OptionGreeks(
    ::google::protobuf::Arena* arena, const OptionGreeks& from)
    : OptionGreeks(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE OptionGreeks::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void OptionGreeks::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, delta_),
           0,
           offsetof(Impl_, rho_) -
               offsetof(Impl_, delta_) +
               sizeof(Impl_::rho_));
}
OptionGreeks::~OptionGreeks() {
  // @@protoc_insertion_point(destructor:upstox.OptionGreeks)
  SharedDtor(*this);
}
inline void OptionGreeks::SharedDtor(MessageLite& self) {
  OptionGreeks& this_ = static_cast<OptionGreeks&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* OptionGreeks::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) OptionGreeks(arena);
}
constexpr auto OptionGreeks::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(OptionGreeks),
                                            alignof(OptionGreeks));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull OptionGreeks::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_OptionGreeks_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &OptionGreeks::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<OptionGreeks>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &OptionGreeks::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<OptionGreeks>(), &OptionGreeks::ByteSizeLong,
            &OptionGreeks::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(OptionGreeks, _impl_._cached_size_),
        false,
    },
    &OptionGreeks::kDescriptorMethods,
    &descriptor_table_MarketDataFeedV3_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* OptionGreeks::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> OptionGreeks::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::upstox::OptionGreeks>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double delta = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 63, 0, PROTOBUF_FIELD_OFFSET(OptionGreeks, _impl_.delta_)}},
    // double theta = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(OptionGreeks, _impl_.theta_)}},
    // double gamma = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(OptionGreeks, _impl_.gamma_)}},
    // double vega = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(OptionGreeks, _impl_.vega_)}},
    // double rho = 5;
    {::_pbi::TcParser::FastF64S1,
     {41, 63, 0, PROTOBUF_FIELD_OFFSET(OptionGreeks, _impl_.rho_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // double delta = 1;
    {PROTOBUF_FIELD_OFFSET(OptionGreeks, _impl_.delta_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double theta = 2;
    {PROTOBUF_FIELD_OFFSET(OptionGreeks, _impl_.theta_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double gamma = 3;
    {PROTOBUF_FIELD_OFFSET(OptionGreeks, _impl_.gamma_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double vega = 4;
    {PROTOBUF_FIELD_OFFSET(OptionGreeks, _impl_.vega_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double rho = 5;
    {PROTOBUF_FIELD_OFFSET(OptionGreeks, _impl_.rho_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void OptionGreeks::Clear() {
// @@protoc_insertion_point(message_clear_start:upstox.OptionGreeks)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.delta_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.rho_) -
      reinterpret_cast<char*>(&_impl_.delta_)) + sizeof(_impl_.rho_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* OptionGreeks::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const OptionGreeks& this_ = static_cast<const OptionGreeks&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* OptionGreeks::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const OptionGreeks& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:upstox.OptionGreeks)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // double delta = 1;
          if (::absl::bit_cast<::uint64_t>(this_._internal_delta()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                1, this_._internal_delta(), target);
          }

          // double theta = 2;
          if (::absl::bit_cast<::uint64_t>(this_._internal_theta()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_theta(), target);
          }

          // double gamma = 3;
          if (::absl::bit_cast<::uint64_t>(this_._internal_gamma()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_gamma(), target);
          }

          // double vega = 4;
          if (::absl::bit_cast<::uint64_t>(this_._internal_vega()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                4, this_._internal_vega(), target);
          }

          // double rho = 5;
          if (::absl::bit_cast<::uint64_t>(this_._internal_rho()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                5, this_._internal_rho(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:upstox.OptionGreeks)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t OptionGreeks::ByteSizeLong(const MessageLite& base) {
          const OptionGreeks& this_ = static_cast<const OptionGreeks&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t OptionGreeks::ByteSizeLong() const {
          const OptionGreeks& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:upstox.OptionGreeks)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // double delta = 1;
            if (::absl::bit_cast<::uint64_t>(this_._internal_delta()) != 0) {
              total_size += 9;
            }
            // double theta = 2;
            if (::absl::bit_cast<::uint64_t>(this_._internal_theta()) != 0) {
              total_size += 9;
            }
            // double gamma = 3;
            if (::absl::bit_cast<::uint64_t>(this_._internal_gamma()) != 0) {
              total_size += 9;
            }
            // double vega = 4;
            if (::absl::bit_cast<::uint64_t>(this_._internal_vega()) != 0) {
              total_size += 9;
            }
            // double rho = 5;
            if (::absl::bit_cast<::uint64_t>(this_._internal_rho()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void OptionGreeks::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OptionGreeks*>(&to_msg);
  auto& from = static_cast<const OptionGreeks&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:upstox.OptionGreeks)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (::absl::bit_cast<::uint64_t>(from._internal_delta()) != 0) {
    _this->_impl_.delta_ = from._impl_.delta_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_theta()) != 0) {
    _this->_impl_.theta_ = from._impl_.theta_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_gamma()) != 0) {
    _this->_impl_.gamma_ = from._impl_.gamma_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_vega()) != 0) {
    _this->_impl_.vega_ = from._impl_.vega_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_rho()) != 0) {
    _this->_impl_.rho_ = from._impl_.rho_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OptionGreeks::CopyFrom(const OptionGreeks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:upstox.OptionGreeks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OptionGreeks::InternalSwap(OptionGreeks* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OptionGreeks, _impl_.rho_)
      + sizeof(OptionGreeks::_impl_.rho_)
      - PROTOBUF_FIELD_OFFSET(OptionGreeks, _impl_.delta_)>(
          reinterpret_cast<char*>(&_impl_.delta_),
          reinterpret_cast<char*>(&other->_impl_.delta_));
}

::google::protobuf::Metadata OptionGreeks::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OHLC::_Internal {
 public:
};

OHLC::OHLC(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:upstox.OHLC)
}
inline PROTOBUF_NDEBUG_INLINE OHLC::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::upstox::OHLC& from_msg)
      : interval_(arena, from.interval_),
        _cached_size_{0} {}

OHLC::OHLC(
    ::google::protobuf::Arena* arena,
    const OHLC& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OHLC* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, open_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, open_),
           offsetof(Impl_, ts_) -
               offsetof(Impl_, open_) +
               sizeof(Impl_::ts_));

  // @@protoc_insertion_point(copy_constructor:upstox.OHLC)
}
inline PROTOBUF_NDEBUG_INLINE OHLC::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : interval_(arena),
        _cached_size_{0} {}

inline void OHLC::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, open_),
           0,
           offsetof(Impl_, ts_) -
               offsetof(Impl_, open_) +
               sizeof(Impl_::ts_));
}
OHLC::~OHLC() {
  // @@protoc_insertion_point(destructor:upstox.OHLC)
  SharedDtor(*this);
}
inline void OHLC::SharedDtor(MessageLite& self) {
  OHLC& this_ = static_cast<OHLC&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.interval_.Destroy();
  this_._impl_.~Impl_();
}

inline void* OHLC::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) OHLC(arena);
}
constexpr auto OHLC::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(OHLC),
                                            alignof(OHLC));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull OHLC::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_OHLC_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &OHLC::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<OHLC>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &OHLC::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<OHLC>(), &OHLC::ByteSizeLong,
            &OHLC::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(OHLC, _impl_._cached_size_),
        false,
    },
    &OHLC::kDescriptorMethods,
    &descriptor_table_MarketDataFeedV3_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* OHLC::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 28, 2> OHLC::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::upstox::OHLC>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string interval = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OHLC, _impl_.interval_)}},
    // double open = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 63, 0, PROTOBUF_FIELD_OFFSET(OHLC, _impl_.open_)}},
    // double high = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 63, 0, PROTOBUF_FIELD_OFFSET(OHLC, _impl_.high_)}},
    // double low = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 63, 0, PROTOBUF_FIELD_OFFSET(OHLC, _impl_.low_)}},
    // double close = 5;
    {::_pbi::TcParser::FastF64S1,
     {41, 63, 0, PROTOBUF_FIELD_OFFSET(OHLC, _impl_.close_)}},
    // int64 vol = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(OHLC, _impl_.vol_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(OHLC, _impl_.vol_)}},
    // int64 ts = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(OHLC, _impl_.ts_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(OHLC, _impl_.ts_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string interval = 1;
    {PROTOBUF_FIELD_OFFSET(OHLC, _impl_.interval_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double open = 2;
    {PROTOBUF_FIELD_OFFSET(OHLC, _impl_.open_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double high = 3;
    {PROTOBUF_FIELD_OFFSET(OHLC, _impl_.high_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double low = 4;
    {PROTOBUF_FIELD_OFFSET(OHLC, _impl_.low_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double close = 5;
    {PROTOBUF_FIELD_OFFSET(OHLC, _impl_.close_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // int64 vol = 6;
    {PROTOBUF_FIELD_OFFSET(OHLC, _impl_.vol_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 ts = 7;
    {PROTOBUF_FIELD_OFFSET(OHLC, _impl_.ts_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\13\10\0\0\0\0\0\0"
    "upstox.OHLC"
    "interval"
  }},
};

PROTOBUF_NOINLINE void OHLC::Clear() {
// @@protoc_insertion_point(message_clear_start:upstox.OHLC)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.interval_.ClearToEmpty();
  ::memset(&_impl_.open_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.ts_) -
      reinterpret_cast<char*>(&_impl_.open_)) + sizeof(_impl_.ts_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* OHLC::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const OHLC& this_ = static_cast<const OHLC&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* OHLC::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const OHLC& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:upstox.OHLC)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string interval = 1;
          if (!this_._internal_interval().empty()) {
            const std::string& _s = this_._internal_interval();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "upstox.OHLC.interval");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // double open = 2;
          if (::absl::bit_cast<::uint64_t>(this_._internal_open()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                2, this_._internal_open(), target);
          }

          // double high = 3;
          if (::absl::bit_cast<::uint64_t>(this_._internal_high()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                3, this_._internal_high(), target);
          }

          // double low = 4;
          if (::absl::bit_cast<::uint64_t>(this_._internal_low()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                4, this_._internal_low(), target);
          }

          // double close = 5;
          if (::absl::bit_cast<::uint64_t>(this_._internal_close()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                5, this_._internal_close(), target);
          }

          // int64 vol = 6;
          if (this_._internal_vol() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<6>(
                    stream, this_._internal_vol(), target);
          }

          // int64 ts = 7;
          if (this_._internal_ts() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<7>(
                    stream, this_._internal_ts(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:upstox.OHLC)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t OHLC::ByteSizeLong(const MessageLite& base) {
          const OHLC& this_ = static_cast<const OHLC&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t OHLC::ByteSizeLong() const {
          const OHLC& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:upstox.OHLC)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string interval = 1;
            if (!this_._internal_interval().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_interval());
            }
            // double open = 2;
            if (::absl::bit_cast<::uint64_t>(this_._internal_open()) != 0) {
              total_size += 9;
            }
            // double high = 3;
            if (::absl::bit_cast<::uint64_t>(this_._internal_high()) != 0) {
              total_size += 9;
            }
            // double low = 4;
            if (::absl::bit_cast<::uint64_t>(this_._internal_low()) != 0) {
              total_size += 9;
            }
            // double close = 5;
            if (::absl::bit_cast<::uint64_t>(this_._internal_close()) != 0) {
              total_size += 9;
            }
            // int64 vol = 6;
            if (this_._internal_vol() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_vol());
            }
            // int64 ts = 7;
            if (this_._internal_ts() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_ts());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void OHLC::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OHLC*>(&to_msg);
  auto& from = static_cast<const OHLC&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:upstox.OHLC)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_interval().empty()) {
    _this->_internal_set_interval(from._internal_interval());
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_open()) != 0) {
    _this->_impl_.open_ = from._impl_.open_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_high()) != 0) {
    _this->_impl_.high_ = from._impl_.high_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_low()) != 0) {
    _this->_impl_.low_ = from._impl_.low_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_close()) != 0) {
    _this->_impl_.close_ = from._impl_.close_;
  }
  if (from._internal_vol() != 0) {
    _this->_impl_.vol_ = from._impl_.vol_;
  }
  if (from._internal_ts() != 0) {
    _this->_impl_.ts_ = from._impl_.ts_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OHLC::CopyFrom(const OHLC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:upstox.OHLC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OHLC::InternalSwap(OHLC* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.interval_, &other->_impl_.interval_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OHLC, _impl_.ts_)
      + sizeof(OHLC::_impl_.ts_)
      - PROTOBUF_FIELD_OFFSET(OHLC, _impl_.open_)>(
          reinterpret_cast<char*>(&_impl_.open_),
          reinterpret_cast<char*>(&other->_impl_.open_));
}

::google::protobuf::Metadata OHLC::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MarketFullFeed::_Internal {
 public:
  using HasBits =
      decltype(std::declval<MarketFullFeed>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MarketFullFeed, _impl_._has_bits_);
};

MarketFullFeed::MarketFullFeed(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:upstox.MarketFullFeed)
}
inline PROTOBUF_NDEBUG_INLINE MarketFullFeed::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::upstox::MarketFullFeed& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

MarketFullFeed::MarketFullFeed(
    ::google::protobuf::Arena* arena,
    const MarketFullFeed& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MarketFullFeed* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.ltpc_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::upstox::LTPC>(
                              arena, *from._impl_.ltpc_)
                        : nullptr;
  _impl_.marketlevel_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::upstox::MarketLevel>(
                              arena, *from._impl_.marketlevel_)
                        : nullptr;
  _impl_.optiongreeks_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::upstox::OptionGreeks>(
                              arena, *from._impl_.optiongreeks_)
                        : nullptr;
  _impl_.marketohlc_ = (cached_has_bits & 0x00000008u) ? ::google::protobuf::Message::CopyConstruct<::upstox::MarketOHLC>(
                              arena, *from._impl_.marketohlc_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, atp_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, atp_),
           offsetof(Impl_, tsq_) -
               offsetof(Impl_, atp_) +
               sizeof(Impl_::tsq_));

  // @@protoc_insertion_point(copy_constructor:upstox.MarketFullFeed)
}
inline PROTOBUF_NDEBUG_INLINE MarketFullFeed::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MarketFullFeed::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ltpc_),
           0,
           offsetof(Impl_, tsq_) -
               offsetof(Impl_, ltpc_) +
               sizeof(Impl_::tsq_));
}
MarketFullFeed::~MarketFullFeed() {
  // @@protoc_insertion_point(destructor:upstox.MarketFullFeed)
  SharedDtor(*this);
}
inline void MarketFullFeed::SharedDtor(MessageLite& self) {
  MarketFullFeed& this_ = static_cast<MarketFullFeed&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.ltpc_;
  delete this_._impl_.marketlevel_;
  delete this_._impl_.optiongreeks_;
  delete this_._impl_.marketohlc_;
  this_._impl_.~Impl_();
}

inline void* MarketFullFeed::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MarketFullFeed(arena);
}
constexpr auto MarketFullFeed::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(MarketFullFeed),
                                            alignof(MarketFullFeed));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MarketFullFeed::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MarketFullFeed_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MarketFullFeed::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MarketFullFeed>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MarketFullFeed::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MarketFullFeed>(), &MarketFullFeed::ByteSizeLong,
            &MarketFullFeed::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MarketFullFeed, _impl_._cached_size_),
        false,
    },
    &MarketFullFeed::kDescriptorMethods,
    &descriptor_table_MarketDataFeedV3_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MarketFullFeed::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 4, 0, 2> MarketFullFeed::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MarketFullFeed, _impl_._has_bits_),
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::upstox::MarketFullFeed>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .upstox.LTPC ltpc = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(MarketFullFeed, _impl_.ltpc_)}},
    // .upstox.MarketLevel marketLevel = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(MarketFullFeed, _impl_.marketlevel_)}},
    // .upstox.OptionGreeks optionGreeks = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(MarketFullFeed, _impl_.optiongreeks_)}},
    // .upstox.MarketOHLC marketOHLC = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 3, 3, PROTOBUF_FIELD_OFFSET(MarketFullFeed, _impl_.marketohlc_)}},
    // double atp = 5;
    {::_pbi::TcParser::FastF64S1,
     {41, 63, 0, PROTOBUF_FIELD_OFFSET(MarketFullFeed, _impl_.atp_)}},
    // int64 vtt = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(MarketFullFeed, _impl_.vtt_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(MarketFullFeed, _impl_.vtt_)}},
    // double oi = 7;
    {::_pbi::TcParser::FastF64S1,
     {57, 63, 0, PROTOBUF_FIELD_OFFSET(MarketFullFeed, _impl_.oi_)}},
    // double iv = 8;
    {::_pbi::TcParser::FastF64S1,
     {65, 63, 0, PROTOBUF_FIELD_OFFSET(MarketFullFeed, _impl_.iv_)}},
    // double tbq = 9;
    {::_pbi::TcParser::FastF64S1,
     {73, 63, 0, PROTOBUF_FIELD_OFFSET(MarketFullFeed, _impl_.tbq_)}},
    // double tsq = 10;
    {::_pbi::TcParser::FastF64S1,
     {81, 63, 0, PROTOBUF_FIELD_OFFSET(MarketFullFeed, _impl_.tsq_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .upstox.LTPC ltpc = 1;
    {PROTOBUF_FIELD_OFFSET(MarketFullFeed, _impl_.ltpc_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .upstox.MarketLevel marketLevel = 2;
    {PROTOBUF_FIELD_OFFSET(MarketFullFeed, _impl_.marketlevel_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .upstox.OptionGreeks optionGreeks = 3;
    {PROTOBUF_FIELD_OFFSET(MarketFullFeed, _impl_.optiongreeks_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .upstox.MarketOHLC marketOHLC = 4;
    {PROTOBUF_FIELD_OFFSET(MarketFullFeed, _impl_.marketohlc_), _Internal::kHasBitsOffset + 3, 3,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // double atp = 5;
    {PROTOBUF_FIELD_OFFSET(MarketFullFeed, _impl_.atp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // int64 vtt = 6;
    {PROTOBUF_FIELD_OFFSET(MarketFullFeed, _impl_.vtt_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // double oi = 7;
    {PROTOBUF_FIELD_OFFSET(MarketFullFeed, _impl_.oi_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double iv = 8;
    {PROTOBUF_FIELD_OFFSET(MarketFullFeed, _impl_.iv_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double tbq = 9;
    {PROTOBUF_FIELD_OFFSET(MarketFullFeed, _impl_.tbq_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double tsq = 10;
    {PROTOBUF_FIELD_OFFSET(MarketFullFeed, _impl_.tsq_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }}, {{
    {::_pbi::TcParser::GetTable<::upstox::LTPC>()},
    {::_pbi::TcParser::GetTable<::upstox::MarketLevel>()},
    {::_pbi::TcParser::GetTable<::upstox::OptionGreeks>()},
    {::_pbi::TcParser::GetTable<::upstox::MarketOHLC>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void MarketFullFeed::Clear() {
// @@protoc_insertion_point(message_clear_start:upstox.MarketFullFeed)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.ltpc_ != nullptr);
      _impl_.ltpc_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.marketlevel_ != nullptr);
      _impl_.marketlevel_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.optiongreeks_ != nullptr);
      _impl_.optiongreeks_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(_impl_.marketohlc_ != nullptr);
      _impl_.marketohlc_->Clear();
    }
  }
  ::memset(&_impl_.atp_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.tsq_) -
      reinterpret_cast<char*>(&_impl_.atp_)) + sizeof(_impl_.tsq_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MarketFullFeed::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MarketFullFeed& this_ = static_cast<const MarketFullFeed&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MarketFullFeed::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MarketFullFeed& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:upstox.MarketFullFeed)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .upstox.LTPC ltpc = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.ltpc_, this_._impl_.ltpc_->GetCachedSize(), target,
                stream);
          }

          // .upstox.MarketLevel marketLevel = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.marketlevel_, this_._impl_.marketlevel_->GetCachedSize(), target,
                stream);
          }

          // .upstox.OptionGreeks optionGreeks = 3;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.optiongreeks_, this_._impl_.optiongreeks_->GetCachedSize(), target,
                stream);
          }

          // .upstox.MarketOHLC marketOHLC = 4;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.marketohlc_, this_._impl_.marketohlc_->GetCachedSize(), target,
                stream);
          }

          // double atp = 5;
          if (::absl::bit_cast<::uint64_t>(this_._internal_atp()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                5, this_._internal_atp(), target);
          }

          // int64 vtt = 6;
          if (this_._internal_vtt() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<6>(
                    stream, this_._internal_vtt(), target);
          }

          // double oi = 7;
          if (::absl::bit_cast<::uint64_t>(this_._internal_oi()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                7, this_._internal_oi(), target);
          }

          // double iv = 8;
          if (::absl::bit_cast<::uint64_t>(this_._internal_iv()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                8, this_._internal_iv(), target);
          }

          // double tbq = 9;
          if (::absl::bit_cast<::uint64_t>(this_._internal_tbq()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                9, this_._internal_tbq(), target);
          }

          // double tsq = 10;
          if (::absl::bit_cast<::uint64_t>(this_._internal_tsq()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                10, this_._internal_tsq(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:upstox.MarketFullFeed)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MarketFullFeed::ByteSizeLong(const MessageLite& base) {
          const MarketFullFeed& this_ = static_cast<const MarketFullFeed&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MarketFullFeed::ByteSizeLong() const {
          const MarketFullFeed& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:upstox.MarketFullFeed)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000000fu) {
            // .upstox.LTPC ltpc = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.ltpc_);
            }
            // .upstox.MarketLevel marketLevel = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.marketlevel_);
            }
            // .upstox.OptionGreeks optionGreeks = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.optiongreeks_);
            }
            // .upstox.MarketOHLC marketOHLC = 4;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.marketohlc_);
            }
          }
           {
            // double atp = 5;
            if (::absl::bit_cast<::uint64_t>(this_._internal_atp()) != 0) {
              total_size += 9;
            }
            // int64 vtt = 6;
            if (this_._internal_vtt() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_vtt());
            }
            // double oi = 7;
            if (::absl::bit_cast<::uint64_t>(this_._internal_oi()) != 0) {
              total_size += 9;
            }
            // double iv = 8;
            if (::absl::bit_cast<::uint64_t>(this_._internal_iv()) != 0) {
              total_size += 9;
            }
            // double tbq = 9;
            if (::absl::bit_cast<::uint64_t>(this_._internal_tbq()) != 0) {
              total_size += 9;
            }
            // double tsq = 10;
            if (::absl::bit_cast<::uint64_t>(this_._internal_tsq()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MarketFullFeed::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MarketFullFeed*>(&to_msg);
  auto& from = static_cast<const MarketFullFeed&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:upstox.MarketFullFeed)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.ltpc_ != nullptr);
      if (_this->_impl_.ltpc_ == nullptr) {
        _this->_impl_.ltpc_ =
            ::google::protobuf::Message::CopyConstruct<::upstox::LTPC>(arena, *from._impl_.ltpc_);
      } else {
        _this->_impl_.ltpc_->MergeFrom(*from._impl_.ltpc_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.marketlevel_ != nullptr);
      if (_this->_impl_.marketlevel_ == nullptr) {
        _this->_impl_.marketlevel_ =
            ::google::protobuf::Message::CopyConstruct<::upstox::MarketLevel>(arena, *from._impl_.marketlevel_);
      } else {
        _this->_impl_.marketlevel_->MergeFrom(*from._impl_.marketlevel_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.optiongreeks_ != nullptr);
      if (_this->_impl_.optiongreeks_ == nullptr) {
        _this->_impl_.optiongreeks_ =
            ::google::protobuf::Message::CopyConstruct<::upstox::OptionGreeks>(arena, *from._impl_.optiongreeks_);
      } else {
        _this->_impl_.optiongreeks_->MergeFrom(*from._impl_.optiongreeks_);
      }
    }
    if (cached_has_bits & 0x00000008u) {
      ABSL_DCHECK(from._impl_.marketohlc_ != nullptr);
      if (_this->_impl_.marketohlc_ == nullptr) {
        _this->_impl_.marketohlc_ =
            ::google::protobuf::Message::CopyConstruct<::upstox::MarketOHLC>(arena, *from._impl_.marketohlc_);
      } else {
        _this->_impl_.marketohlc_->MergeFrom(*from._impl_.marketohlc_);
      }
    }
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_atp()) != 0) {
    _this->_impl_.atp_ = from._impl_.atp_;
  }
  if (from._internal_vtt() != 0) {
    _this->_impl_.vtt_ = from._impl_.vtt_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_oi()) != 0) {
    _this->_impl_.oi_ = from._impl_.oi_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_iv()) != 0) {
    _this->_impl_.iv_ = from._impl_.iv_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_tbq()) != 0) {
    _this->_impl_.tbq_ = from._impl_.tbq_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_tsq()) != 0) {
    _this->_impl_.tsq_ = from._impl_.tsq_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MarketFullFeed::CopyFrom(const MarketFullFeed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:upstox.MarketFullFeed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MarketFullFeed::InternalSwap(MarketFullFeed* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MarketFullFeed, _impl_.tsq_)
      + sizeof(MarketFullFeed::_impl_.tsq_)
      - PROTOBUF_FIELD_OFFSET(MarketFullFeed, _impl_.ltpc_)>(
          reinterpret_cast<char*>(&_impl_.ltpc_),
          reinterpret_cast<char*>(&other->_impl_.ltpc_));
}

::google::protobuf::Metadata MarketFullFeed::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class IndexFullFeed::_Internal {
 public:
  using HasBits =
      decltype(std::declval<IndexFullFeed>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(IndexFullFeed, _impl_._has_bits_);
};

IndexFullFeed::IndexFullFeed(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:upstox.IndexFullFeed)
}
inline PROTOBUF_NDEBUG_INLINE IndexFullFeed::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::upstox::IndexFullFeed& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

IndexFullFeed::IndexFullFeed(
    ::google::protobuf::Arena* arena,
    const IndexFullFeed& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  IndexFullFeed* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.ltpc_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::upstox::LTPC>(
                              arena, *from._impl_.ltpc_)
                        : nullptr;
  _impl_.marketohlc_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::upstox::MarketOHLC>(
                              arena, *from._impl_.marketohlc_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:upstox.IndexFullFeed)
}
inline PROTOBUF_NDEBUG_INLINE IndexFullFeed::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void IndexFullFeed::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ltpc_),
           0,
           offsetof(Impl_, marketohlc_) -
               offsetof(Impl_, ltpc_) +
               sizeof(Impl_::marketohlc_));
}
IndexFullFeed::~IndexFullFeed() {
  // @@protoc_insertion_point(destructor:upstox.IndexFullFeed)
  SharedDtor(*this);
}
inline void IndexFullFeed::SharedDtor(MessageLite& self) {
  IndexFullFeed& this_ = static_cast<IndexFullFeed&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.ltpc_;
  delete this_._impl_.marketohlc_;
  this_._impl_.~Impl_();
}

inline void* IndexFullFeed::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) IndexFullFeed(arena);
}
constexpr auto IndexFullFeed::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(IndexFullFeed),
                                            alignof(IndexFullFeed));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull IndexFullFeed::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_IndexFullFeed_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &IndexFullFeed::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<IndexFullFeed>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &IndexFullFeed::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<IndexFullFeed>(), &IndexFullFeed::ByteSizeLong,
            &IndexFullFeed::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(IndexFullFeed, _impl_._cached_size_),
        false,
    },
    &IndexFullFeed::kDescriptorMethods,
    &descriptor_table_MarketDataFeedV3_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* IndexFullFeed::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> IndexFullFeed::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(IndexFullFeed, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::upstox::IndexFullFeed>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .upstox.MarketOHLC marketOHLC = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(IndexFullFeed, _impl_.marketohlc_)}},
    // .upstox.LTPC ltpc = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(IndexFullFeed, _impl_.ltpc_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .upstox.LTPC ltpc = 1;
    {PROTOBUF_FIELD_OFFSET(IndexFullFeed, _impl_.ltpc_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .upstox.MarketOHLC marketOHLC = 2;
    {PROTOBUF_FIELD_OFFSET(IndexFullFeed, _impl_.marketohlc_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::upstox::LTPC>()},
    {::_pbi::TcParser::GetTable<::upstox::MarketOHLC>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void IndexFullFeed::Clear() {
// @@protoc_insertion_point(message_clear_start:upstox.IndexFullFeed)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.ltpc_ != nullptr);
      _impl_.ltpc_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.marketohlc_ != nullptr);
      _impl_.marketohlc_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* IndexFullFeed::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const IndexFullFeed& this_ = static_cast<const IndexFullFeed&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* IndexFullFeed::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const IndexFullFeed& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:upstox.IndexFullFeed)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .upstox.LTPC ltpc = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.ltpc_, this_._impl_.ltpc_->GetCachedSize(), target,
                stream);
          }

          // .upstox.MarketOHLC marketOHLC = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.marketohlc_, this_._impl_.marketohlc_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:upstox.IndexFullFeed)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t IndexFullFeed::ByteSizeLong(const MessageLite& base) {
          const IndexFullFeed& this_ = static_cast<const IndexFullFeed&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t IndexFullFeed::ByteSizeLong() const {
          const IndexFullFeed& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:upstox.IndexFullFeed)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .upstox.LTPC ltpc = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.ltpc_);
            }
            // .upstox.MarketOHLC marketOHLC = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.marketohlc_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void IndexFullFeed::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<IndexFullFeed*>(&to_msg);
  auto& from = static_cast<const IndexFullFeed&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:upstox.IndexFullFeed)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.ltpc_ != nullptr);
      if (_this->_impl_.ltpc_ == nullptr) {
        _this->_impl_.ltpc_ =
            ::google::protobuf::Message::CopyConstruct<::upstox::LTPC>(arena, *from._impl_.ltpc_);
      } else {
        _this->_impl_.ltpc_->MergeFrom(*from._impl_.ltpc_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.marketohlc_ != nullptr);
      if (_this->_impl_.marketohlc_ == nullptr) {
        _this->_impl_.marketohlc_ =
            ::google::protobuf::Message::CopyConstruct<::upstox::MarketOHLC>(arena, *from._impl_.marketohlc_);
      } else {
        _this->_impl_.marketohlc_->MergeFrom(*from._impl_.marketohlc_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void IndexFullFeed::CopyFrom(const IndexFullFeed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:upstox.IndexFullFeed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void IndexFullFeed::InternalSwap(IndexFullFeed* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(IndexFullFeed, _impl_.marketohlc_)
      + sizeof(IndexFullFeed::_impl_.marketohlc_)
      - PROTOBUF_FIELD_OFFSET(IndexFullFeed, _impl_.ltpc_)>(
          reinterpret_cast<char*>(&_impl_.ltpc_),
          reinterpret_cast<char*>(&other->_impl_.ltpc_));
}

::google::protobuf::Metadata IndexFullFeed::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FullFeed::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::upstox::FullFeed, _impl_._oneof_case_);
};

void FullFeed::set_allocated_marketff(::upstox::MarketFullFeed* marketff) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_FullFeedUnion();
  if (marketff) {
    ::google::protobuf::Arena* submessage_arena = marketff->GetArena();
    if (message_arena != submessage_arena) {
      marketff = ::google::protobuf::internal::GetOwnedMessage(message_arena, marketff, submessage_arena);
    }
    set_has_marketff();
    _impl_.FullFeedUnion_.marketff_ = marketff;
  }
  // @@protoc_insertion_point(field_set_allocated:upstox.FullFeed.marketFF)
}
void FullFeed::set_allocated_indexff(::upstox::IndexFullFeed* indexff) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_FullFeedUnion();
  if (indexff) {
    ::google::protobuf::Arena* submessage_arena = indexff->GetArena();
    if (message_arena != submessage_arena) {
      indexff = ::google::protobuf::internal::GetOwnedMessage(message_arena, indexff, submessage_arena);
    }
    set_has_indexff();
    _impl_.FullFeedUnion_.indexff_ = indexff;
  }
  // @@protoc_insertion_point(field_set_allocated:upstox.FullFeed.indexFF)
}
FullFeed::FullFeed(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:upstox.FullFeed)
}
inline PROTOBUF_NDEBUG_INLINE FullFeed::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::upstox::FullFeed& from_msg)
      : FullFeedUnion_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

FullFeed::FullFeed(
    ::google::protobuf::Arena* arena,
    const FullFeed& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FullFeed* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (FullFeedUnion_case()) {
    case FULLFEEDUNION_NOT_SET:
      break;
      case kMarketFF:
        _impl_.FullFeedUnion_.marketff_ = ::google::protobuf::Message::CopyConstruct<::upstox::MarketFullFeed>(arena, *from._impl_.FullFeedUnion_.marketff_);
        break;
      case kIndexFF:
        _impl_.FullFeedUnion_.indexff_ = ::google::protobuf::Message::CopyConstruct<::upstox::IndexFullFeed>(arena, *from._impl_.FullFeedUnion_.indexff_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:upstox.FullFeed)
}
inline PROTOBUF_NDEBUG_INLINE FullFeed::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : FullFeedUnion_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void FullFeed::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
FullFeed::~FullFeed() {
  // @@protoc_insertion_point(destructor:upstox.FullFeed)
  SharedDtor(*this);
}
inline void FullFeed::SharedDtor(MessageLite& self) {
  FullFeed& this_ = static_cast<FullFeed&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_FullFeedUnion()) {
    this_.clear_FullFeedUnion();
  }
  this_._impl_.~Impl_();
}

void FullFeed::clear_FullFeedUnion() {
// @@protoc_insertion_point(one_of_clear_start:upstox.FullFeed)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (FullFeedUnion_case()) {
    case kMarketFF: {
      if (GetArena() == nullptr) {
        delete _impl_.FullFeedUnion_.marketff_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.FullFeedUnion_.marketff_);
      }
      break;
    }
    case kIndexFF: {
      if (GetArena() == nullptr) {
        delete _impl_.FullFeedUnion_.indexff_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.FullFeedUnion_.indexff_);
      }
      break;
    }
    case FULLFEEDUNION_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = FULLFEEDUNION_NOT_SET;
}


inline void* FullFeed::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) FullFeed(arena);
}
constexpr auto FullFeed::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(FullFeed),
                                            alignof(FullFeed));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull FullFeed::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_FullFeed_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &FullFeed::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<FullFeed>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &FullFeed::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<FullFeed>(), &FullFeed::ByteSizeLong,
            &FullFeed::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(FullFeed, _impl_._cached_size_),
        false,
    },
    &FullFeed::kDescriptorMethods,
    &descriptor_table_MarketDataFeedV3_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* FullFeed::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2> FullFeed::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::upstox::FullFeed>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .upstox.MarketFullFeed marketFF = 1;
    {PROTOBUF_FIELD_OFFSET(FullFeed, _impl_.FullFeedUnion_.marketff_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .upstox.IndexFullFeed indexFF = 2;
    {PROTOBUF_FIELD_OFFSET(FullFeed, _impl_.FullFeedUnion_.indexff_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::upstox::MarketFullFeed>()},
    {::_pbi::TcParser::GetTable<::upstox::IndexFullFeed>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void FullFeed::Clear() {
// @@protoc_insertion_point(message_clear_start:upstox.FullFeed)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_FullFeedUnion();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* FullFeed::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const FullFeed& this_ = static_cast<const FullFeed&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* FullFeed::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const FullFeed& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:upstox.FullFeed)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.FullFeedUnion_case()) {
            case kMarketFF: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  1, *this_._impl_.FullFeedUnion_.marketff_, this_._impl_.FullFeedUnion_.marketff_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kIndexFF: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.FullFeedUnion_.indexff_, this_._impl_.FullFeedUnion_.indexff_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:upstox.FullFeed)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t FullFeed::ByteSizeLong(const MessageLite& base) {
          const FullFeed& this_ = static_cast<const FullFeed&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t FullFeed::ByteSizeLong() const {
          const FullFeed& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:upstox.FullFeed)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.FullFeedUnion_case()) {
            // .upstox.MarketFullFeed marketFF = 1;
            case kMarketFF: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.FullFeedUnion_.marketff_);
              break;
            }
            // .upstox.IndexFullFeed indexFF = 2;
            case kIndexFF: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.FullFeedUnion_.indexff_);
              break;
            }
            case FULLFEEDUNION_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void FullFeed::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FullFeed*>(&to_msg);
  auto& from = static_cast<const FullFeed&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:upstox.FullFeed)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_FullFeedUnion();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kMarketFF: {
        if (oneof_needs_init) {
          _this->_impl_.FullFeedUnion_.marketff_ =
              ::google::protobuf::Message::CopyConstruct<::upstox::MarketFullFeed>(arena, *from._impl_.FullFeedUnion_.marketff_);
        } else {
          _this->_impl_.FullFeedUnion_.marketff_->MergeFrom(from._internal_marketff());
        }
        break;
      }
      case kIndexFF: {
        if (oneof_needs_init) {
          _this->_impl_.FullFeedUnion_.indexff_ =
              ::google::protobuf::Message::CopyConstruct<::upstox::IndexFullFeed>(arena, *from._impl_.FullFeedUnion_.indexff_);
        } else {
          _this->_impl_.FullFeedUnion_.indexff_->MergeFrom(from._internal_indexff());
        }
        break;
      }
      case FULLFEEDUNION_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FullFeed::CopyFrom(const FullFeed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:upstox.FullFeed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FullFeed::InternalSwap(FullFeed* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.FullFeedUnion_, other->_impl_.FullFeedUnion_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata FullFeed::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FirstLevelWithGreeks::_Internal {
 public:
  using HasBits =
      decltype(std::declval<FirstLevelWithGreeks>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(FirstLevelWithGreeks, _impl_._has_bits_);
};

FirstLevelWithGreeks::FirstLevelWithGreeks(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:upstox.FirstLevelWithGreeks)
}
inline PROTOBUF_NDEBUG_INLINE FirstLevelWithGreeks::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::upstox::FirstLevelWithGreeks& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

FirstLevelWithGreeks::FirstLevelWithGreeks(
    ::google::protobuf::Arena* arena,
    const FirstLevelWithGreeks& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FirstLevelWithGreeks* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.ltpc_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::upstox::LTPC>(
                              arena, *from._impl_.ltpc_)
                        : nullptr;
  _impl_.firstdepth_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::upstox::Quote>(
                              arena, *from._impl_.firstdepth_)
                        : nullptr;
  _impl_.optiongreeks_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::upstox::OptionGreeks>(
                              arena, *from._impl_.optiongreeks_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, vtt_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, vtt_),
           offsetof(Impl_, iv_) -
               offsetof(Impl_, vtt_) +
               sizeof(Impl_::iv_));

  // @@protoc_insertion_point(copy_constructor:upstox.FirstLevelWithGreeks)
}
inline PROTOBUF_NDEBUG_INLINE FirstLevelWithGreeks::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void FirstLevelWithGreeks::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ltpc_),
           0,
           offsetof(Impl_, iv_) -
               offsetof(Impl_, ltpc_) +
               sizeof(Impl_::iv_));
}
FirstLevelWithGreeks::~FirstLevelWithGreeks() {
  // @@protoc_insertion_point(destructor:upstox.FirstLevelWithGreeks)
  SharedDtor(*this);
}
inline void FirstLevelWithGreeks::SharedDtor(MessageLite& self) {
  FirstLevelWithGreeks& this_ = static_cast<FirstLevelWithGreeks&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.ltpc_;
  delete this_._impl_.firstdepth_;
  delete this_._impl_.optiongreeks_;
  this_._impl_.~Impl_();
}

inline void* FirstLevelWithGreeks::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) FirstLevelWithGreeks(arena);
}
constexpr auto FirstLevelWithGreeks::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(FirstLevelWithGreeks),
                                            alignof(FirstLevelWithGreeks));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull FirstLevelWithGreeks::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_FirstLevelWithGreeks_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &FirstLevelWithGreeks::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<FirstLevelWithGreeks>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &FirstLevelWithGreeks::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<FirstLevelWithGreeks>(), &FirstLevelWithGreeks::ByteSizeLong,
            &FirstLevelWithGreeks::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(FirstLevelWithGreeks, _impl_._cached_size_),
        false,
    },
    &FirstLevelWithGreeks::kDescriptorMethods,
    &descriptor_table_MarketDataFeedV3_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* FirstLevelWithGreeks::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 3, 0, 2> FirstLevelWithGreeks::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FirstLevelWithGreeks, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::upstox::FirstLevelWithGreeks>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .upstox.LTPC ltpc = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(FirstLevelWithGreeks, _impl_.ltpc_)}},
    // .upstox.Quote firstDepth = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(FirstLevelWithGreeks, _impl_.firstdepth_)}},
    // .upstox.OptionGreeks optionGreeks = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(FirstLevelWithGreeks, _impl_.optiongreeks_)}},
    // int64 vtt = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(FirstLevelWithGreeks, _impl_.vtt_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(FirstLevelWithGreeks, _impl_.vtt_)}},
    // double oi = 5;
    {::_pbi::TcParser::FastF64S1,
     {41, 63, 0, PROTOBUF_FIELD_OFFSET(FirstLevelWithGreeks, _impl_.oi_)}},
    // double iv = 6;
    {::_pbi::TcParser::FastF64S1,
     {49, 63, 0, PROTOBUF_FIELD_OFFSET(FirstLevelWithGreeks, _impl_.iv_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .upstox.LTPC ltpc = 1;
    {PROTOBUF_FIELD_OFFSET(FirstLevelWithGreeks, _impl_.ltpc_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .upstox.Quote firstDepth = 2;
    {PROTOBUF_FIELD_OFFSET(FirstLevelWithGreeks, _impl_.firstdepth_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .upstox.OptionGreeks optionGreeks = 3;
    {PROTOBUF_FIELD_OFFSET(FirstLevelWithGreeks, _impl_.optiongreeks_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int64 vtt = 4;
    {PROTOBUF_FIELD_OFFSET(FirstLevelWithGreeks, _impl_.vtt_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // double oi = 5;
    {PROTOBUF_FIELD_OFFSET(FirstLevelWithGreeks, _impl_.oi_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
    // double iv = 6;
    {PROTOBUF_FIELD_OFFSET(FirstLevelWithGreeks, _impl_.iv_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kDouble)},
  }}, {{
    {::_pbi::TcParser::GetTable<::upstox::LTPC>()},
    {::_pbi::TcParser::GetTable<::upstox::Quote>()},
    {::_pbi::TcParser::GetTable<::upstox::OptionGreeks>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void FirstLevelWithGreeks::Clear() {
// @@protoc_insertion_point(message_clear_start:upstox.FirstLevelWithGreeks)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.ltpc_ != nullptr);
      _impl_.ltpc_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.firstdepth_ != nullptr);
      _impl_.firstdepth_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.optiongreeks_ != nullptr);
      _impl_.optiongreeks_->Clear();
    }
  }
  ::memset(&_impl_.vtt_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.iv_) -
      reinterpret_cast<char*>(&_impl_.vtt_)) + sizeof(_impl_.iv_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* FirstLevelWithGreeks::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const FirstLevelWithGreeks& this_ = static_cast<const FirstLevelWithGreeks&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* FirstLevelWithGreeks::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const FirstLevelWithGreeks& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:upstox.FirstLevelWithGreeks)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .upstox.LTPC ltpc = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.ltpc_, this_._impl_.ltpc_->GetCachedSize(), target,
                stream);
          }

          // .upstox.Quote firstDepth = 2;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.firstdepth_, this_._impl_.firstdepth_->GetCachedSize(), target,
                stream);
          }

          // .upstox.OptionGreeks optionGreeks = 3;
          if (cached_has_bits & 0x00000004u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.optiongreeks_, this_._impl_.optiongreeks_->GetCachedSize(), target,
                stream);
          }

          // int64 vtt = 4;
          if (this_._internal_vtt() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<4>(
                    stream, this_._internal_vtt(), target);
          }

          // double oi = 5;
          if (::absl::bit_cast<::uint64_t>(this_._internal_oi()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                5, this_._internal_oi(), target);
          }

          // double iv = 6;
          if (::absl::bit_cast<::uint64_t>(this_._internal_iv()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                6, this_._internal_iv(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:upstox.FirstLevelWithGreeks)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t FirstLevelWithGreeks::ByteSizeLong(const MessageLite& base) {
          const FirstLevelWithGreeks& this_ = static_cast<const FirstLevelWithGreeks&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t FirstLevelWithGreeks::ByteSizeLong() const {
          const FirstLevelWithGreeks& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:upstox.FirstLevelWithGreeks)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000007u) {
            // .upstox.LTPC ltpc = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.ltpc_);
            }
            // .upstox.Quote firstDepth = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.firstdepth_);
            }
            // .upstox.OptionGreeks optionGreeks = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.optiongreeks_);
            }
          }
           {
            // int64 vtt = 4;
            if (this_._internal_vtt() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_vtt());
            }
            // double oi = 5;
            if (::absl::bit_cast<::uint64_t>(this_._internal_oi()) != 0) {
              total_size += 9;
            }
            // double iv = 6;
            if (::absl::bit_cast<::uint64_t>(this_._internal_iv()) != 0) {
              total_size += 9;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void FirstLevelWithGreeks::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FirstLevelWithGreeks*>(&to_msg);
  auto& from = static_cast<const FirstLevelWithGreeks&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:upstox.FirstLevelWithGreeks)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.ltpc_ != nullptr);
      if (_this->_impl_.ltpc_ == nullptr) {
        _this->_impl_.ltpc_ =
            ::google::protobuf::Message::CopyConstruct<::upstox::LTPC>(arena, *from._impl_.ltpc_);
      } else {
        _this->_impl_.ltpc_->MergeFrom(*from._impl_.ltpc_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.firstdepth_ != nullptr);
      if (_this->_impl_.firstdepth_ == nullptr) {
        _this->_impl_.firstdepth_ =
            ::google::protobuf::Message::CopyConstruct<::upstox::Quote>(arena, *from._impl_.firstdepth_);
      } else {
        _this->_impl_.firstdepth_->MergeFrom(*from._impl_.firstdepth_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.optiongreeks_ != nullptr);
      if (_this->_impl_.optiongreeks_ == nullptr) {
        _this->_impl_.optiongreeks_ =
            ::google::protobuf::Message::CopyConstruct<::upstox::OptionGreeks>(arena, *from._impl_.optiongreeks_);
      } else {
        _this->_impl_.optiongreeks_->MergeFrom(*from._impl_.optiongreeks_);
      }
    }
  }
  if (from._internal_vtt() != 0) {
    _this->_impl_.vtt_ = from._impl_.vtt_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_oi()) != 0) {
    _this->_impl_.oi_ = from._impl_.oi_;
  }
  if (::absl::bit_cast<::uint64_t>(from._internal_iv()) != 0) {
    _this->_impl_.iv_ = from._impl_.iv_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FirstLevelWithGreeks::CopyFrom(const FirstLevelWithGreeks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:upstox.FirstLevelWithGreeks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FirstLevelWithGreeks::InternalSwap(FirstLevelWithGreeks* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FirstLevelWithGreeks, _impl_.iv_)
      + sizeof(FirstLevelWithGreeks::_impl_.iv_)
      - PROTOBUF_FIELD_OFFSET(FirstLevelWithGreeks, _impl_.ltpc_)>(
          reinterpret_cast<char*>(&_impl_.ltpc_),
          reinterpret_cast<char*>(&other->_impl_.ltpc_));
}

::google::protobuf::Metadata FirstLevelWithGreeks::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Feed::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::upstox::Feed, _impl_._oneof_case_);
};

void Feed::set_allocated_ltpc(::upstox::LTPC* ltpc) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_FeedUnion();
  if (ltpc) {
    ::google::protobuf::Arena* submessage_arena = ltpc->GetArena();
    if (message_arena != submessage_arena) {
      ltpc = ::google::protobuf::internal::GetOwnedMessage(message_arena, ltpc, submessage_arena);
    }
    set_has_ltpc();
    _impl_.FeedUnion_.ltpc_ = ltpc;
  }
  // @@protoc_insertion_point(field_set_allocated:upstox.Feed.ltpc)
}
void Feed::set_allocated_fullfeed(::upstox::FullFeed* fullfeed) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_FeedUnion();
  if (fullfeed) {
    ::google::protobuf::Arena* submessage_arena = fullfeed->GetArena();
    if (message_arena != submessage_arena) {
      fullfeed = ::google::protobuf::internal::GetOwnedMessage(message_arena, fullfeed, submessage_arena);
    }
    set_has_fullfeed();
    _impl_.FeedUnion_.fullfeed_ = fullfeed;
  }
  // @@protoc_insertion_point(field_set_allocated:upstox.Feed.fullFeed)
}
void Feed::set_allocated_firstlevelwithgreeks(::upstox::FirstLevelWithGreeks* firstlevelwithgreeks) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_FeedUnion();
  if (firstlevelwithgreeks) {
    ::google::protobuf::Arena* submessage_arena = firstlevelwithgreeks->GetArena();
    if (message_arena != submessage_arena) {
      firstlevelwithgreeks = ::google::protobuf::internal::GetOwnedMessage(message_arena, firstlevelwithgreeks, submessage_arena);
    }
    set_has_firstlevelwithgreeks();
    _impl_.FeedUnion_.firstlevelwithgreeks_ = firstlevelwithgreeks;
  }
  // @@protoc_insertion_point(field_set_allocated:upstox.Feed.firstLevelWithGreeks)
}
Feed::Feed(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:upstox.Feed)
}
inline PROTOBUF_NDEBUG_INLINE Feed::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::upstox::Feed& from_msg)
      : FeedUnion_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

Feed::Feed(
    ::google::protobuf::Arena* arena,
    const Feed& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Feed* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.requestmode_ = from._impl_.requestmode_;
  switch (FeedUnion_case()) {
    case FEEDUNION_NOT_SET:
      break;
      case kLtpc:
        _impl_.FeedUnion_.ltpc_ = ::google::protobuf::Message::CopyConstruct<::upstox::LTPC>(arena, *from._impl_.FeedUnion_.ltpc_);
        break;
      case kFullFeed:
        _impl_.FeedUnion_.fullfeed_ = ::google::protobuf::Message::CopyConstruct<::upstox::FullFeed>(arena, *from._impl_.FeedUnion_.fullfeed_);
        break;
      case kFirstLevelWithGreeks:
        _impl_.FeedUnion_.firstlevelwithgreeks_ = ::google::protobuf::Message::CopyConstruct<::upstox::FirstLevelWithGreeks>(arena, *from._impl_.FeedUnion_.firstlevelwithgreeks_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:upstox.Feed)
}
inline PROTOBUF_NDEBUG_INLINE Feed::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : FeedUnion_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void Feed::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.requestmode_ = {};
}
Feed::~Feed() {
  // @@protoc_insertion_point(destructor:upstox.Feed)
  SharedDtor(*this);
}
inline void Feed::SharedDtor(MessageLite& self) {
  Feed& this_ = static_cast<Feed&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_FeedUnion()) {
    this_.clear_FeedUnion();
  }
  this_._impl_.~Impl_();
}

void Feed::clear_FeedUnion() {
// @@protoc_insertion_point(one_of_clear_start:upstox.Feed)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (FeedUnion_case()) {
    case kLtpc: {
      if (GetArena() == nullptr) {
        delete _impl_.FeedUnion_.ltpc_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.FeedUnion_.ltpc_);
      }
      break;
    }
    case kFullFeed: {
      if (GetArena() == nullptr) {
        delete _impl_.FeedUnion_.fullfeed_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.FeedUnion_.fullfeed_);
      }
      break;
    }
    case kFirstLevelWithGreeks: {
      if (GetArena() == nullptr) {
        delete _impl_.FeedUnion_.firstlevelwithgreeks_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.FeedUnion_.firstlevelwithgreeks_);
      }
      break;
    }
    case FEEDUNION_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = FEEDUNION_NOT_SET;
}


inline void* Feed::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Feed(arena);
}
constexpr auto Feed::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Feed),
                                            alignof(Feed));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Feed::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Feed_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Feed::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Feed>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Feed::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Feed>(), &Feed::ByteSizeLong,
            &Feed::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Feed, _impl_._cached_size_),
        false,
    },
    &Feed::kDescriptorMethods,
    &descriptor_table_MarketDataFeedV3_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Feed::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 4, 3, 0, 2> Feed::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::upstox::Feed>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .upstox.RequestMode requestMode = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Feed, _impl_.requestmode_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Feed, _impl_.requestmode_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .upstox.LTPC ltpc = 1;
    {PROTOBUF_FIELD_OFFSET(Feed, _impl_.FeedUnion_.ltpc_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .upstox.FullFeed fullFeed = 2;
    {PROTOBUF_FIELD_OFFSET(Feed, _impl_.FeedUnion_.fullfeed_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .upstox.FirstLevelWithGreeks firstLevelWithGreeks = 3;
    {PROTOBUF_FIELD_OFFSET(Feed, _impl_.FeedUnion_.firstlevelwithgreeks_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .upstox.RequestMode requestMode = 4;
    {PROTOBUF_FIELD_OFFSET(Feed, _impl_.requestmode_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::upstox::LTPC>()},
    {::_pbi::TcParser::GetTable<::upstox::FullFeed>()},
    {::_pbi::TcParser::GetTable<::upstox::FirstLevelWithGreeks>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Feed::Clear() {
// @@protoc_insertion_point(message_clear_start:upstox.Feed)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.requestmode_ = 0;
  clear_FeedUnion();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Feed::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Feed& this_ = static_cast<const Feed&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Feed::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Feed& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:upstox.Feed)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.FeedUnion_case()) {
            case kLtpc: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  1, *this_._impl_.FeedUnion_.ltpc_, this_._impl_.FeedUnion_.ltpc_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kFullFeed: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.FeedUnion_.fullfeed_, this_._impl_.FeedUnion_.fullfeed_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kFirstLevelWithGreeks: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  3, *this_._impl_.FeedUnion_.firstlevelwithgreeks_, this_._impl_.FeedUnion_.firstlevelwithgreeks_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          // .upstox.RequestMode requestMode = 4;
          if (this_._internal_requestmode() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_requestmode(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:upstox.Feed)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Feed::ByteSizeLong(const MessageLite& base) {
          const Feed& this_ = static_cast<const Feed&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Feed::ByteSizeLong() const {
          const Feed& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:upstox.Feed)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .upstox.RequestMode requestMode = 4;
            if (this_._internal_requestmode() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_requestmode());
            }
          }
          switch (this_.FeedUnion_case()) {
            // .upstox.LTPC ltpc = 1;
            case kLtpc: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.FeedUnion_.ltpc_);
              break;
            }
            // .upstox.FullFeed fullFeed = 2;
            case kFullFeed: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.FeedUnion_.fullfeed_);
              break;
            }
            // .upstox.FirstLevelWithGreeks firstLevelWithGreeks = 3;
            case kFirstLevelWithGreeks: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.FeedUnion_.firstlevelwithgreeks_);
              break;
            }
            case FEEDUNION_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Feed::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Feed*>(&to_msg);
  auto& from = static_cast<const Feed&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:upstox.Feed)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_requestmode() != 0) {
    _this->_impl_.requestmode_ = from._impl_.requestmode_;
  }
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_FeedUnion();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kLtpc: {
        if (oneof_needs_init) {
          _this->_impl_.FeedUnion_.ltpc_ =
              ::google::protobuf::Message::CopyConstruct<::upstox::LTPC>(arena, *from._impl_.FeedUnion_.ltpc_);
        } else {
          _this->_impl_.FeedUnion_.ltpc_->MergeFrom(from._internal_ltpc());
        }
        break;
      }
      case kFullFeed: {
        if (oneof_needs_init) {
          _this->_impl_.FeedUnion_.fullfeed_ =
              ::google::protobuf::Message::CopyConstruct<::upstox::FullFeed>(arena, *from._impl_.FeedUnion_.fullfeed_);
        } else {
          _this->_impl_.FeedUnion_.fullfeed_->MergeFrom(from._internal_fullfeed());
        }
        break;
      }
      case kFirstLevelWithGreeks: {
        if (oneof_needs_init) {
          _this->_impl_.FeedUnion_.firstlevelwithgreeks_ =
              ::google::protobuf::Message::CopyConstruct<::upstox::FirstLevelWithGreeks>(arena, *from._impl_.FeedUnion_.firstlevelwithgreeks_);
        } else {
          _this->_impl_.FeedUnion_.firstlevelwithgreeks_->MergeFrom(from._internal_firstlevelwithgreeks());
        }
        break;
      }
      case FEEDUNION_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Feed::CopyFrom(const Feed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:upstox.Feed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Feed::InternalSwap(Feed* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.requestmode_, other->_impl_.requestmode_);
  swap(_impl_.FeedUnion_, other->_impl_.FeedUnion_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata Feed::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              MarketInfo_SegmentStatusEntry_DoNotUse::MarketInfo_SegmentStatusEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              MarketInfo_SegmentStatusEntry_DoNotUse::MarketInfo_SegmentStatusEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              MarketInfo_SegmentStatusEntry_DoNotUse::MarketInfo_SegmentStatusEntry_DoNotUse() : SuperType() {}
              MarketInfo_SegmentStatusEntry_DoNotUse::MarketInfo_SegmentStatusEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* MarketInfo_SegmentStatusEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) MarketInfo_SegmentStatusEntry_DoNotUse(arena);
              }
              constexpr auto MarketInfo_SegmentStatusEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(MarketInfo_SegmentStatusEntry_DoNotUse),
                                                          alignof(MarketInfo_SegmentStatusEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull MarketInfo_SegmentStatusEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_MarketInfo_SegmentStatusEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &MarketInfo_SegmentStatusEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<MarketInfo_SegmentStatusEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &MarketInfo_SegmentStatusEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &MarketInfo_SegmentStatusEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(MarketInfo_SegmentStatusEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &MarketInfo_SegmentStatusEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_MarketDataFeedV3_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* MarketInfo_SegmentStatusEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 48, 2> MarketInfo_SegmentStatusEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MarketInfo_SegmentStatusEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::upstox::MarketInfo_SegmentStatusEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .upstox.MarketStatus value = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MarketInfo_SegmentStatusEntry_DoNotUse, _impl_.value_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MarketInfo_SegmentStatusEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MarketInfo_SegmentStatusEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(MarketInfo_SegmentStatusEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .upstox.MarketStatus value = 2;
    {PROTOBUF_FIELD_OFFSET(MarketInfo_SegmentStatusEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\44\3\0\0\0\0\0\0"
    "upstox.MarketInfo.SegmentStatusEntry"
    "key"
  }},
};

// ===================================================================

class MarketInfo::_Internal {
 public:
};

MarketInfo::MarketInfo(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:upstox.MarketInfo)
}
inline PROTOBUF_NDEBUG_INLINE MarketInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::upstox::MarketInfo& from_msg)
      : segmentstatus_{visibility, arena, from.segmentstatus_},
        _cached_size_{0} {}

MarketInfo::MarketInfo(
    ::google::protobuf::Arena* arena,
    const MarketInfo& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MarketInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:upstox.MarketInfo)
}
inline PROTOBUF_NDEBUG_INLINE MarketInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : segmentstatus_{visibility, arena},
        _cached_size_{0} {}

inline void MarketInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
MarketInfo::~MarketInfo() {
  // @@protoc_insertion_point(destructor:upstox.MarketInfo)
  SharedDtor(*this);
}
inline void MarketInfo::SharedDtor(MessageLite& self) {
  MarketInfo& this_ = static_cast<MarketInfo&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* MarketInfo::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) MarketInfo(arena);
}
constexpr auto MarketInfo::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(MarketInfo, _impl_.segmentstatus_) +
          decltype(MarketInfo::_impl_.segmentstatus_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(MarketInfo, _impl_.segmentstatus_) +
          decltype(MarketInfo::_impl_.segmentstatus_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(MarketInfo), alignof(MarketInfo), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&MarketInfo::PlacementNew_,
                                 sizeof(MarketInfo),
                                 alignof(MarketInfo));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull MarketInfo::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_MarketInfo_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &MarketInfo::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<MarketInfo>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &MarketInfo::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<MarketInfo>(), &MarketInfo::ByteSizeLong,
            &MarketInfo::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(MarketInfo, _impl_._cached_size_),
        false,
    },
    &MarketInfo::kDescriptorMethods,
    &descriptor_table_MarketDataFeedV3_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* MarketInfo::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 39, 2> MarketInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::upstox::MarketInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // map<string, .upstox.MarketStatus> segmentStatus = 1;
    {PROTOBUF_FIELD_OFFSET(MarketInfo, _impl_.segmentstatus_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(MarketInfo()._impl_.segmentstatus_)>(
        1, 0, 0, 9,
        14)},
  }}, {{
    "\21\15\0\0\0\0\0\0"
    "upstox.MarketInfo"
    "segmentStatus"
  }},
};

PROTOBUF_NOINLINE void MarketInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:upstox.MarketInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.segmentstatus_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MarketInfo::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MarketInfo& this_ = static_cast<const MarketInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MarketInfo::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MarketInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:upstox.MarketInfo)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // map<string, .upstox.MarketStatus> segmentStatus = 1;
          if (!this_._internal_segmentstatus().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::upstox::MarketStatus>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::upstox::MarketStatus,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_ENUM>;
            const auto& field = this_._internal_segmentstatus();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    1, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "upstox.MarketInfo.segmentStatus");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    1, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "upstox.MarketInfo.segmentStatus");
              }
            }
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:upstox.MarketInfo)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MarketInfo::ByteSizeLong(const MessageLite& base) {
          const MarketInfo& this_ = static_cast<const MarketInfo&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MarketInfo::ByteSizeLong() const {
          const MarketInfo& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:upstox.MarketInfo)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, .upstox.MarketStatus> segmentStatus = 1;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_segmentstatus_size());
              for (const auto& entry : this_._internal_segmentstatus()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::upstox::MarketStatus,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_ENUM>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MarketInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MarketInfo*>(&to_msg);
  auto& from = static_cast<const MarketInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:upstox.MarketInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.segmentstatus_.MergeFrom(from._impl_.segmentstatus_);
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MarketInfo::CopyFrom(const MarketInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:upstox.MarketInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MarketInfo::InternalSwap(MarketInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.segmentstatus_.InternalSwap(&other->_impl_.segmentstatus_);
}

::google::protobuf::Metadata MarketInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              FeedResponse_FeedsEntry_DoNotUse::FeedResponse_FeedsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              FeedResponse_FeedsEntry_DoNotUse::FeedResponse_FeedsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              FeedResponse_FeedsEntry_DoNotUse::FeedResponse_FeedsEntry_DoNotUse() : SuperType() {}
              FeedResponse_FeedsEntry_DoNotUse::FeedResponse_FeedsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              inline void* FeedResponse_FeedsEntry_DoNotUse::PlacementNew_(const void*, void* mem,
                                                      ::google::protobuf::Arena* arena) {
                return ::new (mem) FeedResponse_FeedsEntry_DoNotUse(arena);
              }
              constexpr auto FeedResponse_FeedsEntry_DoNotUse::InternalNewImpl_() {
                return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(FeedResponse_FeedsEntry_DoNotUse),
                                                          alignof(FeedResponse_FeedsEntry_DoNotUse));
              }
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::internal::ClassDataFull FeedResponse_FeedsEntry_DoNotUse::_class_data_ = {
                  ::google::protobuf::internal::ClassData{
                      &_FeedResponse_FeedsEntry_DoNotUse_default_instance_._instance,
                      &_table_.header,
                      nullptr,  // OnDemandRegisterArenaDtor
                      nullptr,  // IsInitialized
                      &FeedResponse_FeedsEntry_DoNotUse::MergeImpl,
                      ::google::protobuf::Message::GetNewImpl<FeedResponse_FeedsEntry_DoNotUse>(),
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                      &FeedResponse_FeedsEntry_DoNotUse::SharedDtor,
                      static_cast<void (::google::protobuf::MessageLite::*)()>(
                          &FeedResponse_FeedsEntry_DoNotUse::ClearImpl),
                          ::google::protobuf::Message::ByteSizeLongImpl, ::google::protobuf::Message::_InternalSerializeImpl
                          ,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                      PROTOBUF_FIELD_OFFSET(FeedResponse_FeedsEntry_DoNotUse, _impl_._cached_size_),
                      false,
                  },
                  &FeedResponse_FeedsEntry_DoNotUse::kDescriptorMethods,
                  &descriptor_table_MarketDataFeedV3_2eproto,
                  nullptr,  // tracker
              };
              const ::google::protobuf::internal::ClassData* FeedResponse_FeedsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 42, 2> FeedResponse_FeedsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FeedResponse_FeedsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::upstox::FeedResponse_FeedsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .upstox.Feed value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(FeedResponse_FeedsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(FeedResponse_FeedsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(FeedResponse_FeedsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .upstox.Feed value = 2;
    {PROTOBUF_FIELD_OFFSET(FeedResponse_FeedsEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::upstox::Feed>()},
  }}, {{
    "\36\3\0\0\0\0\0\0"
    "upstox.FeedResponse.FeedsEntry"
    "key"
  }},
};

// ===================================================================

class FeedResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<FeedResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(FeedResponse, _impl_._has_bits_);
};

FeedResponse::FeedResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:upstox.FeedResponse)
}
inline PROTOBUF_NDEBUG_INLINE FeedResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::upstox::FeedResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        feeds_{visibility, arena, from.feeds_} {}

FeedResponse::FeedResponse(
    ::google::protobuf::Arena* arena,
    const FeedResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FeedResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.marketinfo_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::upstox::MarketInfo>(
                              arena, *from._impl_.marketinfo_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, currentts_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, currentts_),
           offsetof(Impl_, type_) -
               offsetof(Impl_, currentts_) +
               sizeof(Impl_::type_));

  // @@protoc_insertion_point(copy_constructor:upstox.FeedResponse)
}
inline PROTOBUF_NDEBUG_INLINE FeedResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        feeds_{visibility, arena} {}

inline void FeedResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, marketinfo_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, marketinfo_) +
               sizeof(Impl_::type_));
}
FeedResponse::~FeedResponse() {
  // @@protoc_insertion_point(destructor:upstox.FeedResponse)
  SharedDtor(*this);
}
inline void FeedResponse::SharedDtor(MessageLite& self) {
  FeedResponse& this_ = static_cast<FeedResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.marketinfo_;
  this_._impl_.~Impl_();
}

inline void* FeedResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) FeedResponse(arena);
}
constexpr auto FeedResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(FeedResponse, _impl_.feeds_) +
          decltype(FeedResponse::_impl_.feeds_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
      PROTOBUF_FIELD_OFFSET(FeedResponse, _impl_.feeds_) +
          decltype(FeedResponse::_impl_.feeds_)::
              InternalGetArenaOffsetAlt(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(FeedResponse), alignof(FeedResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&FeedResponse::PlacementNew_,
                                 sizeof(FeedResponse),
                                 alignof(FeedResponse));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull FeedResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_FeedResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &FeedResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<FeedResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &FeedResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<FeedResponse>(), &FeedResponse::ByteSizeLong,
            &FeedResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(FeedResponse, _impl_._cached_size_),
        false,
    },
    &FeedResponse::kDescriptorMethods,
    &descriptor_table_MarketDataFeedV3_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* FeedResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 3, 33, 2> FeedResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(FeedResponse, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::upstox::FeedResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .upstox.MarketInfo marketInfo = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(FeedResponse, _impl_.marketinfo_)}},
    // .upstox.Type type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(FeedResponse, _impl_.type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(FeedResponse, _impl_.type_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // int64 currentTs = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(FeedResponse, _impl_.currentts_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(FeedResponse, _impl_.currentts_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .upstox.Type type = 1;
    {PROTOBUF_FIELD_OFFSET(FeedResponse, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // map<string, .upstox.Feed> feeds = 2;
    {PROTOBUF_FIELD_OFFSET(FeedResponse, _impl_.feeds_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // int64 currentTs = 3;
    {PROTOBUF_FIELD_OFFSET(FeedResponse, _impl_.currentts_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // .upstox.MarketInfo marketInfo = 4;
    {PROTOBUF_FIELD_OFFSET(FeedResponse, _impl_.marketinfo_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::upstox::MarketInfo>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(FeedResponse()._impl_.feeds_)>(
        1, 0, 0, 9,
        11)},
    {::_pbi::TcParser::GetTable<::upstox::Feed>()},
  }}, {{
    "\23\0\5\0\0\0\0\0"
    "upstox.FeedResponse"
    "feeds"
  }},
};

PROTOBUF_NOINLINE void FeedResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:upstox.FeedResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.feeds_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.marketinfo_ != nullptr);
    _impl_.marketinfo_->Clear();
  }
  ::memset(&_impl_.currentts_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.type_) -
      reinterpret_cast<char*>(&_impl_.currentts_)) + sizeof(_impl_.type_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* FeedResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const FeedResponse& this_ = static_cast<const FeedResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* FeedResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const FeedResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:upstox.FeedResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // .upstox.Type type = 1;
          if (this_._internal_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                1, this_._internal_type(), target);
          }

          // map<string, .upstox.Feed> feeds = 2;
          if (!this_._internal_feeds().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::upstox::Feed>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::upstox::Feed,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_MESSAGE>;
            const auto& field = this_._internal_feeds();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    2, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "upstox.FeedResponse.feeds");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    2, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "upstox.FeedResponse.feeds");
              }
            }
          }

          // int64 currentTs = 3;
          if (this_._internal_currentts() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_currentts(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .upstox.MarketInfo marketInfo = 4;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.marketinfo_, this_._impl_.marketinfo_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:upstox.FeedResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t FeedResponse::ByteSizeLong(const MessageLite& base) {
          const FeedResponse& this_ = static_cast<const FeedResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t FeedResponse::ByteSizeLong() const {
          const FeedResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:upstox.FeedResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, .upstox.Feed> feeds = 2;
            {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_feeds_size());
              for (const auto& entry : this_._internal_feeds()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::upstox::Feed,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // .upstox.MarketInfo marketInfo = 4;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.marketinfo_);
            }
          }
           {
            // int64 currentTs = 3;
            if (this_._internal_currentts() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_currentts());
            }
            // .upstox.Type type = 1;
            if (this_._internal_type() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void FeedResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FeedResponse*>(&to_msg);
  auto& from = static_cast<const FeedResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:upstox.FeedResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.feeds_.MergeFrom(from._impl_.feeds_);
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.marketinfo_ != nullptr);
    if (_this->_impl_.marketinfo_ == nullptr) {
      _this->_impl_.marketinfo_ =
          ::google::protobuf::Message::CopyConstruct<::upstox::MarketInfo>(arena, *from._impl_.marketinfo_);
    } else {
      _this->_impl_.marketinfo_->MergeFrom(*from._impl_.marketinfo_);
    }
  }
  if (from._internal_currentts() != 0) {
    _this->_impl_.currentts_ = from._impl_.currentts_;
  }
  if (from._internal_type() != 0) {
    _this->_impl_.type_ = from._impl_.type_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FeedResponse::CopyFrom(const FeedResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:upstox.FeedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FeedResponse::InternalSwap(FeedResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.feeds_.InternalSwap(&other->_impl_.feeds_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FeedResponse, _impl_.type_)
      + sizeof(FeedResponse::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(FeedResponse, _impl_.marketinfo_)>(
          reinterpret_cast<char*>(&_impl_.marketinfo_),
          reinterpret_cast<char*>(&other->_impl_.marketinfo_));
}

::google::protobuf::Metadata FeedResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace upstox
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_MarketDataFeedV3_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
